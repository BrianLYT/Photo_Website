{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Module\")} Module */\n\n\nclass WarnCaseSensitiveModulesPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"WarnCaseSensitiveModulesPlugin\", compilation => {\n      compilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", () => {\n        /** @type {Map<string, Map<string, Module>>} */\n        const moduleWithoutCase = new Map();\n\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n          const lowerIdentifier = identifier.toLowerCase();\n          let map = moduleWithoutCase.get(lowerIdentifier);\n\n          if (map === undefined) {\n            map = new Map();\n            moduleWithoutCase.set(lowerIdentifier, map);\n          }\n\n          map.set(identifier, module);\n        }\n\n        for (const pair of moduleWithoutCase) {\n          const map = pair[1];\n\n          if (map.size > 1) {\n            compilation.warnings.push(new CaseSensitiveModulesWarning(map.values(), compilation.moduleGraph));\n          }\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = WarnCaseSensitiveModulesPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/WarnCaseSensitiveModulesPlugin.js"],"names":["CaseSensitiveModulesWarning","require","WarnCaseSensitiveModulesPlugin","apply","compiler","hooks","compilation","tap","seal","moduleWithoutCase","Map","module","modules","identifier","lowerIdentifier","toLowerCase","map","get","undefined","set","pair","size","warnings","push","values","moduleGraph","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAAD,CAA3C;AAEA;;AACA;;;AAEA,MAAMC,8BAAN,CAAqC;AACpC;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,gCADD,EAECD,WAAW,IAAI;AACdA,MAAAA,WAAW,CAACD,KAAZ,CAAkBG,IAAlB,CAAuBD,GAAvB,CAA2B,gCAA3B,EAA6D,MAAM;AAClE;AACA,cAAME,iBAAiB,GAAG,IAAIC,GAAJ,EAA1B;;AACA,aAAK,MAAMC,MAAX,IAAqBL,WAAW,CAACM,OAAjC,EAA0C;AACzC,gBAAMC,UAAU,GAAGF,MAAM,CAACE,UAAP,EAAnB;AACA,gBAAMC,eAAe,GAAGD,UAAU,CAACE,WAAX,EAAxB;AACA,cAAIC,GAAG,GAAGP,iBAAiB,CAACQ,GAAlB,CAAsBH,eAAtB,CAAV;;AACA,cAAIE,GAAG,KAAKE,SAAZ,EAAuB;AACtBF,YAAAA,GAAG,GAAG,IAAIN,GAAJ,EAAN;AACAD,YAAAA,iBAAiB,CAACU,GAAlB,CAAsBL,eAAtB,EAAuCE,GAAvC;AACA;;AACDA,UAAAA,GAAG,CAACG,GAAJ,CAAQN,UAAR,EAAoBF,MAApB;AACA;;AACD,aAAK,MAAMS,IAAX,IAAmBX,iBAAnB,EAAsC;AACrC,gBAAMO,GAAG,GAAGI,IAAI,CAAC,CAAD,CAAhB;;AACA,cAAIJ,GAAG,CAACK,IAAJ,GAAW,CAAf,EAAkB;AACjBf,YAAAA,WAAW,CAACgB,QAAZ,CAAqBC,IAArB,CACC,IAAIvB,2BAAJ,CACCgB,GAAG,CAACQ,MAAJ,EADD,EAEClB,WAAW,CAACmB,WAFb,CADD;AAMA;AACD;AACD,OAxBD;AAyBA,KA5BF;AA8BA;;AArCmC;;AAwCrCd,MAAM,CAACe,OAAP,GAAiBxB,8BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n\nclass WarnCaseSensitiveModulesPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WarnCaseSensitiveModulesPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", () => {\n\t\t\t\t\t/** @type {Map<string, Map<string, Module>>} */\n\t\t\t\t\tconst moduleWithoutCase = new Map();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\tconst lowerIdentifier = identifier.toLowerCase();\n\t\t\t\t\t\tlet map = moduleWithoutCase.get(lowerIdentifier);\n\t\t\t\t\t\tif (map === undefined) {\n\t\t\t\t\t\t\tmap = new Map();\n\t\t\t\t\t\t\tmoduleWithoutCase.set(lowerIdentifier, map);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmap.set(identifier, module);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const pair of moduleWithoutCase) {\n\t\t\t\t\t\tconst map = pair[1];\n\t\t\t\t\t\tif (map.size > 1) {\n\t\t\t\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\t\t\t\tnew CaseSensitiveModulesWarning(\n\t\t\t\t\t\t\t\t\tmap.values(),\n\t\t\t\t\t\t\t\t\tcompilation.moduleGraph\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = WarnCaseSensitiveModulesPlugin;\n"]},"metadata":{},"sourceType":"script"}