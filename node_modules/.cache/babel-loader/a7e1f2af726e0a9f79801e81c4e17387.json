{"ast":null,"code":"/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint vars:false, bitwise:true*/\n\n/*jshint indent:4*/\n\n/*global exports:true*/\n(function clone(exports) {\n  'use strict';\n\n  var Syntax, VisitorOption, VisitorKeys, BREAK, SKIP, REMOVE;\n\n  function deepCopy(obj) {\n    var ret = {},\n        key,\n        val;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        val = obj[key];\n\n        if (typeof val === 'object' && val !== null) {\n          ret[key] = deepCopy(val);\n        } else {\n          ret[key] = val;\n        }\n      }\n    }\n\n    return ret;\n  } // based on LLVM libc++ upper_bound / lower_bound\n  // MIT License\n\n\n  function upperBound(array, func) {\n    var diff, len, i, current;\n    len = array.length;\n    i = 0;\n\n    while (len) {\n      diff = len >>> 1;\n      current = i + diff;\n\n      if (func(array[current])) {\n        len = diff;\n      } else {\n        i = current + 1;\n        len -= diff + 1;\n      }\n    }\n\n    return i;\n  }\n\n  Syntax = {\n    AssignmentExpression: 'AssignmentExpression',\n    AssignmentPattern: 'AssignmentPattern',\n    ArrayExpression: 'ArrayExpression',\n    ArrayPattern: 'ArrayPattern',\n    ArrowFunctionExpression: 'ArrowFunctionExpression',\n    AwaitExpression: 'AwaitExpression',\n    // CAUTION: It's deferred to ES7.\n    BlockStatement: 'BlockStatement',\n    BinaryExpression: 'BinaryExpression',\n    BreakStatement: 'BreakStatement',\n    CallExpression: 'CallExpression',\n    CatchClause: 'CatchClause',\n    ChainExpression: 'ChainExpression',\n    ClassBody: 'ClassBody',\n    ClassDeclaration: 'ClassDeclaration',\n    ClassExpression: 'ClassExpression',\n    ComprehensionBlock: 'ComprehensionBlock',\n    // CAUTION: It's deferred to ES7.\n    ComprehensionExpression: 'ComprehensionExpression',\n    // CAUTION: It's deferred to ES7.\n    ConditionalExpression: 'ConditionalExpression',\n    ContinueStatement: 'ContinueStatement',\n    DebuggerStatement: 'DebuggerStatement',\n    DirectiveStatement: 'DirectiveStatement',\n    DoWhileStatement: 'DoWhileStatement',\n    EmptyStatement: 'EmptyStatement',\n    ExportAllDeclaration: 'ExportAllDeclaration',\n    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n    ExportNamedDeclaration: 'ExportNamedDeclaration',\n    ExportSpecifier: 'ExportSpecifier',\n    ExpressionStatement: 'ExpressionStatement',\n    ForStatement: 'ForStatement',\n    ForInStatement: 'ForInStatement',\n    ForOfStatement: 'ForOfStatement',\n    FunctionDeclaration: 'FunctionDeclaration',\n    FunctionExpression: 'FunctionExpression',\n    GeneratorExpression: 'GeneratorExpression',\n    // CAUTION: It's deferred to ES7.\n    Identifier: 'Identifier',\n    IfStatement: 'IfStatement',\n    ImportExpression: 'ImportExpression',\n    ImportDeclaration: 'ImportDeclaration',\n    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n    ImportSpecifier: 'ImportSpecifier',\n    Literal: 'Literal',\n    LabeledStatement: 'LabeledStatement',\n    LogicalExpression: 'LogicalExpression',\n    MemberExpression: 'MemberExpression',\n    MetaProperty: 'MetaProperty',\n    MethodDefinition: 'MethodDefinition',\n    ModuleSpecifier: 'ModuleSpecifier',\n    NewExpression: 'NewExpression',\n    ObjectExpression: 'ObjectExpression',\n    ObjectPattern: 'ObjectPattern',\n    PrivateIdentifier: 'PrivateIdentifier',\n    Program: 'Program',\n    Property: 'Property',\n    PropertyDefinition: 'PropertyDefinition',\n    RestElement: 'RestElement',\n    ReturnStatement: 'ReturnStatement',\n    SequenceExpression: 'SequenceExpression',\n    SpreadElement: 'SpreadElement',\n    Super: 'Super',\n    SwitchStatement: 'SwitchStatement',\n    SwitchCase: 'SwitchCase',\n    TaggedTemplateExpression: 'TaggedTemplateExpression',\n    TemplateElement: 'TemplateElement',\n    TemplateLiteral: 'TemplateLiteral',\n    ThisExpression: 'ThisExpression',\n    ThrowStatement: 'ThrowStatement',\n    TryStatement: 'TryStatement',\n    UnaryExpression: 'UnaryExpression',\n    UpdateExpression: 'UpdateExpression',\n    VariableDeclaration: 'VariableDeclaration',\n    VariableDeclarator: 'VariableDeclarator',\n    WhileStatement: 'WhileStatement',\n    WithStatement: 'WithStatement',\n    YieldExpression: 'YieldExpression'\n  };\n  VisitorKeys = {\n    AssignmentExpression: ['left', 'right'],\n    AssignmentPattern: ['left', 'right'],\n    ArrayExpression: ['elements'],\n    ArrayPattern: ['elements'],\n    ArrowFunctionExpression: ['params', 'body'],\n    AwaitExpression: ['argument'],\n    // CAUTION: It's deferred to ES7.\n    BlockStatement: ['body'],\n    BinaryExpression: ['left', 'right'],\n    BreakStatement: ['label'],\n    CallExpression: ['callee', 'arguments'],\n    CatchClause: ['param', 'body'],\n    ChainExpression: ['expression'],\n    ClassBody: ['body'],\n    ClassDeclaration: ['id', 'superClass', 'body'],\n    ClassExpression: ['id', 'superClass', 'body'],\n    ComprehensionBlock: ['left', 'right'],\n    // CAUTION: It's deferred to ES7.\n    ComprehensionExpression: ['blocks', 'filter', 'body'],\n    // CAUTION: It's deferred to ES7.\n    ConditionalExpression: ['test', 'consequent', 'alternate'],\n    ContinueStatement: ['label'],\n    DebuggerStatement: [],\n    DirectiveStatement: [],\n    DoWhileStatement: ['body', 'test'],\n    EmptyStatement: [],\n    ExportAllDeclaration: ['source'],\n    ExportDefaultDeclaration: ['declaration'],\n    ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n    ExportSpecifier: ['exported', 'local'],\n    ExpressionStatement: ['expression'],\n    ForStatement: ['init', 'test', 'update', 'body'],\n    ForInStatement: ['left', 'right', 'body'],\n    ForOfStatement: ['left', 'right', 'body'],\n    FunctionDeclaration: ['id', 'params', 'body'],\n    FunctionExpression: ['id', 'params', 'body'],\n    GeneratorExpression: ['blocks', 'filter', 'body'],\n    // CAUTION: It's deferred to ES7.\n    Identifier: [],\n    IfStatement: ['test', 'consequent', 'alternate'],\n    ImportExpression: ['source'],\n    ImportDeclaration: ['specifiers', 'source'],\n    ImportDefaultSpecifier: ['local'],\n    ImportNamespaceSpecifier: ['local'],\n    ImportSpecifier: ['imported', 'local'],\n    Literal: [],\n    LabeledStatement: ['label', 'body'],\n    LogicalExpression: ['left', 'right'],\n    MemberExpression: ['object', 'property'],\n    MetaProperty: ['meta', 'property'],\n    MethodDefinition: ['key', 'value'],\n    ModuleSpecifier: [],\n    NewExpression: ['callee', 'arguments'],\n    ObjectExpression: ['properties'],\n    ObjectPattern: ['properties'],\n    PrivateIdentifier: [],\n    Program: ['body'],\n    Property: ['key', 'value'],\n    PropertyDefinition: ['key', 'value'],\n    RestElement: ['argument'],\n    ReturnStatement: ['argument'],\n    SequenceExpression: ['expressions'],\n    SpreadElement: ['argument'],\n    Super: [],\n    SwitchStatement: ['discriminant', 'cases'],\n    SwitchCase: ['test', 'consequent'],\n    TaggedTemplateExpression: ['tag', 'quasi'],\n    TemplateElement: [],\n    TemplateLiteral: ['quasis', 'expressions'],\n    ThisExpression: [],\n    ThrowStatement: ['argument'],\n    TryStatement: ['block', 'handler', 'finalizer'],\n    UnaryExpression: ['argument'],\n    UpdateExpression: ['argument'],\n    VariableDeclaration: ['declarations'],\n    VariableDeclarator: ['id', 'init'],\n    WhileStatement: ['test', 'body'],\n    WithStatement: ['object', 'body'],\n    YieldExpression: ['argument']\n  }; // unique id\n\n  BREAK = {};\n  SKIP = {};\n  REMOVE = {};\n  VisitorOption = {\n    Break: BREAK,\n    Skip: SKIP,\n    Remove: REMOVE\n  };\n\n  function Reference(parent, key) {\n    this.parent = parent;\n    this.key = key;\n  }\n\n  Reference.prototype.replace = function replace(node) {\n    this.parent[this.key] = node;\n  };\n\n  Reference.prototype.remove = function remove() {\n    if (Array.isArray(this.parent)) {\n      this.parent.splice(this.key, 1);\n      return true;\n    } else {\n      this.replace(null);\n      return false;\n    }\n  };\n\n  function Element(node, path, wrap, ref) {\n    this.node = node;\n    this.path = path;\n    this.wrap = wrap;\n    this.ref = ref;\n  }\n\n  function Controller() {} // API:\n  // return property path array from root to current node\n\n\n  Controller.prototype.path = function path() {\n    var i, iz, j, jz, result, element;\n\n    function addToPath(result, path) {\n      if (Array.isArray(path)) {\n        for (j = 0, jz = path.length; j < jz; ++j) {\n          result.push(path[j]);\n        }\n      } else {\n        result.push(path);\n      }\n    } // root node\n\n\n    if (!this.__current.path) {\n      return null;\n    } // first node is sentinel, second node is root element\n\n\n    result = [];\n\n    for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n      element = this.__leavelist[i];\n      addToPath(result, element.path);\n    }\n\n    addToPath(result, this.__current.path);\n    return result;\n  }; // API:\n  // return type of current node\n\n\n  Controller.prototype.type = function () {\n    var node = this.current();\n    return node.type || this.__current.wrap;\n  }; // API:\n  // return array of parent elements\n\n\n  Controller.prototype.parents = function parents() {\n    var i, iz, result; // first node is sentinel\n\n    result = [];\n\n    for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n      result.push(this.__leavelist[i].node);\n    }\n\n    return result;\n  }; // API:\n  // return current node\n\n\n  Controller.prototype.current = function current() {\n    return this.__current.node;\n  };\n\n  Controller.prototype.__execute = function __execute(callback, element) {\n    var previous, result;\n    result = undefined;\n    previous = this.__current;\n    this.__current = element;\n    this.__state = null;\n\n    if (callback) {\n      result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n    }\n\n    this.__current = previous;\n    return result;\n  }; // API:\n  // notify control skip / break\n\n\n  Controller.prototype.notify = function notify(flag) {\n    this.__state = flag;\n  }; // API:\n  // skip child nodes of current node\n\n\n  Controller.prototype.skip = function () {\n    this.notify(SKIP);\n  }; // API:\n  // break traversals\n\n\n  Controller.prototype['break'] = function () {\n    this.notify(BREAK);\n  }; // API:\n  // remove node\n\n\n  Controller.prototype.remove = function () {\n    this.notify(REMOVE);\n  };\n\n  Controller.prototype.__initialize = function (root, visitor) {\n    this.visitor = visitor;\n    this.root = root;\n    this.__worklist = [];\n    this.__leavelist = [];\n    this.__current = null;\n    this.__state = null;\n    this.__fallback = null;\n\n    if (visitor.fallback === 'iteration') {\n      this.__fallback = Object.keys;\n    } else if (typeof visitor.fallback === 'function') {\n      this.__fallback = visitor.fallback;\n    }\n\n    this.__keys = VisitorKeys;\n\n    if (visitor.keys) {\n      this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n    }\n  };\n\n  function isNode(node) {\n    if (node == null) {\n      return false;\n    }\n\n    return typeof node === 'object' && typeof node.type === 'string';\n  }\n\n  function isProperty(nodeType, key) {\n    return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n  }\n\n  function candidateExistsInLeaveList(leavelist, candidate) {\n    for (var i = leavelist.length - 1; i >= 0; --i) {\n      if (leavelist[i].node === candidate) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  Controller.prototype.traverse = function traverse(root, visitor) {\n    var worklist, leavelist, element, node, nodeType, ret, key, current, current2, candidates, candidate, sentinel;\n\n    this.__initialize(root, visitor);\n\n    sentinel = {}; // reference\n\n    worklist = this.__worklist;\n    leavelist = this.__leavelist; // initialize\n\n    worklist.push(new Element(root, null, null, null));\n    leavelist.push(new Element(null, null, null, null));\n\n    while (worklist.length) {\n      element = worklist.pop();\n\n      if (element === sentinel) {\n        element = leavelist.pop();\n        ret = this.__execute(visitor.leave, element);\n\n        if (this.__state === BREAK || ret === BREAK) {\n          return;\n        }\n\n        continue;\n      }\n\n      if (element.node) {\n        ret = this.__execute(visitor.enter, element);\n\n        if (this.__state === BREAK || ret === BREAK) {\n          return;\n        }\n\n        worklist.push(sentinel);\n        leavelist.push(element);\n\n        if (this.__state === SKIP || ret === SKIP) {\n          continue;\n        }\n\n        node = element.node;\n        nodeType = node.type || element.wrap;\n        candidates = this.__keys[nodeType];\n\n        if (!candidates) {\n          if (this.__fallback) {\n            candidates = this.__fallback(node);\n          } else {\n            throw new Error('Unknown node type ' + nodeType + '.');\n          }\n        }\n\n        current = candidates.length;\n\n        while ((current -= 1) >= 0) {\n          key = candidates[current];\n          candidate = node[key];\n\n          if (!candidate) {\n            continue;\n          }\n\n          if (Array.isArray(candidate)) {\n            current2 = candidate.length;\n\n            while ((current2 -= 1) >= 0) {\n              if (!candidate[current2]) {\n                continue;\n              }\n\n              if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                continue;\n              }\n\n              if (isProperty(nodeType, candidates[current])) {\n                element = new Element(candidate[current2], [key, current2], 'Property', null);\n              } else if (isNode(candidate[current2])) {\n                element = new Element(candidate[current2], [key, current2], null, null);\n              } else {\n                continue;\n              }\n\n              worklist.push(element);\n            }\n          } else if (isNode(candidate)) {\n            if (candidateExistsInLeaveList(leavelist, candidate)) {\n              continue;\n            }\n\n            worklist.push(new Element(candidate, key, null, null));\n          }\n        }\n      }\n    }\n  };\n\n  Controller.prototype.replace = function replace(root, visitor) {\n    var worklist, leavelist, node, nodeType, target, element, current, current2, candidates, candidate, sentinel, outer, key;\n\n    function removeElem(element) {\n      var i, key, nextElem, parent;\n\n      if (element.ref.remove()) {\n        // When the reference is an element of an array.\n        key = element.ref.key;\n        parent = element.ref.parent; // If removed from array, then decrease following items' keys.\n\n        i = worklist.length;\n\n        while (i--) {\n          nextElem = worklist[i];\n\n          if (nextElem.ref && nextElem.ref.parent === parent) {\n            if (nextElem.ref.key < key) {\n              break;\n            }\n\n            --nextElem.ref.key;\n          }\n        }\n      }\n    }\n\n    this.__initialize(root, visitor);\n\n    sentinel = {}; // reference\n\n    worklist = this.__worklist;\n    leavelist = this.__leavelist; // initialize\n\n    outer = {\n      root: root\n    };\n    element = new Element(root, null, null, new Reference(outer, 'root'));\n    worklist.push(element);\n    leavelist.push(element);\n\n    while (worklist.length) {\n      element = worklist.pop();\n\n      if (element === sentinel) {\n        element = leavelist.pop();\n        target = this.__execute(visitor.leave, element); // node may be replaced with null,\n        // so distinguish between undefined and null in this place\n\n        if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n          // replace\n          element.ref.replace(target);\n        }\n\n        if (this.__state === REMOVE || target === REMOVE) {\n          removeElem(element);\n        }\n\n        if (this.__state === BREAK || target === BREAK) {\n          return outer.root;\n        }\n\n        continue;\n      }\n\n      target = this.__execute(visitor.enter, element); // node may be replaced with null,\n      // so distinguish between undefined and null in this place\n\n      if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n        // replace\n        element.ref.replace(target);\n        element.node = target;\n      }\n\n      if (this.__state === REMOVE || target === REMOVE) {\n        removeElem(element);\n        element.node = null;\n      }\n\n      if (this.__state === BREAK || target === BREAK) {\n        return outer.root;\n      } // node may be null\n\n\n      node = element.node;\n\n      if (!node) {\n        continue;\n      }\n\n      worklist.push(sentinel);\n      leavelist.push(element);\n\n      if (this.__state === SKIP || target === SKIP) {\n        continue;\n      }\n\n      nodeType = node.type || element.wrap;\n      candidates = this.__keys[nodeType];\n\n      if (!candidates) {\n        if (this.__fallback) {\n          candidates = this.__fallback(node);\n        } else {\n          throw new Error('Unknown node type ' + nodeType + '.');\n        }\n      }\n\n      current = candidates.length;\n\n      while ((current -= 1) >= 0) {\n        key = candidates[current];\n        candidate = node[key];\n\n        if (!candidate) {\n          continue;\n        }\n\n        if (Array.isArray(candidate)) {\n          current2 = candidate.length;\n\n          while ((current2 -= 1) >= 0) {\n            if (!candidate[current2]) {\n              continue;\n            }\n\n            if (isProperty(nodeType, candidates[current])) {\n              element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n            } else if (isNode(candidate[current2])) {\n              element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n            } else {\n              continue;\n            }\n\n            worklist.push(element);\n          }\n        } else if (isNode(candidate)) {\n          worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n        }\n      }\n    }\n\n    return outer.root;\n  };\n\n  function traverse(root, visitor) {\n    var controller = new Controller();\n    return controller.traverse(root, visitor);\n  }\n\n  function replace(root, visitor) {\n    var controller = new Controller();\n    return controller.replace(root, visitor);\n  }\n\n  function extendCommentRange(comment, tokens) {\n    var target;\n    target = upperBound(tokens, function search(token) {\n      return token.range[0] > comment.range[0];\n    });\n    comment.extendedRange = [comment.range[0], comment.range[1]];\n\n    if (target !== tokens.length) {\n      comment.extendedRange[1] = tokens[target].range[0];\n    }\n\n    target -= 1;\n\n    if (target >= 0) {\n      comment.extendedRange[0] = tokens[target].range[1];\n    }\n\n    return comment;\n  }\n\n  function attachComments(tree, providedComments, tokens) {\n    // At first, we should calculate extended comment ranges.\n    var comments = [],\n        comment,\n        len,\n        i,\n        cursor;\n\n    if (!tree.range) {\n      throw new Error('attachComments needs range information');\n    } // tokens array is empty, we attach comments to tree as 'leadingComments'\n\n\n    if (!tokens.length) {\n      if (providedComments.length) {\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n          comment = deepCopy(providedComments[i]);\n          comment.extendedRange = [0, tree.range[0]];\n          comments.push(comment);\n        }\n\n        tree.leadingComments = comments;\n      }\n\n      return tree;\n    }\n\n    for (i = 0, len = providedComments.length; i < len; i += 1) {\n      comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n    } // This is based on John Freeman's implementation.\n\n\n    cursor = 0;\n    traverse(tree, {\n      enter: function (node) {\n        var comment;\n\n        while (cursor < comments.length) {\n          comment = comments[cursor];\n\n          if (comment.extendedRange[1] > node.range[0]) {\n            break;\n          }\n\n          if (comment.extendedRange[1] === node.range[0]) {\n            if (!node.leadingComments) {\n              node.leadingComments = [];\n            }\n\n            node.leadingComments.push(comment);\n            comments.splice(cursor, 1);\n          } else {\n            cursor += 1;\n          }\n        } // already out of owned node\n\n\n        if (cursor === comments.length) {\n          return VisitorOption.Break;\n        }\n\n        if (comments[cursor].extendedRange[0] > node.range[1]) {\n          return VisitorOption.Skip;\n        }\n      }\n    });\n    cursor = 0;\n    traverse(tree, {\n      leave: function (node) {\n        var comment;\n\n        while (cursor < comments.length) {\n          comment = comments[cursor];\n\n          if (node.range[1] < comment.extendedRange[0]) {\n            break;\n          }\n\n          if (node.range[1] === comment.extendedRange[0]) {\n            if (!node.trailingComments) {\n              node.trailingComments = [];\n            }\n\n            node.trailingComments.push(comment);\n            comments.splice(cursor, 1);\n          } else {\n            cursor += 1;\n          }\n        } // already out of owned node\n\n\n        if (cursor === comments.length) {\n          return VisitorOption.Break;\n        }\n\n        if (comments[cursor].extendedRange[0] > node.range[1]) {\n          return VisitorOption.Skip;\n        }\n      }\n    });\n    return tree;\n  }\n\n  exports.Syntax = Syntax;\n  exports.traverse = traverse;\n  exports.replace = replace;\n  exports.attachComments = attachComments;\n  exports.VisitorKeys = VisitorKeys;\n  exports.VisitorOption = VisitorOption;\n  exports.Controller = Controller;\n\n  exports.cloneEnvironment = function () {\n    return clone({});\n  };\n\n  return exports;\n})(exports);\n/* vim: set sw=4 ts=4 et tw=80 : */","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/estraverse/estraverse.js"],"names":["clone","exports","Syntax","VisitorOption","VisitorKeys","BREAK","SKIP","REMOVE","deepCopy","obj","ret","key","val","hasOwnProperty","upperBound","array","func","diff","len","i","current","length","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ChainExpression","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportExpression","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","ObjectExpression","ObjectPattern","PrivateIdentifier","Program","Property","PropertyDefinition","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Break","Skip","Remove","Reference","parent","prototype","replace","node","remove","Array","isArray","splice","Element","path","wrap","ref","Controller","iz","j","jz","result","element","addToPath","push","__current","__leavelist","type","parents","__execute","callback","previous","undefined","__state","call","notify","flag","skip","__initialize","root","visitor","__worklist","__fallback","fallback","Object","keys","__keys","assign","create","isNode","isProperty","nodeType","candidateExistsInLeaveList","leavelist","candidate","traverse","worklist","current2","candidates","sentinel","pop","leave","enter","Error","target","outer","removeElem","nextElem","controller","extendCommentRange","comment","tokens","search","token","range","extendedRange","attachComments","tree","providedComments","comments","cursor","leadingComments","trailingComments","cloneEnvironment"],"mappings":"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","sourcesContent":["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        PrivateIdentifier: 'PrivateIdentifier',\n        Program: 'Program',\n        Property: 'Property',\n        PropertyDefinition: 'PropertyDefinition',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        PrivateIdentifier: [],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        PropertyDefinition: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"]},"metadata":{},"sourceType":"script"}