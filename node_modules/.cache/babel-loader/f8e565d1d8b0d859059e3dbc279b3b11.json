{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"./HarmonyAcceptImportDependency\")} HarmonyAcceptImportDependency */\n\n\nclass HarmonyAcceptDependency extends NullDependency {\n  /**\n   * @param {[number, number]} range expression range\n   * @param {HarmonyAcceptImportDependency[]} dependencies import dependencies\n   * @param {boolean} hasCallback true, if the range wraps an existing callback\n   */\n  constructor(range, dependencies, hasCallback) {\n    super();\n    this.range = range;\n    this.dependencies = dependencies;\n    this.hasCallback = hasCallback;\n  }\n\n  get type() {\n    return \"accepted harmony modules\";\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.dependencies);\n    write(this.hasCallback);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.dependencies = read();\n    this.hasCallback = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyAcceptDependency, \"webpack/lib/dependencies/HarmonyAcceptDependency\");\nHarmonyAcceptDependency.Template = class HarmonyAcceptDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {HarmonyAcceptDependency} */\n    dependency;\n    const {\n      module,\n      runtime,\n      runtimeRequirements,\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = templateContext;\n    const content = dep.dependencies.map(dependency => {\n      const referencedModule = moduleGraph.getModule(dependency);\n      return {\n        dependency,\n        runtimeCondition: referencedModule ? HarmonyImportDependency.Template.getImportEmittedRuntime(module, referencedModule) : false\n      };\n    }).filter(_ref => {\n      let {\n        runtimeCondition\n      } = _ref;\n      return runtimeCondition !== false;\n    }).map(_ref2 => {\n      let {\n        dependency,\n        runtimeCondition\n      } = _ref2;\n      const condition = runtimeTemplate.runtimeConditionExpression({\n        chunkGraph,\n        runtime,\n        runtimeCondition,\n        runtimeRequirements\n      });\n      const s = dependency.getImportStatement(true, templateContext);\n      const code = s[0] + s[1];\n\n      if (condition !== \"true\") {\n        return `if (${condition}) {\\n${Template.indent(code)}\\n}\\n`;\n      }\n\n      return code;\n    }).join(\"\");\n\n    if (dep.hasCallback) {\n      if (runtimeTemplate.supportsArrowFunction()) {\n        source.insert(dep.range[0], `__WEBPACK_OUTDATED_DEPENDENCIES__ => { ${content}(`);\n        source.insert(dep.range[1], \")(__WEBPACK_OUTDATED_DEPENDENCIES__); }\");\n      } else {\n        source.insert(dep.range[0], `function(__WEBPACK_OUTDATED_DEPENDENCIES__) { ${content}(`);\n        source.insert(dep.range[1], \")(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this)\");\n      }\n\n      return;\n    }\n\n    const arrow = runtimeTemplate.supportsArrowFunction();\n    source.insert(dep.range[1] - 0.5, `, ${arrow ? \"() =>\" : \"function()\"} { ${content} }`);\n  }\n\n};\nmodule.exports = HarmonyAcceptDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyAcceptDependency.js"],"names":["Template","require","makeSerializable","HarmonyImportDependency","NullDependency","HarmonyAcceptDependency","constructor","range","dependencies","hasCallback","type","serialize","context","write","deserialize","read","HarmonyAcceptDependencyTemplate","apply","dependency","source","templateContext","dep","module","runtime","runtimeRequirements","runtimeTemplate","moduleGraph","chunkGraph","content","map","referencedModule","getModule","runtimeCondition","getImportEmittedRuntime","filter","condition","runtimeConditionExpression","s","getImportStatement","code","indent","join","supportsArrowFunction","insert","arrow","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,uBAAuB,GAAGF,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA9B;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAMI,uBAAN,SAAsCD,cAAtC,CAAqD;AACpD;AACD;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAACC,KAAD,EAAQC,YAAR,EAAsBC,WAAtB,EAAmC;AAC7C;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,0BAAP;AACA;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AACAC,IAAAA,KAAK,CAAC,KAAKN,KAAN,CAAL;AACAM,IAAAA,KAAK,CAAC,KAAKL,YAAN,CAAL;AACAK,IAAAA,KAAK,CAAC,KAAKJ,WAAN,CAAL;AACA,UAAME,SAAN,CAAgBC,OAAhB;AACA;;AAEDE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AACA,SAAKL,KAAL,GAAaQ,IAAI,EAAjB;AACA,SAAKP,YAAL,GAAoBO,IAAI,EAAxB;AACA,SAAKN,WAAL,GAAmBM,IAAI,EAAvB;AACA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AA/BmD;;AAkCrDV,gBAAgB,CACfG,uBADe,EAEf,kDAFe,CAAhB;AAKAA,uBAAuB,CAACL,QAAxB,GAAmC,MAAMgB,+BAAN,SAClCZ,cAAc,CAACJ,QADmB,CAEjC;AACD;AACD;AACA;AACA;AACA;AACA;AACCiB,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,EAAqBC,eAArB,EAAsC;AAC1C,UAAMC,GAAG;AAAG;AAAwCH,IAAAA,UAApD;AACA,UAAM;AACLI,MAAAA,MADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,mBAHK;AAILC,MAAAA,eAJK;AAKLC,MAAAA,WALK;AAMLC,MAAAA;AANK,QAOFP,eAPJ;AAQA,UAAMQ,OAAO,GAAGP,GAAG,CAACb,YAAJ,CACdqB,GADc,CACVX,UAAU,IAAI;AAClB,YAAMY,gBAAgB,GAAGJ,WAAW,CAACK,SAAZ,CAAsBb,UAAtB,CAAzB;AACA,aAAO;AACNA,QAAAA,UADM;AAENc,QAAAA,gBAAgB,EAAEF,gBAAgB,GAC/B3B,uBAAuB,CAACH,QAAxB,CAAiCiC,uBAAjC,CACAX,MADA,EAEAQ,gBAFA,CAD+B,GAK/B;AAPG,OAAP;AASA,KAZc,EAadI,MAbc,CAaP;AAAA,UAAC;AAAEF,QAAAA;AAAF,OAAD;AAAA,aAA0BA,gBAAgB,KAAK,KAA/C;AAAA,KAbO,EAcdH,GAdc,CAcV,SAAsC;AAAA,UAArC;AAAEX,QAAAA,UAAF;AAAcc,QAAAA;AAAd,OAAqC;AAC1C,YAAMG,SAAS,GAAGV,eAAe,CAACW,0BAAhB,CAA2C;AAC5DT,QAAAA,UAD4D;AAE5DJ,QAAAA,OAF4D;AAG5DS,QAAAA,gBAH4D;AAI5DR,QAAAA;AAJ4D,OAA3C,CAAlB;AAMA,YAAMa,CAAC,GAAGnB,UAAU,CAACoB,kBAAX,CAA8B,IAA9B,EAAoClB,eAApC,CAAV;AACA,YAAMmB,IAAI,GAAGF,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAArB;;AACA,UAAIF,SAAS,KAAK,MAAlB,EAA0B;AACzB,eAAQ,OAAMA,SAAU,QAAOnC,QAAQ,CAACwC,MAAT,CAAgBD,IAAhB,CAAsB,OAArD;AACA;;AACD,aAAOA,IAAP;AACA,KA3Bc,EA4BdE,IA5Bc,CA4BT,EA5BS,CAAhB;;AA8BA,QAAIpB,GAAG,CAACZ,WAAR,EAAqB;AACpB,UAAIgB,eAAe,CAACiB,qBAAhB,EAAJ,EAA6C;AAC5CvB,QAAAA,MAAM,CAACwB,MAAP,CACCtB,GAAG,CAACd,KAAJ,CAAU,CAAV,CADD,EAEE,0CAAyCqB,OAAQ,GAFnD;AAIAT,QAAAA,MAAM,CAACwB,MAAP,CAActB,GAAG,CAACd,KAAJ,CAAU,CAAV,CAAd,EAA4B,yCAA5B;AACA,OAND,MAMO;AACNY,QAAAA,MAAM,CAACwB,MAAP,CACCtB,GAAG,CAACd,KAAJ,CAAU,CAAV,CADD,EAEE,iDAAgDqB,OAAQ,GAF1D;AAIAT,QAAAA,MAAM,CAACwB,MAAP,CACCtB,GAAG,CAACd,KAAJ,CAAU,CAAV,CADD,EAEC,oDAFD;AAIA;;AACD;AACA;;AAED,UAAMqC,KAAK,GAAGnB,eAAe,CAACiB,qBAAhB,EAAd;AACAvB,IAAAA,MAAM,CAACwB,MAAP,CACCtB,GAAG,CAACd,KAAJ,CAAU,CAAV,IAAe,GADhB,EAEE,KAAIqC,KAAK,GAAG,OAAH,GAAa,YAAa,MAAKhB,OAAQ,IAFlD;AAIA;;AAxEA,CAFF;AA6EAN,MAAM,CAACuB,OAAP,GAAiBxC,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"./HarmonyAcceptImportDependency\")} HarmonyAcceptImportDependency */\n\nclass HarmonyAcceptDependency extends NullDependency {\n\t/**\n\t * @param {[number, number]} range expression range\n\t * @param {HarmonyAcceptImportDependency[]} dependencies import dependencies\n\t * @param {boolean} hasCallback true, if the range wraps an existing callback\n\t */\n\tconstructor(range, dependencies, hasCallback) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.dependencies = dependencies;\n\t\tthis.hasCallback = hasCallback;\n\t}\n\n\tget type() {\n\t\treturn \"accepted harmony modules\";\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.range);\n\t\twrite(this.dependencies);\n\t\twrite(this.hasCallback);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.range = read();\n\t\tthis.dependencies = read();\n\t\tthis.hasCallback = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyAcceptDependency,\n\t\"webpack/lib/dependencies/HarmonyAcceptDependency\"\n);\n\nHarmonyAcceptDependency.Template = class HarmonyAcceptDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyAcceptDependency} */ (dependency);\n\t\tconst {\n\t\t\tmodule,\n\t\t\truntime,\n\t\t\truntimeRequirements,\n\t\t\truntimeTemplate,\n\t\t\tmoduleGraph,\n\t\t\tchunkGraph\n\t\t} = templateContext;\n\t\tconst content = dep.dependencies\n\t\t\t.map(dependency => {\n\t\t\t\tconst referencedModule = moduleGraph.getModule(dependency);\n\t\t\t\treturn {\n\t\t\t\t\tdependency,\n\t\t\t\t\truntimeCondition: referencedModule\n\t\t\t\t\t\t? HarmonyImportDependency.Template.getImportEmittedRuntime(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\treferencedModule\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: false\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter(({ runtimeCondition }) => runtimeCondition !== false)\n\t\t\t.map(({ dependency, runtimeCondition }) => {\n\t\t\t\tconst condition = runtimeTemplate.runtimeConditionExpression({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime,\n\t\t\t\t\truntimeCondition,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t});\n\t\t\t\tconst s = dependency.getImportStatement(true, templateContext);\n\t\t\t\tconst code = s[0] + s[1];\n\t\t\t\tif (condition !== \"true\") {\n\t\t\t\t\treturn `if (${condition}) {\\n${Template.indent(code)}\\n}\\n`;\n\t\t\t\t}\n\t\t\t\treturn code;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tif (dep.hasCallback) {\n\t\t\tif (runtimeTemplate.supportsArrowFunction()) {\n\t\t\t\tsource.insert(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\t`__WEBPACK_OUTDATED_DEPENDENCIES__ => { ${content}(`\n\t\t\t\t);\n\t\t\t\tsource.insert(dep.range[1], \")(__WEBPACK_OUTDATED_DEPENDENCIES__); }\");\n\t\t\t} else {\n\t\t\t\tsource.insert(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\t`function(__WEBPACK_OUTDATED_DEPENDENCIES__) { ${content}(`\n\t\t\t\t);\n\t\t\t\tsource.insert(\n\t\t\t\t\tdep.range[1],\n\t\t\t\t\t\")(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this)\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst arrow = runtimeTemplate.supportsArrowFunction();\n\t\tsource.insert(\n\t\t\tdep.range[1] - 0.5,\n\t\t\t`, ${arrow ? \"() =>\" : \"function()\"} { ${content} }`\n\t\t);\n\t}\n};\n\nmodule.exports = HarmonyAcceptDependency;\n"]},"metadata":{},"sourceType":"script"}