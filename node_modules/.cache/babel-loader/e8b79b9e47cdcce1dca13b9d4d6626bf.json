{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  equals\n} = require(\"../util/ArrayHelpers\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst {\n  handleDependencyBase\n} = require(\"./CommonJsDependencyHelpers\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nconst processExportInfo = require(\"./processExportInfo\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nconst idsSymbol = Symbol(\"CommonJsExportRequireDependency.ids\");\nconst EMPTY_OBJECT = {};\n\nclass CommonJsExportRequireDependency extends ModuleDependency {\n  constructor(range, valueRange, base, names, request, ids, resultUsed) {\n    super(request);\n    this.range = range;\n    this.valueRange = valueRange;\n    this.base = base;\n    this.names = names;\n    this.ids = ids;\n    this.resultUsed = resultUsed;\n    this.asiSafe = undefined;\n  }\n\n  get type() {\n    return \"cjs export require\";\n  }\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n\n\n  couldAffectReferencingModule() {\n    return Dependency.TRANSITIVE;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {string[]} the imported id\n   */\n\n\n  getIds(moduleGraph) {\n    return moduleGraph.getMeta(this)[idsSymbol] || this.ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {string[]} ids the imported ids\n   * @returns {void}\n   */\n\n\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    const ids = this.getIds(moduleGraph);\n\n    const getFullResult = () => {\n      if (ids.length === 0) {\n        return Dependency.EXPORTS_OBJECT_REFERENCED;\n      } else {\n        return [{\n          name: ids,\n          canMangle: false\n        }];\n      }\n    };\n\n    if (this.resultUsed) return getFullResult();\n    let exportsInfo = moduleGraph.getExportsInfo(moduleGraph.getParentModule(this));\n\n    for (const name of this.names) {\n      const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n      const used = exportInfo.getUsed(runtime);\n      if (used === UsageState.Unused) return Dependency.NO_EXPORTS_REFERENCED;\n      if (used !== UsageState.OnlyPropertiesUsed) return getFullResult();\n      exportsInfo = exportInfo.exportsInfo;\n      if (!exportsInfo) return getFullResult();\n    }\n\n    if (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n      return getFullResult();\n    }\n    /** @type {string[][]} */\n\n\n    const referencedExports = [];\n\n    for (const exportInfo of exportsInfo.orderedExports) {\n      processExportInfo(runtime, referencedExports, ids.concat(exportInfo.name), exportInfo, false);\n    }\n\n    return referencedExports.map(name => ({\n      name,\n      canMangle: false\n    }));\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n\n    if (this.names.length === 1) {\n      const name = this.names[0];\n      const from = moduleGraph.getConnection(this);\n      if (!from) return;\n      return {\n        exports: [{\n          name,\n          from,\n          export: ids.length === 0 ? null : ids,\n          // we can't mangle names that are in an empty object\n          // because one could access the prototype property\n          // when export isn't set yet\n          canMangle: !(name in EMPTY_OBJECT) && false\n        }],\n        dependencies: [from.module]\n      };\n    } else if (this.names.length > 0) {\n      const name = this.names[0];\n      return {\n        exports: [{\n          name,\n          // we can't mangle names that are in an empty object\n          // because one could access the prototype property\n          // when export isn't set yet\n          canMangle: !(name in EMPTY_OBJECT) && false\n        }],\n        dependencies: undefined\n      };\n    } else {\n      const from = moduleGraph.getConnection(this);\n      if (!from) return;\n      const reexportInfo = this.getStarReexports(moduleGraph, undefined, from.module);\n\n      if (reexportInfo) {\n        return {\n          exports: Array.from(reexportInfo.exports, name => {\n            return {\n              name,\n              from,\n              export: ids.concat(name),\n              canMangle: !(name in EMPTY_OBJECT) && false\n            };\n          }),\n          // TODO handle deep reexports\n          dependencies: [from.module]\n        };\n      } else {\n        return {\n          exports: true,\n          from: ids.length === 0 ? from : undefined,\n          canMangle: false,\n          dependencies: [from.module]\n        };\n      }\n    }\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {Module} importedModule the imported module (optional)\n   * @returns {{exports?: Set<string>, checked?: Set<string>}} information\n   */\n\n\n  getStarReexports(moduleGraph, runtime) {\n    let importedModule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : moduleGraph.getModule(this);\n    let importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\n    const ids = this.getIds(moduleGraph);\n    if (ids.length > 0) importedExportsInfo = importedExportsInfo.getNestedExportsInfo(ids);\n    let exportsInfo = moduleGraph.getExportsInfo(moduleGraph.getParentModule(this));\n    if (this.names.length > 0) exportsInfo = exportsInfo.getNestedExportsInfo(this.names);\n    const noExtraExports = importedExportsInfo && importedExportsInfo.otherExportsInfo.provided === false;\n    const noExtraImports = exportsInfo && exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\n\n    if (!noExtraExports && !noExtraImports) {\n      return;\n    }\n\n    const isNamespaceImport = importedModule.getExportsType(moduleGraph, false) === \"namespace\";\n    /** @type {Set<string>} */\n\n    const exports = new Set();\n    /** @type {Set<string>} */\n\n    const checked = new Set();\n\n    if (noExtraImports) {\n      for (const exportInfo of exportsInfo.orderedExports) {\n        const name = exportInfo.name;\n        if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\n        if (name === \"__esModule\" && isNamespaceImport) {\n          exports.add(name);\n        } else if (importedExportsInfo) {\n          const importedExportInfo = importedExportsInfo.getReadOnlyExportInfo(name);\n          if (importedExportInfo.provided === false) continue;\n          exports.add(name);\n          if (importedExportInfo.provided === true) continue;\n          checked.add(name);\n        } else {\n          exports.add(name);\n          checked.add(name);\n        }\n      }\n    } else if (noExtraExports) {\n      for (const importedExportInfo of importedExportsInfo.orderedExports) {\n        const name = importedExportInfo.name;\n        if (importedExportInfo.provided === false) continue;\n\n        if (exportsInfo) {\n          const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n          if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n        }\n\n        exports.add(name);\n        if (importedExportInfo.provided === true) continue;\n        checked.add(name);\n      }\n\n      if (isNamespaceImport) {\n        exports.add(\"__esModule\");\n        checked.delete(\"__esModule\");\n      }\n    }\n\n    return {\n      exports,\n      checked\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.asiSafe);\n    write(this.range);\n    write(this.valueRange);\n    write(this.base);\n    write(this.names);\n    write(this.ids);\n    write(this.resultUsed);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.asiSafe = read();\n    this.range = read();\n    this.valueRange = read();\n    this.base = read();\n    this.names = read();\n    this.ids = read();\n    this.resultUsed = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(CommonJsExportRequireDependency, \"webpack/lib/dependencies/CommonJsExportRequireDependency\");\nCommonJsExportRequireDependency.Template = class CommonJsExportRequireDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      runtimeTemplate,\n      chunkGraph,\n      moduleGraph,\n      runtimeRequirements,\n      runtime\n    } = _ref;\n    const dep =\n    /** @type {CommonJsExportRequireDependency} */\n    dependency;\n    const used = moduleGraph.getExportsInfo(module).getUsedName(dep.names, runtime);\n    const [type, base] = handleDependencyBase(dep.base, module, runtimeRequirements);\n    const importedModule = moduleGraph.getModule(dep);\n    let requireExpr = runtimeTemplate.moduleExports({\n      module: importedModule,\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak,\n      runtimeRequirements\n    });\n\n    if (importedModule) {\n      const ids = dep.getIds(moduleGraph);\n      const usedImported = moduleGraph.getExportsInfo(importedModule).getUsedName(ids, runtime);\n\n      if (usedImported) {\n        const comment = equals(usedImported, ids) ? \"\" : Template.toNormalComment(propertyAccess(ids)) + \" \";\n        requireExpr += `${comment}${propertyAccess(usedImported)}`;\n      }\n    }\n\n    switch (type) {\n      case \"expression\":\n        source.replace(dep.range[0], dep.range[1] - 1, used ? `${base}${propertyAccess(used)} = ${requireExpr}` : `/* unused reexport */ ${requireExpr}`);\n        return;\n\n      case \"Object.defineProperty\":\n        throw new Error(\"TODO\");\n\n      default:\n        throw new Error(\"Unexpected type\");\n    }\n  }\n\n};\nmodule.exports = CommonJsExportRequireDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/CommonJsExportRequireDependency.js"],"names":["Dependency","require","UsageState","Template","equals","makeSerializable","propertyAccess","handleDependencyBase","ModuleDependency","processExportInfo","idsSymbol","Symbol","EMPTY_OBJECT","CommonJsExportRequireDependency","constructor","range","valueRange","base","names","request","ids","resultUsed","asiSafe","undefined","type","couldAffectReferencingModule","TRANSITIVE","getIds","moduleGraph","getMeta","setIds","getReferencedExports","runtime","getFullResult","length","EXPORTS_OBJECT_REFERENCED","name","canMangle","exportsInfo","getExportsInfo","getParentModule","exportInfo","getReadOnlyExportInfo","used","getUsed","Unused","NO_EXPORTS_REFERENCED","OnlyPropertiesUsed","otherExportsInfo","referencedExports","orderedExports","concat","map","getExports","from","getConnection","exports","export","dependencies","module","reexportInfo","getStarReexports","Array","importedModule","getModule","importedExportsInfo","getNestedExportsInfo","noExtraExports","provided","noExtraImports","isNamespaceImport","getExportsType","Set","checked","add","importedExportInfo","delete","serialize","context","write","deserialize","read","CommonJsExportRequireDependencyTemplate","apply","dependency","source","runtimeTemplate","chunkGraph","runtimeRequirements","dep","getUsedName","requireExpr","moduleExports","weak","usedImported","comment","toNormalComment","replace","Error"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst Template = require(\"../Template\");\nconst { equals } = require(\"../util/ArrayHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst { handleDependencyBase } = require(\"./CommonJsDependencyHelpers\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst processExportInfo = require(\"./processExportInfo\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst idsSymbol = Symbol(\"CommonJsExportRequireDependency.ids\");\n\nconst EMPTY_OBJECT = {};\n\nclass CommonJsExportRequireDependency extends ModuleDependency {\n\tconstructor(range, valueRange, base, names, request, ids, resultUsed) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t\tthis.base = base;\n\t\tthis.names = names;\n\t\tthis.ids = ids;\n\t\tthis.resultUsed = resultUsed;\n\t\tthis.asiSafe = undefined;\n\t}\n\n\tget type() {\n\t\treturn \"cjs export require\";\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn Dependency.TRANSITIVE;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string[]} the imported id\n\t */\n\tgetIds(moduleGraph) {\n\t\treturn moduleGraph.getMeta(this)[idsSymbol] || this.ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {string[]} ids the imported ids\n\t * @returns {void}\n\t */\n\tsetIds(moduleGraph, ids) {\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\tconst getFullResult = () => {\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: ids,\n\t\t\t\t\t\tcanMangle: false\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t};\n\t\tif (this.resultUsed) return getFullResult();\n\t\tlet exportsInfo = moduleGraph.getExportsInfo(\n\t\t\tmoduleGraph.getParentModule(this)\n\t\t);\n\t\tfor (const name of this.names) {\n\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\t\t\tconst used = exportInfo.getUsed(runtime);\n\t\t\tif (used === UsageState.Unused) return Dependency.NO_EXPORTS_REFERENCED;\n\t\t\tif (used !== UsageState.OnlyPropertiesUsed) return getFullResult();\n\t\t\texportsInfo = exportInfo.exportsInfo;\n\t\t\tif (!exportsInfo) return getFullResult();\n\t\t}\n\t\tif (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\treturn getFullResult();\n\t\t}\n\t\t/** @type {string[][]} */\n\t\tconst referencedExports = [];\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tprocessExportInfo(\n\t\t\t\truntime,\n\t\t\t\treferencedExports,\n\t\t\t\tids.concat(exportInfo.name),\n\t\t\t\texportInfo,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t\treturn referencedExports.map(name => ({\n\t\t\tname,\n\t\t\tcanMangle: false\n\t\t}));\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\tif (this.names.length === 1) {\n\t\t\tconst name = this.names[0];\n\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\tif (!from) return;\n\t\t\treturn {\n\t\t\t\texports: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\texport: ids.length === 0 ? null : ids,\n\t\t\t\t\t\t// we can't mangle names that are in an empty object\n\t\t\t\t\t\t// because one could access the prototype property\n\t\t\t\t\t\t// when export isn't set yet\n\t\t\t\t\t\tcanMangle: !(name in EMPTY_OBJECT) && false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdependencies: [from.module]\n\t\t\t};\n\t\t} else if (this.names.length > 0) {\n\t\t\tconst name = this.names[0];\n\t\t\treturn {\n\t\t\t\texports: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t// we can't mangle names that are in an empty object\n\t\t\t\t\t\t// because one could access the prototype property\n\t\t\t\t\t\t// when export isn't set yet\n\t\t\t\t\t\tcanMangle: !(name in EMPTY_OBJECT) && false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t} else {\n\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\tif (!from) return;\n\t\t\tconst reexportInfo = this.getStarReexports(\n\t\t\t\tmoduleGraph,\n\t\t\t\tundefined,\n\t\t\t\tfrom.module\n\t\t\t);\n\t\t\tif (reexportInfo) {\n\t\t\t\treturn {\n\t\t\t\t\texports: Array.from(reexportInfo.exports, name => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\texport: ids.concat(name),\n\t\t\t\t\t\t\tcanMangle: !(name in EMPTY_OBJECT) && false\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t\t// TODO handle deep reexports\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\texports: true,\n\t\t\t\t\tfrom: ids.length === 0 ? from : undefined,\n\t\t\t\t\tcanMangle: false,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {Module} importedModule the imported module (optional)\n\t * @returns {{exports?: Set<string>, checked?: Set<string>}} information\n\t */\n\tgetStarReexports(\n\t\tmoduleGraph,\n\t\truntime,\n\t\timportedModule = moduleGraph.getModule(this)\n\t) {\n\t\tlet importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\n\t\tconst ids = this.getIds(moduleGraph);\n\t\tif (ids.length > 0)\n\t\t\timportedExportsInfo = importedExportsInfo.getNestedExportsInfo(ids);\n\t\tlet exportsInfo = moduleGraph.getExportsInfo(\n\t\t\tmoduleGraph.getParentModule(this)\n\t\t);\n\t\tif (this.names.length > 0)\n\t\t\texportsInfo = exportsInfo.getNestedExportsInfo(this.names);\n\n\t\tconst noExtraExports =\n\t\t\timportedExportsInfo &&\n\t\t\timportedExportsInfo.otherExportsInfo.provided === false;\n\t\tconst noExtraImports =\n\t\t\texportsInfo &&\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\n\n\t\tif (!noExtraExports && !noExtraImports) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isNamespaceImport =\n\t\t\timportedModule.getExportsType(moduleGraph, false) === \"namespace\";\n\n\t\t/** @type {Set<string>} */\n\t\tconst exports = new Set();\n\t\t/** @type {Set<string>} */\n\t\tconst checked = new Set();\n\n\t\tif (noExtraImports) {\n\t\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\t\tconst name = exportInfo.name;\n\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\t\t\t\tif (name === \"__esModule\" && isNamespaceImport) {\n\t\t\t\t\texports.add(name);\n\t\t\t\t} else if (importedExportsInfo) {\n\t\t\t\t\tconst importedExportInfo =\n\t\t\t\t\t\timportedExportsInfo.getReadOnlyExportInfo(name);\n\t\t\t\t\tif (importedExportInfo.provided === false) continue;\n\t\t\t\t\texports.add(name);\n\t\t\t\t\tif (importedExportInfo.provided === true) continue;\n\t\t\t\t\tchecked.add(name);\n\t\t\t\t} else {\n\t\t\t\t\texports.add(name);\n\t\t\t\t\tchecked.add(name);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (noExtraExports) {\n\t\t\tfor (const importedExportInfo of importedExportsInfo.orderedExports) {\n\t\t\t\tconst name = importedExportInfo.name;\n\t\t\t\tif (importedExportInfo.provided === false) continue;\n\t\t\t\tif (exportsInfo) {\n\t\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\t\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\t\t\t\t}\n\t\t\t\texports.add(name);\n\t\t\t\tif (importedExportInfo.provided === true) continue;\n\t\t\t\tchecked.add(name);\n\t\t\t}\n\t\t\tif (isNamespaceImport) {\n\t\t\t\texports.add(\"__esModule\");\n\t\t\t\tchecked.delete(\"__esModule\");\n\t\t\t}\n\t\t}\n\n\t\treturn { exports, checked };\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.asiSafe);\n\t\twrite(this.range);\n\t\twrite(this.valueRange);\n\t\twrite(this.base);\n\t\twrite(this.names);\n\t\twrite(this.ids);\n\t\twrite(this.resultUsed);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.asiSafe = read();\n\t\tthis.range = read();\n\t\tthis.valueRange = read();\n\t\tthis.base = read();\n\t\tthis.names = read();\n\t\tthis.ids = read();\n\t\tthis.resultUsed = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tCommonJsExportRequireDependency,\n\t\"webpack/lib/dependencies/CommonJsExportRequireDependency\"\n);\n\nCommonJsExportRequireDependency.Template = class CommonJsExportRequireDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{\n\t\t\tmodule,\n\t\t\truntimeTemplate,\n\t\t\tchunkGraph,\n\t\t\tmoduleGraph,\n\t\t\truntimeRequirements,\n\t\t\truntime\n\t\t}\n\t) {\n\t\tconst dep = /** @type {CommonJsExportRequireDependency} */ (dependency);\n\t\tconst used = moduleGraph\n\t\t\t.getExportsInfo(module)\n\t\t\t.getUsedName(dep.names, runtime);\n\n\t\tconst [type, base] = handleDependencyBase(\n\t\t\tdep.base,\n\t\t\tmodule,\n\t\t\truntimeRequirements\n\t\t);\n\n\t\tconst importedModule = moduleGraph.getModule(dep);\n\t\tlet requireExpr = runtimeTemplate.moduleExports({\n\t\t\tmodule: importedModule,\n\t\t\tchunkGraph,\n\t\t\trequest: dep.request,\n\t\t\tweak: dep.weak,\n\t\t\truntimeRequirements\n\t\t});\n\t\tif (importedModule) {\n\t\t\tconst ids = dep.getIds(moduleGraph);\n\t\t\tconst usedImported = moduleGraph\n\t\t\t\t.getExportsInfo(importedModule)\n\t\t\t\t.getUsedName(ids, runtime);\n\t\t\tif (usedImported) {\n\t\t\t\tconst comment = equals(usedImported, ids)\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: Template.toNormalComment(propertyAccess(ids)) + \" \";\n\t\t\t\trequireExpr += `${comment}${propertyAccess(usedImported)}`;\n\t\t\t}\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase \"expression\":\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.range[0],\n\t\t\t\t\tdep.range[1] - 1,\n\t\t\t\t\tused\n\t\t\t\t\t\t? `${base}${propertyAccess(used)} = ${requireExpr}`\n\t\t\t\t\t\t: `/* unused reexport */ ${requireExpr}`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\tcase \"Object.defineProperty\":\n\t\t\t\tthrow new Error(\"TODO\");\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected type\");\n\t\t}\n\t}\n};\n\nmodule.exports = CommonJsExportRequireDependency;\n"]},"metadata":{},"sourceType":"script"}