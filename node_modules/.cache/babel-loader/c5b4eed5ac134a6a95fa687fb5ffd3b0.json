{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n\nclass ModuleDependencyTemplateAsId extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref;\n    const dep =\n    /** @type {ModuleDependency} */\n    dependency;\n    if (!dep.range) return;\n    const content = runtimeTemplate.moduleId({\n      module: moduleGraph.getModule(dep),\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak\n    });\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n\n}\n\nmodule.exports = ModuleDependencyTemplateAsId;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ModuleDependencyTemplateAsId.js"],"names":["ModuleDependency","require","ModuleDependencyTemplateAsId","Template","apply","dependency","source","runtimeTemplate","moduleGraph","chunkGraph","dep","range","content","moduleId","module","getModule","request","weak","replace","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;;AAEA,MAAMC,4BAAN,SAA2CF,gBAAgB,CAACG,QAA5D,CAAqE;AACpE;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,QAAmE;AAAA,QAA9C;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA;AAAhC,KAA8C;AACvE,UAAMC,GAAG;AAAG;AAAiCL,IAAAA,UAA7C;AACA,QAAI,CAACK,GAAG,CAACC,KAAT,EAAgB;AAChB,UAAMC,OAAO,GAAGL,eAAe,CAACM,QAAhB,CAAyB;AACxCC,MAAAA,MAAM,EAAEN,WAAW,CAACO,SAAZ,CAAsBL,GAAtB,CADgC;AAExCD,MAAAA,UAFwC;AAGxCO,MAAAA,OAAO,EAAEN,GAAG,CAACM,OAH2B;AAIxCC,MAAAA,IAAI,EAAEP,GAAG,CAACO;AAJ8B,KAAzB,CAAhB;AAMAX,IAAAA,MAAM,CAACY,OAAP,CAAeR,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAf,EAA6BD,GAAG,CAACC,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CC,OAA/C;AACA;;AAjBmE;;AAoBrEE,MAAM,CAACK,OAAP,GAAiBjB,4BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass ModuleDependencyTemplateAsId extends ModuleDependency.Template {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, { runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst dep = /** @type {ModuleDependency} */ (dependency);\n\t\tif (!dep.range) return;\n\t\tconst content = runtimeTemplate.moduleId({\n\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\tchunkGraph,\n\t\t\trequest: dep.request,\n\t\t\tweak: dep.weak\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\n\nmodule.exports = ModuleDependencyTemplateAsId;\n"]},"metadata":{},"sourceType":"script"}