{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/**\n * @template T\n */\n\nclass Queue {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  constructor(items) {\n    /** @private @type {Set<T>} */\n    this._set = new Set(items);\n    /** @private @type {Iterator<T>} */\n\n    this._iterator = this._set[Symbol.iterator]();\n  }\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n\n\n  get length() {\n    return this._set.size;\n  }\n  /**\n   * Appends the specified element to this queue.\n   * @param {T} item The element to add.\n   * @returns {void}\n   */\n\n\n  enqueue(item) {\n    this._set.add(item);\n  }\n  /**\n   * Retrieves and removes the head of this queue.\n   * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n   */\n\n\n  dequeue() {\n    const result = this._iterator.next();\n\n    if (result.done) return undefined;\n\n    this._set.delete(result.value);\n\n    return result.value;\n  }\n\n}\n\nmodule.exports = Queue;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/Queue.js"],"names":["Queue","constructor","items","_set","Set","_iterator","Symbol","iterator","length","size","enqueue","item","add","dequeue","result","next","done","undefined","delete","value","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA,MAAMA,KAAN,CAAY;AACX;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,SAAKC,IAAL,GAAY,IAAIC,GAAJ,CAAQF,KAAR,CAAZ;AACA;;AACA,SAAKG,SAAL,GAAiB,KAAKF,IAAL,CAAUG,MAAM,CAACC,QAAjB,GAAjB;AACA;AAED;AACD;AACA;AACA;;;AACW,MAANC,MAAM,GAAG;AACZ,WAAO,KAAKL,IAAL,CAAUM,IAAjB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACb,SAAKR,IAAL,CAAUS,GAAV,CAAcD,IAAd;AACA;AAED;AACD;AACA;AACA;;;AACCE,EAAAA,OAAO,GAAG;AACT,UAAMC,MAAM,GAAG,KAAKT,SAAL,CAAeU,IAAf,EAAf;;AACA,QAAID,MAAM,CAACE,IAAX,EAAiB,OAAOC,SAAP;;AACjB,SAAKd,IAAL,CAAUe,MAAV,CAAiBJ,MAAM,CAACK,KAAxB;;AACA,WAAOL,MAAM,CAACK,KAAd;AACA;;AArCU;;AAwCZC,MAAM,CAACC,OAAP,GAAiBrB,KAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n */\nclass Queue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {Set<T>} */\n\t\tthis._set = new Set(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis._iterator = this._set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this._set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(item) {\n\t\tthis._set.add(item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this._iterator.next();\n\t\tif (result.done) return undefined;\n\t\tthis._set.delete(result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}