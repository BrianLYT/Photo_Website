{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst Dependency = require(\"../Dependency\");\n\nconst Module = require(\"../Module\");\n\nconst ModuleFactory = require(\"../ModuleFactory\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst Template = require(\"../Template\");\n\nconst CommonJsRequireDependency = require(\"../dependencies/CommonJsRequireDependency\");\n\nconst {\n  registerNotSerializable\n} = require(\"../util/serialization\");\n/** @typedef {import(\"../../declarations/WebpackOptions\")} WebpackOptions */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\n\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../dependencies/HarmonyImportDependency\")} HarmonyImportDependency */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\n * @typedef {Object} BackendApi\n * @property {function(Error=): void} dispose\n * @property {function(Module): { client: string, data: string, active: boolean }} module\n */\n\n\nconst HMR_DEPENDENCY_TYPES = new Set([\"import.meta.webpackHot.accept\", \"import.meta.webpackHot.decline\", \"module.hot.accept\", \"module.hot.decline\"]);\n/**\n * @param {undefined|string|RegExp|Function} test test option\n * @param {Module} module the module\n * @returns {boolean} true, if the module should be selected\n */\n\nconst checkTest = (test, module) => {\n  if (test === undefined) return true;\n\n  if (typeof test === \"function\") {\n    return test(module);\n  }\n\n  if (typeof test === \"string\") {\n    const name = module.nameForCondition();\n    return name && name.startsWith(test);\n  }\n\n  if (test instanceof RegExp) {\n    const name = module.nameForCondition();\n    return name && test.test(name);\n  }\n\n  return false;\n};\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass LazyCompilationDependency extends Dependency {\n  constructor(proxyModule) {\n    super();\n    this.proxyModule = proxyModule;\n  }\n\n  get category() {\n    return \"esm\";\n  }\n\n  get type() {\n    return \"lazy import()\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return this.proxyModule.originalModule.identifier();\n  }\n\n}\n\nregisterNotSerializable(LazyCompilationDependency);\n\nclass LazyCompilationProxyModule extends Module {\n  constructor(context, originalModule, request, client, data, active) {\n    super(\"lazy-compilation-proxy\", context, originalModule.layer);\n    this.originalModule = originalModule;\n    this.request = request;\n    this.client = client;\n    this.data = data;\n    this.active = active;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `lazy-compilation-proxy|${this.originalModule.identifier()}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `lazy-compilation-proxy ${this.originalModule.readableIdentifier(requestShortener)}`;\n  }\n  /**\n   * Assuming this module is in the cache. Update the (cached) module with\n   * the fresh module from the factory. Usually updates internal references\n   * and properties.\n   * @param {Module} module fresh module\n   * @returns {void}\n   */\n\n\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m =\n    /** @type {LazyCompilationProxyModule} */\n    module;\n    this.originalModule = m.originalModule;\n    this.request = m.request;\n    this.client = m.client;\n    this.data = m.data;\n    this.active = m.active;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return `${this.originalModule.libIdent(options)}!lazy-compilation-proxy`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo || this.buildInfo.active !== this.active);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildInfo = {\n      active: this.active\n    };\n    /** @type {BuildMeta} */\n\n    this.buildMeta = {};\n    this.clearDependenciesAndBlocks();\n    const dep = new CommonJsRequireDependency(this.client);\n    this.addDependency(dep);\n\n    if (this.active) {\n      const dep = new LazyCompilationDependency(this);\n      const block = new AsyncDependenciesBlock({});\n      block.addDependency(dep);\n      this.addBlock(block);\n    }\n\n    callback();\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 200;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      chunkGraph,\n      moduleGraph\n    } = _ref;\n    const sources = new Map();\n    const runtimeRequirements = new Set();\n    runtimeRequirements.add(RuntimeGlobals.module);\n    const clientDep =\n    /** @type {CommonJsRequireDependency} */\n    this.dependencies[0];\n    const clientModule = moduleGraph.getModule(clientDep);\n    const block = this.blocks[0];\n    const client = Template.asString([`var client = ${runtimeTemplate.moduleExports({\n      module: clientModule,\n      chunkGraph,\n      request: clientDep.userRequest,\n      runtimeRequirements\n    })}`, `var data = ${JSON.stringify(this.data)};`]);\n    const keepActive = Template.asString([`var dispose = client.keepAlive({ data: data, active: ${JSON.stringify(!!block)}, module: module, onError: onError });`]);\n    let source;\n\n    if (block) {\n      const dep = block.dependencies[0];\n      const module = moduleGraph.getModule(dep);\n      source = Template.asString([client, `module.exports = ${runtimeTemplate.moduleNamespacePromise({\n        chunkGraph,\n        block,\n        module,\n        request: this.request,\n        strict: false,\n        // TODO this should be inherited from the original module\n        message: \"import()\",\n        runtimeRequirements\n      })};`, \"if (module.hot) {\", Template.indent([\"module.hot.accept();\", `module.hot.accept(${JSON.stringify(chunkGraph.getModuleId(module))}, function() { module.hot.invalidate(); });`, \"module.hot.dispose(function(data) { delete data.resolveSelf; dispose(data); });\", \"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\"]), \"}\", \"function onError() { /* ignore */ }\", keepActive]);\n    } else {\n      source = Template.asString([client, \"var resolveSelf, onError;\", `module.exports = new Promise(function(resolve, reject) { resolveSelf = resolve; onError = reject; });`, \"if (module.hot) {\", Template.indent([\"module.hot.accept();\", \"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\", \"module.hot.dispose(function(data) { data.resolveSelf = resolveSelf; dispose(data); });\"]), \"}\", keepActive]);\n    }\n\n    sources.set(\"javascript\", new RawSource(source));\n    return {\n      sources,\n      runtimeRequirements\n    };\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    super.updateHash(hash, context);\n    hash.update(this.active ? \"active\" : \"\");\n    hash.update(JSON.stringify(this.data));\n  }\n\n}\n\nregisterNotSerializable(LazyCompilationProxyModule);\n\nclass LazyCompilationDependencyFactory extends ModuleFactory {\n  constructor(factory) {\n    super();\n    this._factory = factory;\n  }\n  /**\n   * @param {ModuleFactoryCreateData} data data object\n   * @param {function(Error=, ModuleFactoryResult=): void} callback callback\n   * @returns {void}\n   */\n\n\n  create(data, callback) {\n    const dependency =\n    /** @type {LazyCompilationDependency} */\n    data.dependencies[0];\n    callback(null, {\n      module: dependency.proxyModule.originalModule\n    });\n  }\n\n}\n\nclass LazyCompilationPlugin {\n  /**\n   * @param {Object} options options\n   * @param {(function(Compiler, function(Error?, BackendApi?): void): void) | function(Compiler): Promise<BackendApi>} options.backend the backend\n   * @param {boolean} options.entries true, when entries are lazy compiled\n   * @param {boolean} options.imports true, when import() modules are lazy compiled\n   * @param {RegExp | string | (function(Module): boolean)} options.test additional filter for lazy compiled entrypoint modules\n   */\n  constructor(_ref2) {\n    let {\n      backend,\n      entries,\n      imports,\n      test\n    } = _ref2;\n    this.backend = backend;\n    this.entries = entries;\n    this.imports = imports;\n    this.test = test;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    let backend;\n    compiler.hooks.beforeCompile.tapAsync(\"LazyCompilationPlugin\", (params, callback) => {\n      if (backend !== undefined) return callback();\n      const promise = this.backend(compiler, (err, result) => {\n        if (err) return callback(err);\n        backend = result;\n        callback();\n      });\n\n      if (promise && promise.then) {\n        promise.then(b => {\n          backend = b;\n          callback();\n        }, callback);\n      }\n    });\n    compiler.hooks.thisCompilation.tap(\"LazyCompilationPlugin\", (compilation, _ref3) => {\n      let {\n        normalModuleFactory\n      } = _ref3;\n      normalModuleFactory.hooks.module.tap(\"LazyCompilationPlugin\", (originalModule, createData, resolveData) => {\n        if (resolveData.dependencies.every(dep => HMR_DEPENDENCY_TYPES.has(dep.type))) {\n          // for HMR only resolving, try to determine if the HMR accept/decline refers to\n          // an import() or not\n          const hmrDep = resolveData.dependencies[0];\n          const originModule = compilation.moduleGraph.getParentModule(hmrDep);\n          const isReferringToDynamicImport = originModule.blocks.some(block => block.dependencies.some(dep => dep.type === \"import()\" &&\n          /** @type {HarmonyImportDependency} */\n          dep.request === hmrDep.request));\n          if (!isReferringToDynamicImport) return;\n        } else if (!resolveData.dependencies.every(dep => HMR_DEPENDENCY_TYPES.has(dep.type) || this.imports && (dep.type === \"import()\" || dep.type === \"import() context element\") || this.entries && dep.type === \"entry\")) return;\n\n        if (/webpack[/\\\\]hot[/\\\\]|webpack-dev-server[/\\\\]client|webpack-hot-middleware[/\\\\]client/.test(resolveData.request) || !checkTest(this.test, originalModule)) return;\n        const moduleInfo = backend.module(originalModule);\n        if (!moduleInfo) return;\n        const {\n          client,\n          data,\n          active\n        } = moduleInfo;\n        return new LazyCompilationProxyModule(compiler.context, originalModule, resolveData.request, client, data, active);\n      });\n      compilation.dependencyFactories.set(LazyCompilationDependency, new LazyCompilationDependencyFactory());\n    });\n    compiler.hooks.shutdown.tapAsync(\"LazyCompilationPlugin\", callback => {\n      backend.dispose(callback);\n    });\n  }\n\n}\n\nmodule.exports = LazyCompilationPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/hmr/LazyCompilationPlugin.js"],"names":["RawSource","require","AsyncDependenciesBlock","Dependency","Module","ModuleFactory","RuntimeGlobals","Template","CommonJsRequireDependency","registerNotSerializable","HMR_DEPENDENCY_TYPES","Set","checkTest","test","module","undefined","name","nameForCondition","startsWith","RegExp","TYPES","LazyCompilationDependency","constructor","proxyModule","category","type","getResourceIdentifier","originalModule","identifier","LazyCompilationProxyModule","context","request","client","data","active","layer","readableIdentifier","requestShortener","updateCacheModule","m","libIdent","options","needBuild","callback","buildInfo","build","compilation","resolver","fs","buildMeta","clearDependenciesAndBlocks","dep","addDependency","block","addBlock","getSourceTypes","size","codeGeneration","runtimeTemplate","chunkGraph","moduleGraph","sources","Map","runtimeRequirements","add","clientDep","dependencies","clientModule","getModule","blocks","asString","moduleExports","userRequest","JSON","stringify","keepActive","source","moduleNamespacePromise","strict","message","indent","getModuleId","set","updateHash","hash","update","LazyCompilationDependencyFactory","factory","_factory","create","dependency","LazyCompilationPlugin","backend","entries","imports","apply","compiler","hooks","beforeCompile","tapAsync","params","promise","err","result","then","b","thisCompilation","tap","normalModuleFactory","createData","resolveData","every","has","hmrDep","originModule","getParentModule","isReferringToDynamicImport","some","moduleInfo","dependencyFactories","shutdown","dispose","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,2BAAD,CAAtC;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMI,aAAa,GAAGJ,OAAO,CAAC,kBAAD,CAA7B;;AACA,MAAMK,cAAc,GAAGL,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMO,yBAAyB,GAAGP,OAAO,CAAC,2CAAD,CAAzC;;AACA,MAAM;AAAEQ,EAAAA;AAAF,IAA8BR,OAAO,CAAC,uBAAD,CAA3C;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMS,oBAAoB,GAAG,IAAIC,GAAJ,CAAQ,CACpC,+BADoC,EAEpC,gCAFoC,EAGpC,mBAHoC,EAIpC,oBAJoC,CAAR,CAA7B;AAOA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACnC,MAAID,IAAI,KAAKE,SAAb,EAAwB,OAAO,IAAP;;AACxB,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC/B,WAAOA,IAAI,CAACC,MAAD,CAAX;AACA;;AACD,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC7B,UAAMG,IAAI,GAAGF,MAAM,CAACG,gBAAP,EAAb;AACA,WAAOD,IAAI,IAAIA,IAAI,CAACE,UAAL,CAAgBL,IAAhB,CAAf;AACA;;AACD,MAAIA,IAAI,YAAYM,MAApB,EAA4B;AAC3B,UAAMH,IAAI,GAAGF,MAAM,CAACG,gBAAP,EAAb;AACA,WAAOD,IAAI,IAAIH,IAAI,CAACA,IAAL,CAAUG,IAAV,CAAf;AACA;;AACD,SAAO,KAAP;AACA,CAdD;;AAgBA,MAAMI,KAAK,GAAG,IAAIT,GAAJ,CAAQ,CAAC,YAAD,CAAR,CAAd;;AAEA,MAAMU,yBAAN,SAAwClB,UAAxC,CAAmD;AAClDmB,EAAAA,WAAW,CAACC,WAAD,EAAc;AACxB;AACA,SAAKA,WAAL,GAAmBA,WAAnB;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,KAAP;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,eAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,qBAAqB,GAAG;AACvB,WAAO,KAAKH,WAAL,CAAiBI,cAAjB,CAAgCC,UAAhC,EAAP;AACA;;AAnBiD;;AAsBnDnB,uBAAuB,CAACY,yBAAD,CAAvB;;AAEA,MAAMQ,0BAAN,SAAyCzB,MAAzC,CAAgD;AAC/CkB,EAAAA,WAAW,CAACQ,OAAD,EAAUH,cAAV,EAA0BI,OAA1B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,MAAjD,EAAyD;AACnE,UAAM,wBAAN,EAAgCJ,OAAhC,EAAyCH,cAAc,CAACQ,KAAxD;AACA,SAAKR,cAAL,GAAsBA,cAAtB;AACA,SAAKI,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;;;AACCN,EAAAA,UAAU,GAAG;AACZ,WAAQ,0BAAyB,KAAKD,cAAL,CAAoBC,UAApB,EAAiC,EAAlE;AACA;AAED;AACD;AACA;AACA;;;AACCQ,EAAAA,kBAAkB,CAACC,gBAAD,EAAmB;AACpC,WAAQ,0BAAyB,KAAKV,cAAL,CAAoBS,kBAApB,CAChCC,gBADgC,CAE/B,EAFF;AAGA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,iBAAiB,CAACxB,MAAD,EAAS;AACzB,UAAMwB,iBAAN,CAAwBxB,MAAxB;AACA,UAAMyB,CAAC;AAAG;AAA2CzB,IAAAA,MAArD;AACA,SAAKa,cAAL,GAAsBY,CAAC,CAACZ,cAAxB;AACA,SAAKI,OAAL,GAAeQ,CAAC,CAACR,OAAjB;AACA,SAAKC,MAAL,GAAcO,CAAC,CAACP,MAAhB;AACA,SAAKC,IAAL,GAAYM,CAAC,CAACN,IAAd;AACA,SAAKC,MAAL,GAAcK,CAAC,CAACL,MAAhB;AACA;AAED;AACD;AACA;AACA;;;AACCM,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACjB,WAAQ,GAAE,KAAKd,cAAL,CAAoBa,QAApB,CAA6BC,OAA7B,CAAsC,yBAAhD;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,SAAS,CAACZ,OAAD,EAAUa,QAAV,EAAoB;AAC5BA,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAC,KAAKC,SAAN,IAAmB,KAAKA,SAAL,CAAeV,MAAf,KAA0B,KAAKA,MAAzD,CAAR;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCW,EAAAA,KAAK,CAACJ,OAAD,EAAUK,WAAV,EAAuBC,QAAvB,EAAiCC,EAAjC,EAAqCL,QAArC,EAA+C;AACnD,SAAKC,SAAL,GAAiB;AAChBV,MAAAA,MAAM,EAAE,KAAKA;AADG,KAAjB;AAGA;;AACA,SAAKe,SAAL,GAAiB,EAAjB;AACA,SAAKC,0BAAL;AACA,UAAMC,GAAG,GAAG,IAAI3C,yBAAJ,CAA8B,KAAKwB,MAAnC,CAAZ;AACA,SAAKoB,aAAL,CAAmBD,GAAnB;;AACA,QAAI,KAAKjB,MAAT,EAAiB;AAChB,YAAMiB,GAAG,GAAG,IAAI9B,yBAAJ,CAA8B,IAA9B,CAAZ;AACA,YAAMgC,KAAK,GAAG,IAAInD,sBAAJ,CAA2B,EAA3B,CAAd;AACAmD,MAAAA,KAAK,CAACD,aAAN,CAAoBD,GAApB;AACA,WAAKG,QAAL,CAAcD,KAAd;AACA;;AACDV,IAAAA,QAAQ;AACR;AAED;AACD;AACA;;;AACCY,EAAAA,cAAc,GAAG;AAChB,WAAOnC,KAAP;AACA;AAED;AACD;AACA;AACA;;;AACCoC,EAAAA,IAAI,CAAC/B,IAAD,EAAO;AACV,WAAO,GAAP;AACA;AAED;AACD;AACA;AACA;;;AACCgC,EAAAA,cAAc,OAA+C;AAAA,QAA9C;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,UAAnB;AAA+BC,MAAAA;AAA/B,KAA8C;AAC5D,UAAMC,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AACA,UAAMC,mBAAmB,GAAG,IAAIpD,GAAJ,EAA5B;AACAoD,IAAAA,mBAAmB,CAACC,GAApB,CAAwB1D,cAAc,CAACQ,MAAvC;AACA,UAAMmD,SAAS;AAAG;AACjB,SAAKC,YAAL,CAAkB,CAAlB,CADD;AAGA,UAAMC,YAAY,GAAGP,WAAW,CAACQ,SAAZ,CAAsBH,SAAtB,CAArB;AACA,UAAMZ,KAAK,GAAG,KAAKgB,MAAL,CAAY,CAAZ,CAAd;AACA,UAAMrC,MAAM,GAAGzB,QAAQ,CAAC+D,QAAT,CAAkB,CAC/B,gBAAeZ,eAAe,CAACa,aAAhB,CAA8B;AAC7CzD,MAAAA,MAAM,EAAEqD,YADqC;AAE7CR,MAAAA,UAF6C;AAG7C5B,MAAAA,OAAO,EAAEkC,SAAS,CAACO,WAH0B;AAI7CT,MAAAA;AAJ6C,KAA9B,CAKb,EAN6B,EAO/B,cAAaU,IAAI,CAACC,SAAL,CAAe,KAAKzC,IAApB,CAA0B,GAPR,CAAlB,CAAf;AASA,UAAM0C,UAAU,GAAGpE,QAAQ,CAAC+D,QAAT,CAAkB,CACnC,wDAAuDG,IAAI,CAACC,SAAL,CACvD,CAAC,CAACrB,KADqD,CAEtD,wCAHkC,CAAlB,CAAnB;AAKA,QAAIuB,MAAJ;;AACA,QAAIvB,KAAJ,EAAW;AACV,YAAMF,GAAG,GAAGE,KAAK,CAACa,YAAN,CAAmB,CAAnB,CAAZ;AACA,YAAMpD,MAAM,GAAG8C,WAAW,CAACQ,SAAZ,CAAsBjB,GAAtB,CAAf;AACAyB,MAAAA,MAAM,GAAGrE,QAAQ,CAAC+D,QAAT,CAAkB,CAC1BtC,MAD0B,EAEzB,oBAAmB0B,eAAe,CAACmB,sBAAhB,CAAuC;AAC1DlB,QAAAA,UAD0D;AAE1DN,QAAAA,KAF0D;AAG1DvC,QAAAA,MAH0D;AAI1DiB,QAAAA,OAAO,EAAE,KAAKA,OAJ4C;AAK1D+C,QAAAA,MAAM,EAAE,KALkD;AAK3C;AACfC,QAAAA,OAAO,EAAE,UANiD;AAO1DhB,QAAAA;AAP0D,OAAvC,CAQjB,GAVuB,EAW1B,mBAX0B,EAY1BxD,QAAQ,CAACyE,MAAT,CAAgB,CACf,sBADe,EAEd,qBAAoBP,IAAI,CAACC,SAAL,CACpBf,UAAU,CAACsB,WAAX,CAAuBnE,MAAvB,CADoB,CAEnB,6CAJa,EAKf,iFALe,EAMf,kGANe,CAAhB,CAZ0B,EAoB1B,GApB0B,EAqB1B,qCArB0B,EAsB1B6D,UAtB0B,CAAlB,CAAT;AAwBA,KA3BD,MA2BO;AACNC,MAAAA,MAAM,GAAGrE,QAAQ,CAAC+D,QAAT,CAAkB,CAC1BtC,MAD0B,EAE1B,2BAF0B,EAGzB,uGAHyB,EAI1B,mBAJ0B,EAK1BzB,QAAQ,CAACyE,MAAT,CAAgB,CACf,sBADe,EAEf,kGAFe,EAGf,wFAHe,CAAhB,CAL0B,EAU1B,GAV0B,EAW1BL,UAX0B,CAAlB,CAAT;AAaA;;AACDd,IAAAA,OAAO,CAACqB,GAAR,CAAY,YAAZ,EAA0B,IAAIlF,SAAJ,CAAc4E,MAAd,CAA1B;AACA,WAAO;AACNf,MAAAA,OADM;AAENE,MAAAA;AAFM,KAAP;AAIA;AAED;AACD;AACA;AACA;AACA;;;AACCoB,EAAAA,UAAU,CAACC,IAAD,EAAOtD,OAAP,EAAgB;AACzB,UAAMqD,UAAN,CAAiBC,IAAjB,EAAuBtD,OAAvB;AACAsD,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKnD,MAAL,GAAc,QAAd,GAAyB,EAArC;AACAkD,IAAAA,IAAI,CAACC,MAAL,CAAYZ,IAAI,CAACC,SAAL,CAAe,KAAKzC,IAApB,CAAZ;AACA;;AA5L8C;;AA+LhDxB,uBAAuB,CAACoB,0BAAD,CAAvB;;AAEA,MAAMyD,gCAAN,SAA+CjF,aAA/C,CAA6D;AAC5DiB,EAAAA,WAAW,CAACiE,OAAD,EAAU;AACpB;AACA,SAAKC,QAAL,GAAgBD,OAAhB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,MAAM,CAACxD,IAAD,EAAOU,QAAP,EAAiB;AACtB,UAAM+C,UAAU;AAAG;AAClBzD,IAAAA,IAAI,CAACiC,YAAL,CAAkB,CAAlB,CADD;AAGAvB,IAAAA,QAAQ,CAAC,IAAD,EAAO;AACd7B,MAAAA,MAAM,EAAE4E,UAAU,CAACnE,WAAX,CAAuBI;AADjB,KAAP,CAAR;AAGA;;AAlB2D;;AAqB7D,MAAMgE,qBAAN,CAA4B;AAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACCrE,EAAAA,WAAW,QAAsC;AAAA,QAArC;AAAEsE,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,OAApB;AAA6BjF,MAAAA;AAA7B,KAAqC;AAChD,SAAK+E,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKjF,IAAL,GAAYA,IAAZ;AACA;AACD;AACD;AACA;AACA;AACA;;;AACCkF,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,QAAIJ,OAAJ;AACAI,IAAAA,QAAQ,CAACC,KAAT,CAAeC,aAAf,CAA6BC,QAA7B,CACC,uBADD,EAEC,CAACC,MAAD,EAASzD,QAAT,KAAsB;AACrB,UAAIiD,OAAO,KAAK7E,SAAhB,EAA2B,OAAO4B,QAAQ,EAAf;AAC3B,YAAM0D,OAAO,GAAG,KAAKT,OAAL,CAAaI,QAAb,EAAuB,CAACM,GAAD,EAAMC,MAAN,KAAiB;AACvD,YAAID,GAAJ,EAAS,OAAO3D,QAAQ,CAAC2D,GAAD,CAAf;AACTV,QAAAA,OAAO,GAAGW,MAAV;AACA5D,QAAAA,QAAQ;AACR,OAJe,CAAhB;;AAKA,UAAI0D,OAAO,IAAIA,OAAO,CAACG,IAAvB,EAA6B;AAC5BH,QAAAA,OAAO,CAACG,IAAR,CAAaC,CAAC,IAAI;AACjBb,UAAAA,OAAO,GAAGa,CAAV;AACA9D,UAAAA,QAAQ;AACR,SAHD,EAGGA,QAHH;AAIA;AACD,KAfF;AAiBAqD,IAAAA,QAAQ,CAACC,KAAT,CAAeS,eAAf,CAA+BC,GAA/B,CACC,uBADD,EAEC,CAAC7D,WAAD,YAA0C;AAAA,UAA5B;AAAE8D,QAAAA;AAAF,OAA4B;AACzCA,MAAAA,mBAAmB,CAACX,KAApB,CAA0BnF,MAA1B,CAAiC6F,GAAjC,CACC,uBADD,EAEC,CAAChF,cAAD,EAAiBkF,UAAjB,EAA6BC,WAA7B,KAA6C;AAC5C,YACCA,WAAW,CAAC5C,YAAZ,CAAyB6C,KAAzB,CAA+B5D,GAAG,IACjCzC,oBAAoB,CAACsG,GAArB,CAAyB7D,GAAG,CAAC1B,IAA7B,CADD,CADD,EAIE;AACD;AACA;AACA,gBAAMwF,MAAM,GAAGH,WAAW,CAAC5C,YAAZ,CAAyB,CAAzB,CAAf;AACA,gBAAMgD,YAAY,GACjBpE,WAAW,CAACc,WAAZ,CAAwBuD,eAAxB,CAAwCF,MAAxC,CADD;AAEA,gBAAMG,0BAA0B,GAAGF,YAAY,CAAC7C,MAAb,CAAoBgD,IAApB,CAClChE,KAAK,IACJA,KAAK,CAACa,YAAN,CAAmBmD,IAAnB,CACClE,GAAG,IACFA,GAAG,CAAC1B,IAAJ,KAAa,UAAb;AACA;AAAwC0B,UAAAA,GAAD,CAAMpB,OAAN,KACtCkF,MAAM,CAAClF,OAJV,CAFiC,CAAnC;AASA,cAAI,CAACqF,0BAAL,EAAiC;AACjC,SApBD,MAoBO,IACN,CAACN,WAAW,CAAC5C,YAAZ,CAAyB6C,KAAzB,CACA5D,GAAG,IACFzC,oBAAoB,CAACsG,GAArB,CAAyB7D,GAAG,CAAC1B,IAA7B,KACC,KAAKqE,OAAL,KACC3C,GAAG,CAAC1B,IAAJ,KAAa,UAAb,IACA0B,GAAG,CAAC1B,IAAJ,KAAa,0BAFd,CADD,IAIC,KAAKoE,OAAL,IAAgB1C,GAAG,CAAC1B,IAAJ,KAAa,OAN/B,CADK,EAUN;;AACD,YACC,uFAAuFZ,IAAvF,CACCiG,WAAW,CAAC/E,OADb,KAGA,CAACnB,SAAS,CAAC,KAAKC,IAAN,EAAYc,cAAZ,CAJX,EAMC;AACD,cAAM2F,UAAU,GAAG1B,OAAO,CAAC9E,MAAR,CAAea,cAAf,CAAnB;AACA,YAAI,CAAC2F,UAAL,EAAiB;AACjB,cAAM;AAAEtF,UAAAA,MAAF;AAAUC,UAAAA,IAAV;AAAgBC,UAAAA;AAAhB,YAA2BoF,UAAjC;AAEA,eAAO,IAAIzF,0BAAJ,CACNmE,QAAQ,CAAClE,OADH,EAENH,cAFM,EAGNmF,WAAW,CAAC/E,OAHN,EAINC,MAJM,EAKNC,IALM,EAMNC,MANM,CAAP;AAQA,OArDF;AAuDAY,MAAAA,WAAW,CAACyE,mBAAZ,CAAgCrC,GAAhC,CACC7D,yBADD,EAEC,IAAIiE,gCAAJ,EAFD;AAIA,KA9DF;AAgEAU,IAAAA,QAAQ,CAACC,KAAT,CAAeuB,QAAf,CAAwBrB,QAAxB,CAAiC,uBAAjC,EAA0DxD,QAAQ,IAAI;AACrEiD,MAAAA,OAAO,CAAC6B,OAAR,CAAgB9E,QAAhB;AACA,KAFD;AAGA;;AAzG0B;;AA4G5B7B,MAAM,CAAC4G,OAAP,GAAiB/B,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst Dependency = require(\"../Dependency\");\nconst Module = require(\"../Module\");\nconst ModuleFactory = require(\"../ModuleFactory\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst CommonJsRequireDependency = require(\"../dependencies/CommonJsRequireDependency\");\nconst { registerNotSerializable } = require(\"../util/serialization\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\")} WebpackOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryCreateData} ModuleFactoryCreateData */\n/** @typedef {import(\"../ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../dependencies/HarmonyImportDependency\")} HarmonyImportDependency */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/**\n * @typedef {Object} BackendApi\n * @property {function(Error=): void} dispose\n * @property {function(Module): { client: string, data: string, active: boolean }} module\n */\n\nconst HMR_DEPENDENCY_TYPES = new Set([\n\t\"import.meta.webpackHot.accept\",\n\t\"import.meta.webpackHot.decline\",\n\t\"module.hot.accept\",\n\t\"module.hot.decline\"\n]);\n\n/**\n * @param {undefined|string|RegExp|Function} test test option\n * @param {Module} module the module\n * @returns {boolean} true, if the module should be selected\n */\nconst checkTest = (test, module) => {\n\tif (test === undefined) return true;\n\tif (typeof test === \"function\") {\n\t\treturn test(module);\n\t}\n\tif (typeof test === \"string\") {\n\t\tconst name = module.nameForCondition();\n\t\treturn name && name.startsWith(test);\n\t}\n\tif (test instanceof RegExp) {\n\t\tconst name = module.nameForCondition();\n\t\treturn name && test.test(name);\n\t}\n\treturn false;\n};\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass LazyCompilationDependency extends Dependency {\n\tconstructor(proxyModule) {\n\t\tsuper();\n\t\tthis.proxyModule = proxyModule;\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\tget type() {\n\t\treturn \"lazy import()\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn this.proxyModule.originalModule.identifier();\n\t}\n}\n\nregisterNotSerializable(LazyCompilationDependency);\n\nclass LazyCompilationProxyModule extends Module {\n\tconstructor(context, originalModule, request, client, data, active) {\n\t\tsuper(\"lazy-compilation-proxy\", context, originalModule.layer);\n\t\tthis.originalModule = originalModule;\n\t\tthis.request = request;\n\t\tthis.client = client;\n\t\tthis.data = data;\n\t\tthis.active = active;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `lazy-compilation-proxy|${this.originalModule.identifier()}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `lazy-compilation-proxy ${this.originalModule.readableIdentifier(\n\t\t\trequestShortener\n\t\t)}`;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Update the (cached) module with\n\t * the fresh module from the factory. Usually updates internal references\n\t * and properties.\n\t * @param {Module} module fresh module\n\t * @returns {void}\n\t */\n\tupdateCacheModule(module) {\n\t\tsuper.updateCacheModule(module);\n\t\tconst m = /** @type {LazyCompilationProxyModule} */ (module);\n\t\tthis.originalModule = m.originalModule;\n\t\tthis.request = m.request;\n\t\tthis.client = m.client;\n\t\tthis.data = m.data;\n\t\tthis.active = m.active;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.originalModule.libIdent(options)}!lazy-compilation-proxy`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo || this.buildInfo.active !== this.active);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildInfo = {\n\t\t\tactive: this.active\n\t\t};\n\t\t/** @type {BuildMeta} */\n\t\tthis.buildMeta = {};\n\t\tthis.clearDependenciesAndBlocks();\n\t\tconst dep = new CommonJsRequireDependency(this.client);\n\t\tthis.addDependency(dep);\n\t\tif (this.active) {\n\t\t\tconst dep = new LazyCompilationDependency(this);\n\t\t\tconst block = new AsyncDependenciesBlock({});\n\t\t\tblock.addDependency(dep);\n\t\t\tthis.addBlock(block);\n\t\t}\n\t\tcallback();\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 200;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, chunkGraph, moduleGraph }) {\n\t\tconst sources = new Map();\n\t\tconst runtimeRequirements = new Set();\n\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\tconst clientDep = /** @type {CommonJsRequireDependency} */ (\n\t\t\tthis.dependencies[0]\n\t\t);\n\t\tconst clientModule = moduleGraph.getModule(clientDep);\n\t\tconst block = this.blocks[0];\n\t\tconst client = Template.asString([\n\t\t\t`var client = ${runtimeTemplate.moduleExports({\n\t\t\t\tmodule: clientModule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest: clientDep.userRequest,\n\t\t\t\truntimeRequirements\n\t\t\t})}`,\n\t\t\t`var data = ${JSON.stringify(this.data)};`\n\t\t]);\n\t\tconst keepActive = Template.asString([\n\t\t\t`var dispose = client.keepAlive({ data: data, active: ${JSON.stringify(\n\t\t\t\t!!block\n\t\t\t)}, module: module, onError: onError });`\n\t\t]);\n\t\tlet source;\n\t\tif (block) {\n\t\t\tconst dep = block.dependencies[0];\n\t\t\tconst module = moduleGraph.getModule(dep);\n\t\t\tsource = Template.asString([\n\t\t\t\tclient,\n\t\t\t\t`module.exports = ${runtimeTemplate.moduleNamespacePromise({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tblock,\n\t\t\t\t\tmodule,\n\t\t\t\t\trequest: this.request,\n\t\t\t\t\tstrict: false, // TODO this should be inherited from the original module\n\t\t\t\t\tmessage: \"import()\",\n\t\t\t\t\truntimeRequirements\n\t\t\t\t})};`,\n\t\t\t\t\"if (module.hot) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"module.hot.accept();\",\n\t\t\t\t\t`module.hot.accept(${JSON.stringify(\n\t\t\t\t\t\tchunkGraph.getModuleId(module)\n\t\t\t\t\t)}, function() { module.hot.invalidate(); });`,\n\t\t\t\t\t\"module.hot.dispose(function(data) { delete data.resolveSelf; dispose(data); });\",\n\t\t\t\t\t\"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\"\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\t\"function onError() { /* ignore */ }\",\n\t\t\t\tkeepActive\n\t\t\t]);\n\t\t} else {\n\t\t\tsource = Template.asString([\n\t\t\t\tclient,\n\t\t\t\t\"var resolveSelf, onError;\",\n\t\t\t\t`module.exports = new Promise(function(resolve, reject) { resolveSelf = resolve; onError = reject; });`,\n\t\t\t\t\"if (module.hot) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"module.hot.accept();\",\n\t\t\t\t\t\"if (module.hot.data && module.hot.data.resolveSelf) module.hot.data.resolveSelf(module.exports);\",\n\t\t\t\t\t\"module.hot.dispose(function(data) { data.resolveSelf = resolveSelf; dispose(data); });\"\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\tkeepActive\n\t\t\t]);\n\t\t}\n\t\tsources.set(\"javascript\", new RawSource(source));\n\t\treturn {\n\t\t\tsources,\n\t\t\truntimeRequirements\n\t\t};\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tsuper.updateHash(hash, context);\n\t\thash.update(this.active ? \"active\" : \"\");\n\t\thash.update(JSON.stringify(this.data));\n\t}\n}\n\nregisterNotSerializable(LazyCompilationProxyModule);\n\nclass LazyCompilationDependencyFactory extends ModuleFactory {\n\tconstructor(factory) {\n\t\tsuper();\n\t\tthis._factory = factory;\n\t}\n\n\t/**\n\t * @param {ModuleFactoryCreateData} data data object\n\t * @param {function(Error=, ModuleFactoryResult=): void} callback callback\n\t * @returns {void}\n\t */\n\tcreate(data, callback) {\n\t\tconst dependency = /** @type {LazyCompilationDependency} */ (\n\t\t\tdata.dependencies[0]\n\t\t);\n\t\tcallback(null, {\n\t\t\tmodule: dependency.proxyModule.originalModule\n\t\t});\n\t}\n}\n\nclass LazyCompilationPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {(function(Compiler, function(Error?, BackendApi?): void): void) | function(Compiler): Promise<BackendApi>} options.backend the backend\n\t * @param {boolean} options.entries true, when entries are lazy compiled\n\t * @param {boolean} options.imports true, when import() modules are lazy compiled\n\t * @param {RegExp | string | (function(Module): boolean)} options.test additional filter for lazy compiled entrypoint modules\n\t */\n\tconstructor({ backend, entries, imports, test }) {\n\t\tthis.backend = backend;\n\t\tthis.entries = entries;\n\t\tthis.imports = imports;\n\t\tthis.test = test;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tlet backend;\n\t\tcompiler.hooks.beforeCompile.tapAsync(\n\t\t\t\"LazyCompilationPlugin\",\n\t\t\t(params, callback) => {\n\t\t\t\tif (backend !== undefined) return callback();\n\t\t\t\tconst promise = this.backend(compiler, (err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tbackend = result;\n\t\t\t\t\tcallback();\n\t\t\t\t});\n\t\t\t\tif (promise && promise.then) {\n\t\t\t\t\tpromise.then(b => {\n\t\t\t\t\t\tbackend = b;\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}, callback);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"LazyCompilationPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"LazyCompilationPlugin\",\n\t\t\t\t\t(originalModule, createData, resolveData) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tresolveData.dependencies.every(dep =>\n\t\t\t\t\t\t\t\tHMR_DEPENDENCY_TYPES.has(dep.type)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// for HMR only resolving, try to determine if the HMR accept/decline refers to\n\t\t\t\t\t\t\t// an import() or not\n\t\t\t\t\t\t\tconst hmrDep = resolveData.dependencies[0];\n\t\t\t\t\t\t\tconst originModule =\n\t\t\t\t\t\t\t\tcompilation.moduleGraph.getParentModule(hmrDep);\n\t\t\t\t\t\t\tconst isReferringToDynamicImport = originModule.blocks.some(\n\t\t\t\t\t\t\t\tblock =>\n\t\t\t\t\t\t\t\t\tblock.dependencies.some(\n\t\t\t\t\t\t\t\t\t\tdep =>\n\t\t\t\t\t\t\t\t\t\t\tdep.type === \"import()\" &&\n\t\t\t\t\t\t\t\t\t\t\t/** @type {HarmonyImportDependency} */ (dep).request ===\n\t\t\t\t\t\t\t\t\t\t\t\thmrDep.request\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!isReferringToDynamicImport) return;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t!resolveData.dependencies.every(\n\t\t\t\t\t\t\t\tdep =>\n\t\t\t\t\t\t\t\t\tHMR_DEPENDENCY_TYPES.has(dep.type) ||\n\t\t\t\t\t\t\t\t\t(this.imports &&\n\t\t\t\t\t\t\t\t\t\t(dep.type === \"import()\" ||\n\t\t\t\t\t\t\t\t\t\t\tdep.type === \"import() context element\")) ||\n\t\t\t\t\t\t\t\t\t(this.entries && dep.type === \"entry\")\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t/webpack[/\\\\]hot[/\\\\]|webpack-dev-server[/\\\\]client|webpack-hot-middleware[/\\\\]client/.test(\n\t\t\t\t\t\t\t\tresolveData.request\n\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t!checkTest(this.test, originalModule)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tconst moduleInfo = backend.module(originalModule);\n\t\t\t\t\t\tif (!moduleInfo) return;\n\t\t\t\t\t\tconst { client, data, active } = moduleInfo;\n\n\t\t\t\t\t\treturn new LazyCompilationProxyModule(\n\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\toriginalModule,\n\t\t\t\t\t\t\tresolveData.request,\n\t\t\t\t\t\t\tclient,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tactive\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLazyCompilationDependency,\n\t\t\t\t\tnew LazyCompilationDependencyFactory()\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.shutdown.tapAsync(\"LazyCompilationPlugin\", callback => {\n\t\t\tbackend.dispose(callback);\n\t\t});\n\t}\n}\n\nmodule.exports = LazyCompilationPlugin;\n"]},"metadata":{},"sourceType":"script"}