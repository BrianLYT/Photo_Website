{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass AddBuildDependenciesPlugin {\n  /**\n   * @param {Iterable<string>} buildDependencies list of build dependencies\n   */\n  constructor(buildDependencies) {\n    this.buildDependencies = new Set(buildDependencies);\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"AddBuildDependenciesPlugin\", compilation => {\n      compilation.buildDependencies.addAll(this.buildDependencies);\n    });\n  }\n\n}\n\nmodule.exports = AddBuildDependenciesPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/cache/AddBuildDependenciesPlugin.js"],"names":["AddBuildDependenciesPlugin","constructor","buildDependencies","Set","apply","compiler","hooks","compilation","tap","addAll","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMA,0BAAN,CAAiC;AAChC;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,iBAAD,EAAoB;AAC9B,SAAKA,iBAAL,GAAyB,IAAIC,GAAJ,CAAQD,iBAAR,CAAzB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,4BADD,EAECD,WAAW,IAAI;AACdA,MAAAA,WAAW,CAACL,iBAAZ,CAA8BO,MAA9B,CAAqC,KAAKP,iBAA1C;AACA,KAJF;AAMA;;AApB+B;;AAuBjCQ,MAAM,CAACC,OAAP,GAAiBX,0BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass AddBuildDependenciesPlugin {\n\t/**\n\t * @param {Iterable<string>} buildDependencies list of build dependencies\n\t */\n\tconstructor(buildDependencies) {\n\t\tthis.buildDependencies = new Set(buildDependencies);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AddBuildDependenciesPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.buildDependencies.addAll(this.buildDependencies);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AddBuildDependenciesPlugin;\n"]},"metadata":{},"sourceType":"script"}