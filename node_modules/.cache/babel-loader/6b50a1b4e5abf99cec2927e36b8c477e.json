{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass NoEmitOnErrorsPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.shouldEmit.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n      if (compilation.getStats().hasErrors()) return false;\n    });\n    compiler.hooks.compilation.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n      compilation.hooks.shouldRecord.tap(\"NoEmitOnErrorsPlugin\", () => {\n        if (compilation.getStats().hasErrors()) return false;\n      });\n    });\n  }\n\n}\n\nmodule.exports = NoEmitOnErrorsPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/NoEmitOnErrorsPlugin.js"],"names":["NoEmitOnErrorsPlugin","apply","compiler","hooks","shouldEmit","tap","compilation","getStats","hasErrors","shouldRecord","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMA,oBAAN,CAA2B;AAC1B;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,UAAf,CAA0BC,GAA1B,CAA8B,sBAA9B,EAAsDC,WAAW,IAAI;AACpE,UAAIA,WAAW,CAACC,QAAZ,GAAuBC,SAAvB,EAAJ,EAAwC,OAAO,KAAP;AACxC,KAFD;AAGAN,IAAAA,QAAQ,CAACC,KAAT,CAAeG,WAAf,CAA2BD,GAA3B,CAA+B,sBAA/B,EAAuDC,WAAW,IAAI;AACrEA,MAAAA,WAAW,CAACH,KAAZ,CAAkBM,YAAlB,CAA+BJ,GAA/B,CAAmC,sBAAnC,EAA2D,MAAM;AAChE,YAAIC,WAAW,CAACC,QAAZ,GAAuBC,SAAvB,EAAJ,EAAwC,OAAO,KAAP;AACxC,OAFD;AAGA,KAJD;AAKA;;AAfyB;;AAkB3BE,MAAM,CAACC,OAAP,GAAiBX,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass NoEmitOnErrorsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.shouldEmit.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t});\n\t\tcompiler.hooks.compilation.tap(\"NoEmitOnErrorsPlugin\", compilation => {\n\t\t\tcompilation.hooks.shouldRecord.tap(\"NoEmitOnErrorsPlugin\", () => {\n\t\t\t\tif (compilation.getStats().hasErrors()) return false;\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NoEmitOnErrorsPlugin;\n"]},"metadata":{},"sourceType":"script"}