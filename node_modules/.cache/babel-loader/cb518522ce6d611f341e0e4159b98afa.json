{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/**\n * @param {Module[]} modules the modules to be sorted\n * @returns {Module[]} sorted version of original modules\n */\n\n\nconst sortModules = modules => {\n  return modules.sort((a, b) => {\n    const aIdent = a.identifier();\n    const bIdent = b.identifier();\n    /* istanbul ignore next */\n\n    if (aIdent < bIdent) return -1;\n    /* istanbul ignore next */\n\n    if (aIdent > bIdent) return 1;\n    /* istanbul ignore next */\n\n    return 0;\n  });\n};\n/**\n * @param {Module[]} modules each module from throw\n * @param {ModuleGraph} moduleGraph the module graph\n * @returns {string} each message from provided modules\n */\n\n\nconst createModulesListMessage = (modules, moduleGraph) => {\n  return modules.map(m => {\n    let message = `* ${m.identifier()}`;\n    const validReasons = Array.from(moduleGraph.getIncomingConnectionsByOriginModule(m).keys()).filter(x => x);\n\n    if (validReasons.length > 0) {\n      message += `\\n    Used by ${validReasons.length} module(s), i. e.`;\n      message += `\\n    ${validReasons[0].identifier()}`;\n    }\n\n    return message;\n  }).join(\"\\n\");\n};\n\nclass CaseSensitiveModulesWarning extends WebpackError {\n  /**\n   * Creates an instance of CaseSensitiveModulesWarning.\n   * @param {Iterable<Module>} modules modules that were detected\n   * @param {ModuleGraph} moduleGraph the module graph\n   */\n  constructor(modules, moduleGraph) {\n    const sortedModules = sortModules(Array.from(modules));\n    const modulesList = createModulesListMessage(sortedModules, moduleGraph);\n    super(`There are multiple modules with names that only differ in casing.\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\nUse equal casing. Compare these module identifiers:\n${modulesList}`);\n    this.name = \"CaseSensitiveModulesWarning\";\n    this.module = sortedModules[0];\n  }\n\n}\n\nmodule.exports = CaseSensitiveModulesWarning;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/CaseSensitiveModulesWarning.js"],"names":["WebpackError","require","sortModules","modules","sort","a","b","aIdent","identifier","bIdent","createModulesListMessage","moduleGraph","map","m","message","validReasons","Array","from","getIncomingConnectionsByOriginModule","keys","filter","x","length","join","CaseSensitiveModulesWarning","constructor","sortedModules","modulesList","name","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,WAAW,GAAGC,OAAO,IAAI;AAC9B,SAAOA,OAAO,CAACC,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7B,UAAMC,MAAM,GAAGF,CAAC,CAACG,UAAF,EAAf;AACA,UAAMC,MAAM,GAAGH,CAAC,CAACE,UAAF,EAAf;AACA;;AACA,QAAID,MAAM,GAAGE,MAAb,EAAqB,OAAO,CAAC,CAAR;AACrB;;AACA,QAAIF,MAAM,GAAGE,MAAb,EAAqB,OAAO,CAAP;AACrB;;AACA,WAAO,CAAP;AACA,GATM,CAAP;AAUA,CAXD;AAaA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,wBAAwB,GAAG,CAACP,OAAD,EAAUQ,WAAV,KAA0B;AAC1D,SAAOR,OAAO,CACZS,GADK,CACDC,CAAC,IAAI;AACT,QAAIC,OAAO,GAAI,KAAID,CAAC,CAACL,UAAF,EAAe,EAAlC;AACA,UAAMO,YAAY,GAAGC,KAAK,CAACC,IAAN,CACpBN,WAAW,CAACO,oCAAZ,CAAiDL,CAAjD,EAAoDM,IAApD,EADoB,EAEnBC,MAFmB,CAEZC,CAAC,IAAIA,CAFO,CAArB;;AAIA,QAAIN,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AAC5BR,MAAAA,OAAO,IAAK,iBAAgBC,YAAY,CAACO,MAAO,mBAAhD;AACAR,MAAAA,OAAO,IAAK,SAAQC,YAAY,CAAC,CAAD,CAAZ,CAAgBP,UAAhB,EAA6B,EAAjD;AACA;;AACD,WAAOM,OAAP;AACA,GAZK,EAaLS,IAbK,CAaA,IAbA,CAAP;AAcA,CAfD;;AAiBA,MAAMC,2BAAN,SAA0CxB,YAA1C,CAAuD;AACtD;AACD;AACA;AACA;AACA;AACCyB,EAAAA,WAAW,CAACtB,OAAD,EAAUQ,WAAV,EAAuB;AACjC,UAAMe,aAAa,GAAGxB,WAAW,CAACc,KAAK,CAACC,IAAN,CAAWd,OAAX,CAAD,CAAjC;AACA,UAAMwB,WAAW,GAAGjB,wBAAwB,CAACgB,aAAD,EAAgBf,WAAhB,CAA5C;AACA,UAAO;AACT;AACA;AACA,EAAEgB,WAAY,EAHZ;AAKA,SAAKC,IAAL,GAAY,6BAAZ;AACA,SAAKC,MAAL,GAAcH,aAAa,CAAC,CAAD,CAA3B;AACA;;AAhBqD;;AAmBvDG,MAAM,CAACC,OAAP,GAAiBN,2BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/**\n * @param {Module[]} modules the modules to be sorted\n * @returns {Module[]} sorted version of original modules\n */\nconst sortModules = modules => {\n\treturn modules.sort((a, b) => {\n\t\tconst aIdent = a.identifier();\n\t\tconst bIdent = b.identifier();\n\t\t/* istanbul ignore next */\n\t\tif (aIdent < bIdent) return -1;\n\t\t/* istanbul ignore next */\n\t\tif (aIdent > bIdent) return 1;\n\t\t/* istanbul ignore next */\n\t\treturn 0;\n\t});\n};\n\n/**\n * @param {Module[]} modules each module from throw\n * @param {ModuleGraph} moduleGraph the module graph\n * @returns {string} each message from provided modules\n */\nconst createModulesListMessage = (modules, moduleGraph) => {\n\treturn modules\n\t\t.map(m => {\n\t\t\tlet message = `* ${m.identifier()}`;\n\t\t\tconst validReasons = Array.from(\n\t\t\t\tmoduleGraph.getIncomingConnectionsByOriginModule(m).keys()\n\t\t\t).filter(x => x);\n\n\t\t\tif (validReasons.length > 0) {\n\t\t\t\tmessage += `\\n    Used by ${validReasons.length} module(s), i. e.`;\n\t\t\t\tmessage += `\\n    ${validReasons[0].identifier()}`;\n\t\t\t}\n\t\t\treturn message;\n\t\t})\n\t\t.join(\"\\n\");\n};\n\nclass CaseSensitiveModulesWarning extends WebpackError {\n\t/**\n\t * Creates an instance of CaseSensitiveModulesWarning.\n\t * @param {Iterable<Module>} modules modules that were detected\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t */\n\tconstructor(modules, moduleGraph) {\n\t\tconst sortedModules = sortModules(Array.from(modules));\n\t\tconst modulesList = createModulesListMessage(sortedModules, moduleGraph);\n\t\tsuper(`There are multiple modules with names that only differ in casing.\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\nUse equal casing. Compare these module identifiers:\n${modulesList}`);\n\n\t\tthis.name = \"CaseSensitiveModulesWarning\";\n\t\tthis.module = sortedModules[0];\n\t}\n}\n\nmodule.exports = CaseSensitiveModulesWarning;\n"]},"metadata":{},"sourceType":"script"}