{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SAFE_IDENTIFIER = /^[_a-zA-Z$][_a-zA-Z$0-9]*$/;\nconst RESERVED_IDENTIFIER = new Set([\"break\", \"case\", \"catch\", \"class\", \"const\", \"continue\", \"debugger\", \"default\", \"delete\", \"do\", \"else\", \"export\", \"extends\", \"finally\", \"for\", \"function\", \"if\", \"import\", \"in\", \"instanceof\", \"new\", \"return\", \"super\", \"switch\", \"this\", \"throw\", \"try\", \"typeof\", \"var\", \"void\", \"while\", \"with\", \"enum\", // strict mode\n\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"yield\", // module code\n\"await\", // skip future reserved keywords defined under ES1 till ES3\n// additional\n\"null\", \"true\", \"false\"]);\n\nconst propertyAccess = function (properties) {\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let str = \"\";\n\n  for (let i = start; i < properties.length; i++) {\n    const p = properties[i];\n\n    if (`${+p}` === p) {\n      str += `[${p}]`;\n    } else if (SAFE_IDENTIFIER.test(p) && !RESERVED_IDENTIFIER.has(p)) {\n      str += `.${p}`;\n    } else {\n      str += `[${JSON.stringify(p)}]`;\n    }\n  }\n\n  return str;\n};\n\nmodule.exports = propertyAccess;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/propertyAccess.js"],"names":["SAFE_IDENTIFIER","RESERVED_IDENTIFIER","Set","propertyAccess","properties","start","str","i","length","p","test","has","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,eAAe,GAAG,4BAAxB;AACA,MAAMC,mBAAmB,GAAG,IAAIC,GAAJ,CAAQ,CACnC,OADmC,EAEnC,MAFmC,EAGnC,OAHmC,EAInC,OAJmC,EAKnC,OALmC,EAMnC,UANmC,EAOnC,UAPmC,EAQnC,SARmC,EASnC,QATmC,EAUnC,IAVmC,EAWnC,MAXmC,EAYnC,QAZmC,EAanC,SAbmC,EAcnC,SAdmC,EAenC,KAfmC,EAgBnC,UAhBmC,EAiBnC,IAjBmC,EAkBnC,QAlBmC,EAmBnC,IAnBmC,EAoBnC,YApBmC,EAqBnC,KArBmC,EAsBnC,QAtBmC,EAuBnC,OAvBmC,EAwBnC,QAxBmC,EAyBnC,MAzBmC,EA0BnC,OA1BmC,EA2BnC,KA3BmC,EA4BnC,QA5BmC,EA6BnC,KA7BmC,EA8BnC,MA9BmC,EA+BnC,OA/BmC,EAgCnC,MAhCmC,EAiCnC,MAjCmC,EAkCnC;AACA,YAnCmC,EAoCnC,WApCmC,EAqCnC,KArCmC,EAsCnC,SAtCmC,EAuCnC,SAvCmC,EAwCnC,WAxCmC,EAyCnC,QAzCmC,EA0CnC,QA1CmC,EA2CnC,OA3CmC,EA4CnC,OA5CmC,EA6CnC;AACA,OA9CmC,EA+CnC;AACA;AACA,MAjDmC,EAkDnC,MAlDmC,EAmDnC,OAnDmC,CAAR,CAA5B;;AAsDA,MAAMC,cAAc,GAAG,UAACC,UAAD,EAA2B;AAAA,MAAdC,KAAc,uEAAN,CAAM;AACjD,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGH,UAAU,CAACI,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC/C,UAAME,CAAC,GAAGL,UAAU,CAACG,CAAD,CAApB;;AACA,QAAK,GAAE,CAACE,CAAE,EAAN,KAAYA,CAAhB,EAAmB;AAClBH,MAAAA,GAAG,IAAK,IAAGG,CAAE,GAAb;AACA,KAFD,MAEO,IAAIT,eAAe,CAACU,IAAhB,CAAqBD,CAArB,KAA2B,CAACR,mBAAmB,CAACU,GAApB,CAAwBF,CAAxB,CAAhC,EAA4D;AAClEH,MAAAA,GAAG,IAAK,IAAGG,CAAE,EAAb;AACA,KAFM,MAEA;AACNH,MAAAA,GAAG,IAAK,IAAGM,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAkB,GAA7B;AACA;AACD;;AACD,SAAOH,GAAP;AACA,CAbD;;AAeAQ,MAAM,CAACC,OAAP,GAAiBZ,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst SAFE_IDENTIFIER = /^[_a-zA-Z$][_a-zA-Z$0-9]*$/;\nconst RESERVED_IDENTIFIER = new Set([\n\t\"break\",\n\t\"case\",\n\t\"catch\",\n\t\"class\",\n\t\"const\",\n\t\"continue\",\n\t\"debugger\",\n\t\"default\",\n\t\"delete\",\n\t\"do\",\n\t\"else\",\n\t\"export\",\n\t\"extends\",\n\t\"finally\",\n\t\"for\",\n\t\"function\",\n\t\"if\",\n\t\"import\",\n\t\"in\",\n\t\"instanceof\",\n\t\"new\",\n\t\"return\",\n\t\"super\",\n\t\"switch\",\n\t\"this\",\n\t\"throw\",\n\t\"try\",\n\t\"typeof\",\n\t\"var\",\n\t\"void\",\n\t\"while\",\n\t\"with\",\n\t\"enum\",\n\t// strict mode\n\t\"implements\",\n\t\"interface\",\n\t\"let\",\n\t\"package\",\n\t\"private\",\n\t\"protected\",\n\t\"public\",\n\t\"static\",\n\t\"yield\",\n\t\"yield\",\n\t// module code\n\t\"await\",\n\t// skip future reserved keywords defined under ES1 till ES3\n\t// additional\n\t\"null\",\n\t\"true\",\n\t\"false\"\n]);\n\nconst propertyAccess = (properties, start = 0) => {\n\tlet str = \"\";\n\tfor (let i = start; i < properties.length; i++) {\n\t\tconst p = properties[i];\n\t\tif (`${+p}` === p) {\n\t\t\tstr += `[${p}]`;\n\t\t} else if (SAFE_IDENTIFIER.test(p) && !RESERVED_IDENTIFIER.has(p)) {\n\t\t\tstr += `.${p}`;\n\t\t} else {\n\t\t\tstr += `[${JSON.stringify(p)}]`;\n\t\t}\n\t}\n\treturn str;\n};\n\nmodule.exports = propertyAccess;\n"]},"metadata":{},"sourceType":"script"}