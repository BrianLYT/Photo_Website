{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nconst ModuleDependencyAsId = require(\"./ModuleDependencyTemplateAsId\");\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass RequireResolveDependency extends ModuleDependency {\n  constructor(request, range) {\n    super(request);\n    this.range = range;\n  }\n\n  get type() {\n    return \"require.resolve\";\n  }\n\n  get category() {\n    return \"commonjs\";\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    // This doesn't use any export\n    return Dependency.NO_EXPORTS_REFERENCED;\n  }\n\n}\n\nmakeSerializable(RequireResolveDependency, \"webpack/lib/dependencies/RequireResolveDependency\");\nRequireResolveDependency.Template = ModuleDependencyAsId;\nmodule.exports = RequireResolveDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/RequireResolveDependency.js"],"names":["Dependency","require","makeSerializable","ModuleDependency","ModuleDependencyAsId","RequireResolveDependency","constructor","request","range","type","category","getReferencedExports","moduleGraph","runtime","NO_EXPORTS_REFERENCED","Template","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,gCAAD,CAApC;AAEA;;AACA;;AACA;;;AAEA,MAAMI,wBAAN,SAAuCF,gBAAvC,CAAwD;AACvDG,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC3B,UAAMD,OAAN;AAEA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,iBAAP;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,UAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,oBAAoB,CAACC,WAAD,EAAcC,OAAd,EAAuB;AAC1C;AACA,WAAOb,UAAU,CAACc,qBAAlB;AACA;;AAxBsD;;AA2BxDZ,gBAAgB,CACfG,wBADe,EAEf,mDAFe,CAAhB;AAKAA,wBAAwB,CAACU,QAAzB,GAAoCX,oBAApC;AAEAY,MAAM,CAACC,OAAP,GAAiBZ,wBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst ModuleDependencyAsId = require(\"./ModuleDependencyTemplateAsId\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass RequireResolveDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\n\t\tthis.range = range;\n\t}\n\n\tget type() {\n\t\treturn \"require.resolve\";\n\t}\n\n\tget category() {\n\t\treturn \"commonjs\";\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\t// This doesn't use any export\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\t}\n}\n\nmakeSerializable(\n\tRequireResolveDependency,\n\t\"webpack/lib/dependencies/RequireResolveDependency\"\n);\n\nRequireResolveDependency.Template = ModuleDependencyAsId;\n\nmodule.exports = RequireResolveDependency;\n"]},"metadata":{},"sourceType":"script"}