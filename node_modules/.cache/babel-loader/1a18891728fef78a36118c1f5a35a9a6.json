{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  chunkHasJs,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\n\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\n\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n\nclass RequireChunkLoadingRuntimeModule extends RuntimeModule {\n  constructor(runtimeRequirements) {\n    super(\"require chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @param {string} rootOutputDir root output directory\n   * @returns {string} generated code\n   */\n\n\n  _generateBaseUri(chunk, rootOutputDir) {\n    const options = chunk.getEntryOptions();\n\n    if (options && options.baseUri) {\n      return `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n    }\n\n    return `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${rootOutputDir !== \"./\" ? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}` : \"__filename\"});`;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      chunkGraph,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withExternalInstallChunk = this.runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n    const withOnChunkLoad = this.runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n    const outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, true);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_require` : undefined;\n    return Template.asString([withBaseURI ? this._generateBaseUri(chunk, rootOutputDir) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"1\" means \"loaded\", otherwise not loaded yet', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\",\\n\")), \"};\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.require = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId]\", \"chunkId\")};` : \"// no on chunks loaded\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\", \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`]), \"}\"]), \"}\", `if(runtime) runtime(__webpack_require__);`, \"for(var i = 0; i < chunkIds.length; i++)\", Template.indent(\"installedChunks[chunkIds[i]] = 1;\"), withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])};` : \"// no chunk install function needed\", \"\", withLoading ? Template.asString([\"// require() chunk loading for javascript\", `${fn}.require = ${runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? ['// \"1\" is the signal for \"already loaded\"', \"if(!installedChunks[chunkId]) {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([`installChunk(require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)));`]), \"} else installedChunks[chunkId] = 1;\", \"\"]), \"}\"] : \"installedChunks[chunkId] = 1;\")};`]) : \"// no chunk loading\", \"\", withExternalInstallChunk ? Template.asString([\"module.exports = __webpack_require__;\", `${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([`var update = require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`, \"var updatedModules = update.modules;\", \"var runtime = update.runtime;\", \"for(var moduleId in updatedModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`, Template.indent([`currentUpdate[moduleId] = updatedModules[moduleId];`, \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\"]), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"require\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = function() {`, Template.indent([\"return Promise.resolve().then(function() {\", Template.indent([`return require(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getUpdateManifestFilename}());`]), \"})['catch'](function(err) { if(err.code !== 'MODULE_NOT_FOUND') throw err; });\"]), \"}\"]) : \"// no HMR manifest\"]);\n  }\n\n}\n\nmodule.exports = RequireChunkLoadingRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/node/RequireChunkLoadingRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","chunkHasJs","getChunkFilenameTemplate","getInitialChunkIds","compileBooleanMatcher","getUndoPath","RequireChunkLoadingRuntimeModule","constructor","runtimeRequirements","STAGE_ATTACH","_generateBaseUri","chunk","rootOutputDir","options","getEntryOptions","baseUri","baseURI","JSON","stringify","generate","chunkGraph","runtimeTemplate","compilation","fn","ensureChunkHandlers","withBaseURI","has","withExternalInstallChunk","externalInstallChunk","withOnChunkLoad","onChunksLoaded","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","outputOptions","contentHashType","path","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","returningFunction","basicFunction","hasOwnProperty","moduleFactories","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tchunkHasJs,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass RequireChunkLoadingRuntimeModule extends RuntimeModule {\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"require chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @param {string} rootOutputDir root output directory\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk, rootOutputDir) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\n\t\treturn `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${\n\t\t\trootOutputDir !== \"./\"\n\t\t\t\t? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}`\n\t\t\t\t: \"__filename\"\n\t\t});`;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk } = this;\n\t\tconst { runtimeTemplate } = this.compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withOnChunkLoad = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\ttrue\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_require`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? this._generateBaseUri(chunk, rootOutputDir)\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"1\" means \"loaded\", otherwise not loaded yet',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.require = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId]\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\n\t\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\",\n\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t`if(runtime) runtime(__webpack_require__);`,\n\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++)\",\n\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds[i]] = 1;\"),\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// require() chunk loading for javascript\",\n\t\t\t\t\t\t`${fn}.require = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`installChunk(require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId)));`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 1;\",\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: \"installedChunks[chunkId] = 1;\"\n\t\t\t\t\t\t)};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"module.exports = __webpack_require__;\",\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`var update = require(${JSON.stringify(rootOutputDir)} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkUpdateScriptFilename\n\t\t\t\t\t\t\t}(chunkId));`,\n\t\t\t\t\t\t\t\"var updatedModules = update.modules;\",\n\t\t\t\t\t\t\t\"var runtime = update.runtime;\",\n\t\t\t\t\t\t\t\"for(var moduleId in updatedModules) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`currentUpdate[moduleId] = updatedModules[moduleId];`,\n\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"require\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.hmrDownloadManifest} = function() {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return Promise.resolve().then(function() {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`return require(${JSON.stringify(rootOutputDir)} + ${\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t\t}());`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"})['catch'](function(err) { if(err.code !== 'MODULE_NOT_FOUND') throw err; });\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = RequireChunkLoadingRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}