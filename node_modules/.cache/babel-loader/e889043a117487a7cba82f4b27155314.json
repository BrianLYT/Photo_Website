{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\n\nconst getBrowserslistTargetHandler = memoize(() => require(\"./browserslistTargetHandler\"));\n/**\n * @param {string} context the context directory\n * @returns {string} default target\n */\n\nconst getDefaultTarget = context => {\n  const browsers = getBrowserslistTargetHandler().load(null, context);\n  return browsers ? \"browserslist\" : \"web\";\n};\n/**\n * @typedef {Object} PlatformTargetProperties\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\n * @property {boolean | null} browser browser platform, running in a normal web browser\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\n * @property {boolean | null} node node platform, require of node built-in modules is available\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\n */\n\n/**\n * @typedef {Object} ElectronContextTargetProperties\n * @property {boolean | null} electronMain in main context\n * @property {boolean | null} electronPreload in preload context\n * @property {boolean | null} electronRenderer in renderer context with node integration\n */\n\n/**\n * @typedef {Object} ApiTargetProperties\n * @property {boolean | null} require has require function available\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\n * @property {boolean | null} document has document available (allows script tags)\n * @property {boolean | null} importScripts has importScripts available\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\n * @property {boolean | null} global has global variable available\n */\n\n/**\n * @typedef {Object} EcmaTargetProperties\n * @property {boolean | null} globalThis has globalThis variable available\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\n * @property {boolean | null} const const and let variable declarations are available\n * @property {boolean | null} arrowFunction arrow functions are available\n * @property {boolean | null} forOf for of iteration is available\n * @property {boolean | null} destructuring destructuring is available\n * @property {boolean | null} dynamicImport async import() is available\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\n * @property {boolean | null} module ESM syntax is available (when in module)\n * @property {boolean | null} optionalChaining optional chaining is available\n * @property {boolean | null} templateLiteral template literal is available\n */\n///** @typedef {PlatformTargetProperties | ApiTargetProperties | EcmaTargetProperties | PlatformTargetProperties & ApiTargetProperties | PlatformTargetProperties & EcmaTargetProperties | ApiTargetProperties & EcmaTargetProperties} TargetProperties */\n\n/** @template T @typedef {{ [P in keyof T]?: never }} Never<T> */\n\n/** @template A @template B @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A,B> */\n\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\n\n\nconst versionDependent = (major, minor) => {\n  if (!major) return () =>\n  /** @type {undefined} */\n  undefined;\n  major = +major;\n  minor = minor ? +minor : 0;\n  return function (vMajor) {\n    let vMinor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return major > vMajor || major === vMajor && minor >= vMinor;\n  };\n};\n/** @type {[string, string, RegExp, (...args: string[]) => TargetProperties | false][]} */\n\n\nconst TARGETS = [[\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\", \"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\", /^browserslist(?::(.+))?$/, (rest, context) => {\n  const browserslistTargetHandler = getBrowserslistTargetHandler();\n  const browsers = browserslistTargetHandler.load(rest ? rest.trim() : null, context);\n\n  if (!browsers) {\n    throw new Error(`No browserslist config found to handle the 'browserslist' target.\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\n  }\n\n  return browserslistTargetHandler.resolve(browsers);\n}], [\"web\", \"Web browser.\", /^web$/, () => {\n  return {\n    web: true,\n    browser: true,\n    webworker: null,\n    node: false,\n    electron: false,\n    nwjs: false,\n    document: true,\n    importScriptsInWorker: true,\n    fetchWasm: true,\n    nodeBuiltins: false,\n    importScripts: false,\n    require: false,\n    global: false\n  };\n}], [\"webworker\", \"Web Worker, SharedWorker or Service Worker.\", /^webworker$/, () => {\n  return {\n    web: true,\n    browser: true,\n    webworker: true,\n    node: false,\n    electron: false,\n    nwjs: false,\n    importScripts: true,\n    importScriptsInWorker: true,\n    fetchWasm: true,\n    nodeBuiltins: false,\n    require: false,\n    document: false,\n    global: false\n  };\n}], [\"[async-]node[X[.Y]]\", \"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\", /^(async-)?node(\\d+(?:\\.(\\d+))?)?$/, (asyncFlag, major, minor) => {\n  const v = versionDependent(major, minor); // see https://node.green/\n\n  return {\n    node: true,\n    electron: false,\n    nwjs: false,\n    web: false,\n    webworker: false,\n    browser: false,\n    require: !asyncFlag,\n    nodeBuiltins: true,\n    global: true,\n    document: false,\n    fetchWasm: false,\n    importScripts: false,\n    importScriptsInWorker: false,\n    globalThis: v(12),\n    const: v(6),\n    templateLiteral: v(4),\n    optionalChaining: v(14),\n    arrowFunction: v(6),\n    forOf: v(5),\n    destructuring: v(6),\n    bigIntLiteral: v(10, 4),\n    dynamicImport: v(12, 17),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(12, 17)\n  };\n}], [\"electron[X[.Y]]-main/preload/renderer\", \"Electron in version X.Y. Script is running in main, preload resp. renderer context.\", /^electron(\\d+(?:\\.(\\d+))?)?-(main|preload|renderer)$/, (major, minor, context) => {\n  const v = versionDependent(major, minor); // see https://node.green/ + https://github.com/electron/releases\n\n  return {\n    node: true,\n    electron: true,\n    web: context !== \"main\",\n    webworker: false,\n    browser: false,\n    nwjs: false,\n    electronMain: context === \"main\",\n    electronPreload: context === \"preload\",\n    electronRenderer: context === \"renderer\",\n    global: true,\n    nodeBuiltins: true,\n    require: true,\n    document: context === \"renderer\",\n    fetchWasm: context === \"renderer\",\n    importScripts: false,\n    importScriptsInWorker: true,\n    globalThis: v(5),\n    const: v(1, 1),\n    templateLiteral: v(1, 1),\n    optionalChaining: v(8),\n    arrowFunction: v(1, 1),\n    forOf: v(0, 36),\n    destructuring: v(1, 1),\n    bigIntLiteral: v(4),\n    dynamicImport: v(11),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(11)\n  };\n}], [\"nwjs[X[.Y]] / node-webkit[X[.Y]]\", \"NW.js in version X.Y.\", /^(?:nwjs|node-webkit)(\\d+(?:\\.(\\d+))?)?$/, (major, minor) => {\n  const v = versionDependent(major, minor); // see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\n\n  return {\n    node: true,\n    web: true,\n    nwjs: true,\n    webworker: null,\n    browser: false,\n    electron: false,\n    global: true,\n    nodeBuiltins: true,\n    document: false,\n    importScriptsInWorker: false,\n    fetchWasm: false,\n    importScripts: false,\n    require: false,\n    globalThis: v(0, 43),\n    const: v(0, 15),\n    templateLiteral: v(0, 13),\n    optionalChaining: v(0, 44),\n    arrowFunction: v(0, 15),\n    forOf: v(0, 13),\n    destructuring: v(0, 15),\n    bigIntLiteral: v(0, 32),\n    dynamicImport: v(0, 43),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(0, 43)\n  };\n}], [\"esX\", \"EcmaScript in this version. Examples: es2020, es5.\", /^es(\\d+)$/, version => {\n  let v = +version;\n  if (v < 1000) v = v + 2009;\n  return {\n    const: v >= 2015,\n    templateLiteral: v >= 2015,\n    optionalChaining: v >= 2020,\n    arrowFunction: v >= 2015,\n    forOf: v >= 2015,\n    destructuring: v >= 2015,\n    module: v >= 2015,\n    globalThis: v >= 2020,\n    bigIntLiteral: v >= 2020,\n    dynamicImport: v >= 2020,\n    dynamicImportInWorker: v >= 2020\n  };\n}]];\n/**\n * @param {string} target the target\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\n\nconst getTargetProperties = (target, context) => {\n  for (const [,, regExp, handler] of TARGETS) {\n    const match = regExp.exec(target);\n\n    if (match) {\n      const [, ...args] = match;\n      const result = handler(...args, context);\n      if (result) return result;\n    }\n  }\n\n  throw new Error(`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(_ref => {\n    let [name, description] = _ref;\n    return `* ${name}: ${description}`;\n  }).join(\"\\n\")}`);\n};\n\nconst mergeTargetProperties = targetProperties => {\n  const keys = new Set();\n\n  for (const tp of targetProperties) {\n    for (const key of Object.keys(tp)) {\n      keys.add(key);\n    }\n  }\n\n  const result = {};\n\n  for (const key of keys) {\n    let hasTrue = false;\n    let hasFalse = false;\n\n    for (const tp of targetProperties) {\n      const value = tp[key];\n\n      switch (value) {\n        case true:\n          hasTrue = true;\n          break;\n\n        case false:\n          hasFalse = true;\n          break;\n      }\n    }\n\n    if (hasTrue || hasFalse) result[key] = hasFalse && hasTrue ? null : hasTrue ? true : false;\n  }\n\n  return (\n    /** @type {TargetProperties} */\n    result\n  );\n};\n/**\n * @param {string[]} targets the targets\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\n\n\nconst getTargetsProperties = (targets, context) => {\n  return mergeTargetProperties(targets.map(t => getTargetProperties(t, context)));\n};\n\nexports.getDefaultTarget = getDefaultTarget;\nexports.getTargetProperties = getTargetProperties;\nexports.getTargetsProperties = getTargetsProperties;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/config/target.js"],"names":["memoize","require","getBrowserslistTargetHandler","getDefaultTarget","context","browsers","load","versionDependent","major","minor","undefined","vMajor","vMinor","TARGETS","rest","browserslistTargetHandler","trim","Error","resolve","web","browser","webworker","node","electron","nwjs","document","importScriptsInWorker","fetchWasm","nodeBuiltins","importScripts","global","asyncFlag","v","globalThis","const","templateLiteral","optionalChaining","arrowFunction","forOf","destructuring","bigIntLiteral","dynamicImport","dynamicImportInWorker","module","electronMain","electronPreload","electronRenderer","version","getTargetProperties","target","regExp","handler","match","exec","args","result","map","name","description","join","mergeTargetProperties","targetProperties","keys","Set","tp","key","Object","add","hasTrue","hasFalse","value","getTargetsProperties","targets","t","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AAEA,MAAMC,4BAA4B,GAAGF,OAAO,CAAC,MAC5CC,OAAO,CAAC,6BAAD,CADoC,CAA5C;AAIA;AACA;AACA;AACA;;AACA,MAAME,gBAAgB,GAAGC,OAAO,IAAI;AACnC,QAAMC,QAAQ,GAAGH,4BAA4B,GAAGI,IAA/B,CAAoC,IAApC,EAA0CF,OAA1C,CAAjB;AACA,SAAOC,QAAQ,GAAG,cAAH,GAAoB,KAAnC;AACA,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAME,gBAAgB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1C,MAAI,CAACD,KAAL,EAAY,OAAO;AAAM;AAA0BE,EAAAA,SAAvC;AACZF,EAAAA,KAAK,GAAG,CAACA,KAAT;AACAC,EAAAA,KAAK,GAAGA,KAAK,GAAG,CAACA,KAAJ,GAAY,CAAzB;AACA,SAAO,UAACE,MAAD,EAAwB;AAAA,QAAfC,MAAe,uEAAN,CAAM;AAC9B,WAAOJ,KAAK,GAAGG,MAAR,IAAmBH,KAAK,KAAKG,MAAV,IAAoBF,KAAK,IAAIG,MAAvD;AACA,GAFD;AAGA,CAPD;AASA;;;AACA,MAAMC,OAAO,GAAG,CACf,CACC,sHADD,EAEC,kPAFD,EAGC,0BAHD,EAIC,CAACC,IAAD,EAAOV,OAAP,KAAmB;AAClB,QAAMW,yBAAyB,GAAGb,4BAA4B,EAA9D;AACA,QAAMG,QAAQ,GAAGU,yBAAyB,CAACT,IAA1B,CAChBQ,IAAI,GAAGA,IAAI,CAACE,IAAL,EAAH,GAAiB,IADL,EAEhBZ,OAFgB,CAAjB;;AAIA,MAAI,CAACC,QAAL,EAAe;AACd,UAAM,IAAIY,KAAJ,CAAW;AACrB;AACA;AACA,kLAHU,CAAN;AAIA;;AACD,SAAOF,yBAAyB,CAACG,OAA1B,CAAkCb,QAAlC,CAAP;AACA,CAjBF,CADe,EAoBf,CACC,KADD,EAEC,cAFD,EAGC,OAHD,EAIC,MAAM;AACL,SAAO;AACNc,IAAAA,GAAG,EAAE,IADC;AAENC,IAAAA,OAAO,EAAE,IAFH;AAGNC,IAAAA,SAAS,EAAE,IAHL;AAINC,IAAAA,IAAI,EAAE,KAJA;AAKNC,IAAAA,QAAQ,EAAE,KALJ;AAMNC,IAAAA,IAAI,EAAE,KANA;AAQNC,IAAAA,QAAQ,EAAE,IARJ;AASNC,IAAAA,qBAAqB,EAAE,IATjB;AAUNC,IAAAA,SAAS,EAAE,IAVL;AAWNC,IAAAA,YAAY,EAAE,KAXR;AAYNC,IAAAA,aAAa,EAAE,KAZT;AAaN5B,IAAAA,OAAO,EAAE,KAbH;AAcN6B,IAAAA,MAAM,EAAE;AAdF,GAAP;AAgBA,CArBF,CApBe,EA2Cf,CACC,WADD,EAEC,6CAFD,EAGC,aAHD,EAIC,MAAM;AACL,SAAO;AACNX,IAAAA,GAAG,EAAE,IADC;AAENC,IAAAA,OAAO,EAAE,IAFH;AAGNC,IAAAA,SAAS,EAAE,IAHL;AAINC,IAAAA,IAAI,EAAE,KAJA;AAKNC,IAAAA,QAAQ,EAAE,KALJ;AAMNC,IAAAA,IAAI,EAAE,KANA;AAQNK,IAAAA,aAAa,EAAE,IART;AASNH,IAAAA,qBAAqB,EAAE,IATjB;AAUNC,IAAAA,SAAS,EAAE,IAVL;AAWNC,IAAAA,YAAY,EAAE,KAXR;AAYN3B,IAAAA,OAAO,EAAE,KAZH;AAaNwB,IAAAA,QAAQ,EAAE,KAbJ;AAcNK,IAAAA,MAAM,EAAE;AAdF,GAAP;AAgBA,CArBF,CA3Ce,EAkEf,CACC,qBADD,EAEC,yJAFD,EAGC,mCAHD,EAIC,CAACC,SAAD,EAAYvB,KAAZ,EAAmBC,KAAnB,KAA6B;AAC5B,QAAMuB,CAAC,GAAGzB,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAA1B,CAD4B,CAE5B;;AACA,SAAO;AACNa,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,QAAQ,EAAE,KAFJ;AAGNC,IAAAA,IAAI,EAAE,KAHA;AAINL,IAAAA,GAAG,EAAE,KAJC;AAKNE,IAAAA,SAAS,EAAE,KALL;AAMND,IAAAA,OAAO,EAAE,KANH;AAQNnB,IAAAA,OAAO,EAAE,CAAC8B,SARJ;AASNH,IAAAA,YAAY,EAAE,IATR;AAUNE,IAAAA,MAAM,EAAE,IAVF;AAWNL,IAAAA,QAAQ,EAAE,KAXJ;AAYNE,IAAAA,SAAS,EAAE,KAZL;AAaNE,IAAAA,aAAa,EAAE,KAbT;AAcNH,IAAAA,qBAAqB,EAAE,KAdjB;AAgBNO,IAAAA,UAAU,EAAED,CAAC,CAAC,EAAD,CAhBP;AAiBNE,IAAAA,KAAK,EAAEF,CAAC,CAAC,CAAD,CAjBF;AAkBNG,IAAAA,eAAe,EAAEH,CAAC,CAAC,CAAD,CAlBZ;AAmBNI,IAAAA,gBAAgB,EAAEJ,CAAC,CAAC,EAAD,CAnBb;AAoBNK,IAAAA,aAAa,EAAEL,CAAC,CAAC,CAAD,CApBV;AAqBNM,IAAAA,KAAK,EAAEN,CAAC,CAAC,CAAD,CArBF;AAsBNO,IAAAA,aAAa,EAAEP,CAAC,CAAC,CAAD,CAtBV;AAuBNQ,IAAAA,aAAa,EAAER,CAAC,CAAC,EAAD,EAAK,CAAL,CAvBV;AAwBNS,IAAAA,aAAa,EAAET,CAAC,CAAC,EAAD,EAAK,EAAL,CAxBV;AAyBNU,IAAAA,qBAAqB,EAAElC,KAAK,GAAG,KAAH,GAAWE,SAzBjC;AA0BNiC,IAAAA,MAAM,EAAEX,CAAC,CAAC,EAAD,EAAK,EAAL;AA1BH,GAAP;AA4BA,CAnCF,CAlEe,EAuGf,CACC,uCADD,EAEC,qFAFD,EAGC,sDAHD,EAIC,CAACxB,KAAD,EAAQC,KAAR,EAAeL,OAAf,KAA2B;AAC1B,QAAM4B,CAAC,GAAGzB,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAA1B,CAD0B,CAE1B;;AACA,SAAO;AACNa,IAAAA,IAAI,EAAE,IADA;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNJ,IAAAA,GAAG,EAAEf,OAAO,KAAK,MAHX;AAINiB,IAAAA,SAAS,EAAE,KAJL;AAKND,IAAAA,OAAO,EAAE,KALH;AAMNI,IAAAA,IAAI,EAAE,KANA;AAQNoB,IAAAA,YAAY,EAAExC,OAAO,KAAK,MARpB;AASNyC,IAAAA,eAAe,EAAEzC,OAAO,KAAK,SATvB;AAUN0C,IAAAA,gBAAgB,EAAE1C,OAAO,KAAK,UAVxB;AAYN0B,IAAAA,MAAM,EAAE,IAZF;AAaNF,IAAAA,YAAY,EAAE,IAbR;AAcN3B,IAAAA,OAAO,EAAE,IAdH;AAeNwB,IAAAA,QAAQ,EAAErB,OAAO,KAAK,UAfhB;AAgBNuB,IAAAA,SAAS,EAAEvB,OAAO,KAAK,UAhBjB;AAiBNyB,IAAAA,aAAa,EAAE,KAjBT;AAkBNH,IAAAA,qBAAqB,EAAE,IAlBjB;AAoBNO,IAAAA,UAAU,EAAED,CAAC,CAAC,CAAD,CApBP;AAqBNE,IAAAA,KAAK,EAAEF,CAAC,CAAC,CAAD,EAAI,CAAJ,CArBF;AAsBNG,IAAAA,eAAe,EAAEH,CAAC,CAAC,CAAD,EAAI,CAAJ,CAtBZ;AAuBNI,IAAAA,gBAAgB,EAAEJ,CAAC,CAAC,CAAD,CAvBb;AAwBNK,IAAAA,aAAa,EAAEL,CAAC,CAAC,CAAD,EAAI,CAAJ,CAxBV;AAyBNM,IAAAA,KAAK,EAAEN,CAAC,CAAC,CAAD,EAAI,EAAJ,CAzBF;AA0BNO,IAAAA,aAAa,EAAEP,CAAC,CAAC,CAAD,EAAI,CAAJ,CA1BV;AA2BNQ,IAAAA,aAAa,EAAER,CAAC,CAAC,CAAD,CA3BV;AA4BNS,IAAAA,aAAa,EAAET,CAAC,CAAC,EAAD,CA5BV;AA6BNU,IAAAA,qBAAqB,EAAElC,KAAK,GAAG,KAAH,GAAWE,SA7BjC;AA8BNiC,IAAAA,MAAM,EAAEX,CAAC,CAAC,EAAD;AA9BH,GAAP;AAgCA,CAvCF,CAvGe,EAgJf,CACC,kCADD,EAEC,uBAFD,EAGC,0CAHD,EAIC,CAACxB,KAAD,EAAQC,KAAR,KAAkB;AACjB,QAAMuB,CAAC,GAAGzB,gBAAgB,CAACC,KAAD,EAAQC,KAAR,CAA1B,CADiB,CAEjB;;AACA,SAAO;AACNa,IAAAA,IAAI,EAAE,IADA;AAENH,IAAAA,GAAG,EAAE,IAFC;AAGNK,IAAAA,IAAI,EAAE,IAHA;AAINH,IAAAA,SAAS,EAAE,IAJL;AAKND,IAAAA,OAAO,EAAE,KALH;AAMNG,IAAAA,QAAQ,EAAE,KANJ;AAQNO,IAAAA,MAAM,EAAE,IARF;AASNF,IAAAA,YAAY,EAAE,IATR;AAUNH,IAAAA,QAAQ,EAAE,KAVJ;AAWNC,IAAAA,qBAAqB,EAAE,KAXjB;AAYNC,IAAAA,SAAS,EAAE,KAZL;AAaNE,IAAAA,aAAa,EAAE,KAbT;AAcN5B,IAAAA,OAAO,EAAE,KAdH;AAgBNgC,IAAAA,UAAU,EAAED,CAAC,CAAC,CAAD,EAAI,EAAJ,CAhBP;AAiBNE,IAAAA,KAAK,EAAEF,CAAC,CAAC,CAAD,EAAI,EAAJ,CAjBF;AAkBNG,IAAAA,eAAe,EAAEH,CAAC,CAAC,CAAD,EAAI,EAAJ,CAlBZ;AAmBNI,IAAAA,gBAAgB,EAAEJ,CAAC,CAAC,CAAD,EAAI,EAAJ,CAnBb;AAoBNK,IAAAA,aAAa,EAAEL,CAAC,CAAC,CAAD,EAAI,EAAJ,CApBV;AAqBNM,IAAAA,KAAK,EAAEN,CAAC,CAAC,CAAD,EAAI,EAAJ,CArBF;AAsBNO,IAAAA,aAAa,EAAEP,CAAC,CAAC,CAAD,EAAI,EAAJ,CAtBV;AAuBNQ,IAAAA,aAAa,EAAER,CAAC,CAAC,CAAD,EAAI,EAAJ,CAvBV;AAwBNS,IAAAA,aAAa,EAAET,CAAC,CAAC,CAAD,EAAI,EAAJ,CAxBV;AAyBNU,IAAAA,qBAAqB,EAAElC,KAAK,GAAG,KAAH,GAAWE,SAzBjC;AA0BNiC,IAAAA,MAAM,EAAEX,CAAC,CAAC,CAAD,EAAI,EAAJ;AA1BH,GAAP;AA4BA,CAnCF,CAhJe,EAqLf,CACC,KADD,EAEC,oDAFD,EAGC,WAHD,EAICe,OAAO,IAAI;AACV,MAAIf,CAAC,GAAG,CAACe,OAAT;AACA,MAAIf,CAAC,GAAG,IAAR,EAAcA,CAAC,GAAGA,CAAC,GAAG,IAAR;AACd,SAAO;AACNE,IAAAA,KAAK,EAAEF,CAAC,IAAI,IADN;AAENG,IAAAA,eAAe,EAAEH,CAAC,IAAI,IAFhB;AAGNI,IAAAA,gBAAgB,EAAEJ,CAAC,IAAI,IAHjB;AAINK,IAAAA,aAAa,EAAEL,CAAC,IAAI,IAJd;AAKNM,IAAAA,KAAK,EAAEN,CAAC,IAAI,IALN;AAMNO,IAAAA,aAAa,EAAEP,CAAC,IAAI,IANd;AAONW,IAAAA,MAAM,EAAEX,CAAC,IAAI,IAPP;AAQNC,IAAAA,UAAU,EAAED,CAAC,IAAI,IARX;AASNQ,IAAAA,aAAa,EAAER,CAAC,IAAI,IATd;AAUNS,IAAAA,aAAa,EAAET,CAAC,IAAI,IAVd;AAWNU,IAAAA,qBAAqB,EAAEV,CAAC,IAAI;AAXtB,GAAP;AAaA,CApBF,CArLe,CAAhB;AA6MA;AACA;AACA;AACA;AACA;;AACA,MAAMgB,mBAAmB,GAAG,CAACC,MAAD,EAAS7C,OAAT,KAAqB;AAChD,OAAK,MAAM,IAAK8C,MAAL,EAAaC,OAAb,CAAX,IAAoCtC,OAApC,EAA6C;AAC5C,UAAMuC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYJ,MAAZ,CAAd;;AACA,QAAIG,KAAJ,EAAW;AACV,YAAM,GAAG,GAAGE,IAAN,IAAcF,KAApB;AACA,YAAMG,MAAM,GAAGJ,OAAO,CAAC,GAAGG,IAAJ,EAAUlD,OAAV,CAAtB;AACA,UAAImD,MAAJ,EAAY,OAAOA,MAAP;AACZ;AACD;;AACD,QAAM,IAAItC,KAAJ,CACJ,mBAAkBgC,MAAO,4CAA2CpC,OAAO,CAAC2C,GAAR,CACpE;AAAA,QAAC,CAACC,IAAD,EAAOC,WAAP,CAAD;AAAA,WAA0B,KAAID,IAAK,KAAIC,WAAY,EAAnD;AAAA,GADoE,EAEnEC,IAFmE,CAE9D,IAF8D,CAExD,EAHR,CAAN;AAKA,CAdD;;AAgBA,MAAMC,qBAAqB,GAAGC,gBAAgB,IAAI;AACjD,QAAMC,IAAI,GAAG,IAAIC,GAAJ,EAAb;;AACA,OAAK,MAAMC,EAAX,IAAiBH,gBAAjB,EAAmC;AAClC,SAAK,MAAMI,GAAX,IAAkBC,MAAM,CAACJ,IAAP,CAAYE,EAAZ,CAAlB,EAAmC;AAClCF,MAAAA,IAAI,CAACK,GAAL,CAASF,GAAT;AACA;AACD;;AACD,QAAMV,MAAM,GAAG,EAAf;;AACA,OAAK,MAAMU,GAAX,IAAkBH,IAAlB,EAAwB;AACvB,QAAIM,OAAO,GAAG,KAAd;AACA,QAAIC,QAAQ,GAAG,KAAf;;AACA,SAAK,MAAML,EAAX,IAAiBH,gBAAjB,EAAmC;AAClC,YAAMS,KAAK,GAAGN,EAAE,CAACC,GAAD,CAAhB;;AACA,cAAQK,KAAR;AACC,aAAK,IAAL;AACCF,UAAAA,OAAO,GAAG,IAAV;AACA;;AACD,aAAK,KAAL;AACCC,UAAAA,QAAQ,GAAG,IAAX;AACA;AANF;AAQA;;AACD,QAAID,OAAO,IAAIC,QAAf,EACCd,MAAM,CAACU,GAAD,CAAN,GAAcI,QAAQ,IAAID,OAAZ,GAAsB,IAAtB,GAA6BA,OAAO,GAAG,IAAH,GAAU,KAA5D;AACD;;AACD;AAAO;AAAiCb,IAAAA;AAAxC;AACA,CA1BD;AA4BA;AACA;AACA;AACA;AACA;;;AACA,MAAMgB,oBAAoB,GAAG,CAACC,OAAD,EAAUpE,OAAV,KAAsB;AAClD,SAAOwD,qBAAqB,CAC3BY,OAAO,CAAChB,GAAR,CAAYiB,CAAC,IAAIzB,mBAAmB,CAACyB,CAAD,EAAIrE,OAAJ,CAApC,CAD2B,CAA5B;AAGA,CAJD;;AAMAsE,OAAO,CAACvE,gBAAR,GAA2BA,gBAA3B;AACAuE,OAAO,CAAC1B,mBAAR,GAA8BA,mBAA9B;AACA0B,OAAO,CAACH,oBAAR,GAA+BA,oBAA/B","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\n\nconst getBrowserslistTargetHandler = memoize(() =>\n\trequire(\"./browserslistTargetHandler\")\n);\n\n/**\n * @param {string} context the context directory\n * @returns {string} default target\n */\nconst getDefaultTarget = context => {\n\tconst browsers = getBrowserslistTargetHandler().load(null, context);\n\treturn browsers ? \"browserslist\" : \"web\";\n};\n\n/**\n * @typedef {Object} PlatformTargetProperties\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\n * @property {boolean | null} browser browser platform, running in a normal web browser\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\n * @property {boolean | null} node node platform, require of node built-in modules is available\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\n */\n\n/**\n * @typedef {Object} ElectronContextTargetProperties\n * @property {boolean | null} electronMain in main context\n * @property {boolean | null} electronPreload in preload context\n * @property {boolean | null} electronRenderer in renderer context with node integration\n */\n\n/**\n * @typedef {Object} ApiTargetProperties\n * @property {boolean | null} require has require function available\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\n * @property {boolean | null} document has document available (allows script tags)\n * @property {boolean | null} importScripts has importScripts available\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\n * @property {boolean | null} global has global variable available\n */\n\n/**\n * @typedef {Object} EcmaTargetProperties\n * @property {boolean | null} globalThis has globalThis variable available\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\n * @property {boolean | null} const const and let variable declarations are available\n * @property {boolean | null} arrowFunction arrow functions are available\n * @property {boolean | null} forOf for of iteration is available\n * @property {boolean | null} destructuring destructuring is available\n * @property {boolean | null} dynamicImport async import() is available\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\n * @property {boolean | null} module ESM syntax is available (when in module)\n * @property {boolean | null} optionalChaining optional chaining is available\n * @property {boolean | null} templateLiteral template literal is available\n */\n\n///** @typedef {PlatformTargetProperties | ApiTargetProperties | EcmaTargetProperties | PlatformTargetProperties & ApiTargetProperties | PlatformTargetProperties & EcmaTargetProperties | ApiTargetProperties & EcmaTargetProperties} TargetProperties */\n/** @template T @typedef {{ [P in keyof T]?: never }} Never<T> */\n/** @template A @template B @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A,B> */\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\n\nconst versionDependent = (major, minor) => {\n\tif (!major) return () => /** @type {undefined} */ (undefined);\n\tmajor = +major;\n\tminor = minor ? +minor : 0;\n\treturn (vMajor, vMinor = 0) => {\n\t\treturn major > vMajor || (major === vMajor && minor >= vMinor);\n\t};\n};\n\n/** @type {[string, string, RegExp, (...args: string[]) => TargetProperties | false][]} */\nconst TARGETS = [\n\t[\n\t\t\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\",\n\t\t\"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\",\n\t\t/^browserslist(?::(.+))?$/,\n\t\t(rest, context) => {\n\t\t\tconst browserslistTargetHandler = getBrowserslistTargetHandler();\n\t\t\tconst browsers = browserslistTargetHandler.load(\n\t\t\t\trest ? rest.trim() : null,\n\t\t\t\tcontext\n\t\t\t);\n\t\t\tif (!browsers) {\n\t\t\t\tthrow new Error(`No browserslist config found to handle the 'browserslist' target.\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\n\t\t\t}\n\t\t\treturn browserslistTargetHandler.resolve(browsers);\n\t\t}\n\t],\n\t[\n\t\t\"web\",\n\t\t\"Web browser.\",\n\t\t/^web$/,\n\t\t() => {\n\t\t\treturn {\n\t\t\t\tweb: true,\n\t\t\t\tbrowser: true,\n\t\t\t\twebworker: null,\n\t\t\t\tnode: false,\n\t\t\t\telectron: false,\n\t\t\t\tnwjs: false,\n\n\t\t\t\tdocument: true,\n\t\t\t\timportScriptsInWorker: true,\n\t\t\t\tfetchWasm: true,\n\t\t\t\tnodeBuiltins: false,\n\t\t\t\timportScripts: false,\n\t\t\t\trequire: false,\n\t\t\t\tglobal: false\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"webworker\",\n\t\t\"Web Worker, SharedWorker or Service Worker.\",\n\t\t/^webworker$/,\n\t\t() => {\n\t\t\treturn {\n\t\t\t\tweb: true,\n\t\t\t\tbrowser: true,\n\t\t\t\twebworker: true,\n\t\t\t\tnode: false,\n\t\t\t\telectron: false,\n\t\t\t\tnwjs: false,\n\n\t\t\t\timportScripts: true,\n\t\t\t\timportScriptsInWorker: true,\n\t\t\t\tfetchWasm: true,\n\t\t\t\tnodeBuiltins: false,\n\t\t\t\trequire: false,\n\t\t\t\tdocument: false,\n\t\t\t\tglobal: false\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"[async-]node[X[.Y]]\",\n\t\t\"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\",\n\t\t/^(async-)?node(\\d+(?:\\.(\\d+))?)?$/,\n\t\t(asyncFlag, major, minor) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\telectron: false,\n\t\t\t\tnwjs: false,\n\t\t\t\tweb: false,\n\t\t\t\twebworker: false,\n\t\t\t\tbrowser: false,\n\n\t\t\t\trequire: !asyncFlag,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\tglobal: true,\n\t\t\t\tdocument: false,\n\t\t\t\tfetchWasm: false,\n\t\t\t\timportScripts: false,\n\t\t\t\timportScriptsInWorker: false,\n\n\t\t\t\tglobalThis: v(12),\n\t\t\t\tconst: v(6),\n\t\t\t\ttemplateLiteral: v(4),\n\t\t\t\toptionalChaining: v(14),\n\t\t\t\tarrowFunction: v(6),\n\t\t\t\tforOf: v(5),\n\t\t\t\tdestructuring: v(6),\n\t\t\t\tbigIntLiteral: v(10, 4),\n\t\t\t\tdynamicImport: v(12, 17),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(12, 17)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"electron[X[.Y]]-main/preload/renderer\",\n\t\t\"Electron in version X.Y. Script is running in main, preload resp. renderer context.\",\n\t\t/^electron(\\d+(?:\\.(\\d+))?)?-(main|preload|renderer)$/,\n\t\t(major, minor, context) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/ + https://github.com/electron/releases\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\telectron: true,\n\t\t\t\tweb: context !== \"main\",\n\t\t\t\twebworker: false,\n\t\t\t\tbrowser: false,\n\t\t\t\tnwjs: false,\n\n\t\t\t\telectronMain: context === \"main\",\n\t\t\t\telectronPreload: context === \"preload\",\n\t\t\t\telectronRenderer: context === \"renderer\",\n\n\t\t\t\tglobal: true,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\trequire: true,\n\t\t\t\tdocument: context === \"renderer\",\n\t\t\t\tfetchWasm: context === \"renderer\",\n\t\t\t\timportScripts: false,\n\t\t\t\timportScriptsInWorker: true,\n\n\t\t\t\tglobalThis: v(5),\n\t\t\t\tconst: v(1, 1),\n\t\t\t\ttemplateLiteral: v(1, 1),\n\t\t\t\toptionalChaining: v(8),\n\t\t\t\tarrowFunction: v(1, 1),\n\t\t\t\tforOf: v(0, 36),\n\t\t\t\tdestructuring: v(1, 1),\n\t\t\t\tbigIntLiteral: v(4),\n\t\t\t\tdynamicImport: v(11),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(11)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"nwjs[X[.Y]] / node-webkit[X[.Y]]\",\n\t\t\"NW.js in version X.Y.\",\n\t\t/^(?:nwjs|node-webkit)(\\d+(?:\\.(\\d+))?)?$/,\n\t\t(major, minor) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\tweb: true,\n\t\t\t\tnwjs: true,\n\t\t\t\twebworker: null,\n\t\t\t\tbrowser: false,\n\t\t\t\telectron: false,\n\n\t\t\t\tglobal: true,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\tdocument: false,\n\t\t\t\timportScriptsInWorker: false,\n\t\t\t\tfetchWasm: false,\n\t\t\t\timportScripts: false,\n\t\t\t\trequire: false,\n\n\t\t\t\tglobalThis: v(0, 43),\n\t\t\t\tconst: v(0, 15),\n\t\t\t\ttemplateLiteral: v(0, 13),\n\t\t\t\toptionalChaining: v(0, 44),\n\t\t\t\tarrowFunction: v(0, 15),\n\t\t\t\tforOf: v(0, 13),\n\t\t\t\tdestructuring: v(0, 15),\n\t\t\t\tbigIntLiteral: v(0, 32),\n\t\t\t\tdynamicImport: v(0, 43),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(0, 43)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"esX\",\n\t\t\"EcmaScript in this version. Examples: es2020, es5.\",\n\t\t/^es(\\d+)$/,\n\t\tversion => {\n\t\t\tlet v = +version;\n\t\t\tif (v < 1000) v = v + 2009;\n\t\t\treturn {\n\t\t\t\tconst: v >= 2015,\n\t\t\t\ttemplateLiteral: v >= 2015,\n\t\t\t\toptionalChaining: v >= 2020,\n\t\t\t\tarrowFunction: v >= 2015,\n\t\t\t\tforOf: v >= 2015,\n\t\t\t\tdestructuring: v >= 2015,\n\t\t\t\tmodule: v >= 2015,\n\t\t\t\tglobalThis: v >= 2020,\n\t\t\t\tbigIntLiteral: v >= 2020,\n\t\t\t\tdynamicImport: v >= 2020,\n\t\t\t\tdynamicImportInWorker: v >= 2020\n\t\t\t};\n\t\t}\n\t]\n];\n\n/**\n * @param {string} target the target\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetProperties = (target, context) => {\n\tfor (const [, , regExp, handler] of TARGETS) {\n\t\tconst match = regExp.exec(target);\n\t\tif (match) {\n\t\t\tconst [, ...args] = match;\n\t\t\tconst result = handler(...args, context);\n\t\t\tif (result) return result;\n\t\t}\n\t}\n\tthrow new Error(\n\t\t`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(\n\t\t\t([name, description]) => `* ${name}: ${description}`\n\t\t).join(\"\\n\")}`\n\t);\n};\n\nconst mergeTargetProperties = targetProperties => {\n\tconst keys = new Set();\n\tfor (const tp of targetProperties) {\n\t\tfor (const key of Object.keys(tp)) {\n\t\t\tkeys.add(key);\n\t\t}\n\t}\n\tconst result = {};\n\tfor (const key of keys) {\n\t\tlet hasTrue = false;\n\t\tlet hasFalse = false;\n\t\tfor (const tp of targetProperties) {\n\t\t\tconst value = tp[key];\n\t\t\tswitch (value) {\n\t\t\t\tcase true:\n\t\t\t\t\thasTrue = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase false:\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasTrue || hasFalse)\n\t\t\tresult[key] = hasFalse && hasTrue ? null : hasTrue ? true : false;\n\t}\n\treturn /** @type {TargetProperties} */ (result);\n};\n\n/**\n * @param {string[]} targets the targets\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetsProperties = (targets, context) => {\n\treturn mergeTargetProperties(\n\t\ttargets.map(t => getTargetProperties(t, context))\n\t);\n};\n\nexports.getDefaultTarget = getDefaultTarget;\nexports.getTargetProperties = getTargetProperties;\nexports.getTargetsProperties = getTargetsProperties;\n"]},"metadata":{},"sourceType":"script"}