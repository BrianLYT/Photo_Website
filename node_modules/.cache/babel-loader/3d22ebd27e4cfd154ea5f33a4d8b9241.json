{"ast":null,"code":"const readWasm = require(\"../lib/read-wasm\");\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\n\n\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n  cachedWasm = readWasm().then(buffer => {\n    return WebAssembly.instantiate(buffer, {\n      env: {\n        mapping_callback(generatedLine, generatedColumn, hasLastGeneratedColumn, lastGeneratedColumn, hasOriginal, source, originalLine, originalColumn, hasName, name) {\n          const mapping = new Mapping(); // JS uses 1-based line numbers, wasm uses 0-based.\n\n          mapping.generatedLine = generatedLine + 1;\n          mapping.generatedColumn = generatedColumn;\n\n          if (hasLastGeneratedColumn) {\n            // JS uses inclusive last generated column, wasm uses exclusive.\n            mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n          }\n\n          if (hasOriginal) {\n            mapping.source = source; // JS uses 1-based line numbers, wasm uses 0-based.\n\n            mapping.originalLine = originalLine + 1;\n            mapping.originalColumn = originalColumn;\n\n            if (hasName) {\n              mapping.name = name;\n            }\n          }\n\n          callbackStack[callbackStack.length - 1](mapping);\n        },\n\n        start_all_generated_locations_for() {\n          console.time(\"all_generated_locations_for\");\n        },\n\n        end_all_generated_locations_for() {\n          console.timeEnd(\"all_generated_locations_for\");\n        },\n\n        start_compute_column_spans() {\n          console.time(\"compute_column_spans\");\n        },\n\n        end_compute_column_spans() {\n          console.timeEnd(\"compute_column_spans\");\n        },\n\n        start_generated_location_for() {\n          console.time(\"generated_location_for\");\n        },\n\n        end_generated_location_for() {\n          console.timeEnd(\"generated_location_for\");\n        },\n\n        start_original_location_for() {\n          console.time(\"original_location_for\");\n        },\n\n        end_original_location_for() {\n          console.timeEnd(\"original_location_for\");\n        },\n\n        start_parse_mappings() {\n          console.time(\"parse_mappings\");\n        },\n\n        end_parse_mappings() {\n          console.timeEnd(\"parse_mappings\");\n        },\n\n        start_sort_by_generated_location() {\n          console.time(\"sort_by_generated_location\");\n        },\n\n        end_sort_by_generated_location() {\n          console.timeEnd(\"sort_by_generated_location\");\n        },\n\n        start_sort_by_original_location() {\n          console.time(\"sort_by_original_location\");\n        },\n\n        end_sort_by_original_location() {\n          console.timeEnd(\"sort_by_original_location\");\n        }\n\n      }\n    });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n  return cachedWasm;\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/terser/node_modules/source-map/lib/wasm.js"],"names":["readWasm","require","Mapping","generatedLine","generatedColumn","lastGeneratedColumn","source","originalLine","originalColumn","name","cachedWasm","module","exports","wasm","callbackStack","then","buffer","WebAssembly","instantiate","env","mapping_callback","hasLastGeneratedColumn","hasOriginal","hasName","mapping","length","start_all_generated_locations_for","console","time","end_all_generated_locations_for","timeEnd","start_compute_column_spans","end_compute_column_spans","start_generated_location_for","end_generated_location_for","start_original_location_for","end_original_location_for","start_parse_mappings","end_parse_mappings","start_sort_by_generated_location","end_sort_by_generated_location","start_sort_by_original_location","end_sort_by_original_location","Wasm","instance","withMappingCallback","mappingCallback","f","push","pop","e"],"mappings":"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","sourcesContent":["const readWasm = require(\"../lib/read-wasm\");\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n\n  cachedWasm = readWasm().then(buffer => {\n      return WebAssembly.instantiate(buffer, {\n        env: {\n          mapping_callback(\n            generatedLine,\n            generatedColumn,\n\n            hasLastGeneratedColumn,\n            lastGeneratedColumn,\n\n            hasOriginal,\n            source,\n            originalLine,\n            originalColumn,\n\n            hasName,\n            name\n          ) {\n            const mapping = new Mapping();\n            // JS uses 1-based line numbers, wasm uses 0-based.\n            mapping.generatedLine = generatedLine + 1;\n            mapping.generatedColumn = generatedColumn;\n\n            if (hasLastGeneratedColumn) {\n              // JS uses inclusive last generated column, wasm uses exclusive.\n              mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n            }\n\n            if (hasOriginal) {\n              mapping.source = source;\n              // JS uses 1-based line numbers, wasm uses 0-based.\n              mapping.originalLine = originalLine + 1;\n              mapping.originalColumn = originalColumn;\n\n              if (hasName) {\n                mapping.name = name;\n              }\n            }\n\n            callbackStack[callbackStack.length - 1](mapping);\n          },\n\n          start_all_generated_locations_for() { console.time(\"all_generated_locations_for\"); },\n          end_all_generated_locations_for() { console.timeEnd(\"all_generated_locations_for\"); },\n\n          start_compute_column_spans() { console.time(\"compute_column_spans\"); },\n          end_compute_column_spans() { console.timeEnd(\"compute_column_spans\"); },\n\n          start_generated_location_for() { console.time(\"generated_location_for\"); },\n          end_generated_location_for() { console.timeEnd(\"generated_location_for\"); },\n\n          start_original_location_for() { console.time(\"original_location_for\"); },\n          end_original_location_for() { console.timeEnd(\"original_location_for\"); },\n\n          start_parse_mappings() { console.time(\"parse_mappings\"); },\n          end_parse_mappings() { console.timeEnd(\"parse_mappings\"); },\n\n          start_sort_by_generated_location() { console.time(\"sort_by_generated_location\"); },\n          end_sort_by_generated_location() { console.timeEnd(\"sort_by_generated_location\"); },\n\n          start_sort_by_original_location() { console.time(\"sort_by_original_location\"); },\n          end_sort_by_original_location() { console.timeEnd(\"sort_by_original_location\"); },\n        }\n      });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n\n  return cachedWasm;\n};\n"]},"metadata":{},"sourceType":"script"}