{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/**\n * @template T\n * @param {Iterable<T>} set a set\n * @returns {T | undefined} last item\n */\n\nconst last = set => {\n  let last;\n\n  for (const item of set) last = item;\n\n  return last;\n};\n/**\n * @template T\n * @param {Iterable<T>} iterable iterable\n * @param {function(T): boolean} filter predicate\n * @returns {boolean} true, if some items match the filter predicate\n */\n\n\nconst someInIterable = (iterable, filter) => {\n  for (const item of iterable) {\n    if (filter(item)) return true;\n  }\n\n  return false;\n};\n/**\n * @template T\n * @param {Iterable<T>} iterable an iterable\n * @returns {number} count of items\n */\n\n\nconst countIterable = iterable => {\n  let i = 0; // eslint-disable-next-line no-unused-vars\n\n  for (const _ of iterable) i++;\n\n  return i;\n};\n\nexports.last = last;\nexports.someInIterable = someInIterable;\nexports.countIterable = countIterable;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/IterableHelpers.js"],"names":["last","set","item","someInIterable","iterable","filter","countIterable","i","_","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMA,IAAI,GAAGC,GAAG,IAAI;AACnB,MAAID,IAAJ;;AACA,OAAK,MAAME,IAAX,IAAmBD,GAAnB,EAAwBD,IAAI,GAAGE,IAAP;;AACxB,SAAOF,IAAP;AACA,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,cAAc,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC5C,OAAK,MAAMH,IAAX,IAAmBE,QAAnB,EAA6B;AAC5B,QAAIC,MAAM,CAACH,IAAD,CAAV,EAAkB,OAAO,IAAP;AAClB;;AACD,SAAO,KAAP;AACA,CALD;AAOA;AACA;AACA;AACA;AACA;;;AACA,MAAMI,aAAa,GAAGF,QAAQ,IAAI;AACjC,MAAIG,CAAC,GAAG,CAAR,CADiC,CAEjC;;AACA,OAAK,MAAMC,CAAX,IAAgBJ,QAAhB,EAA0BG,CAAC;;AAC3B,SAAOA,CAAP;AACA,CALD;;AAOAE,OAAO,CAACT,IAAR,GAAeA,IAAf;AACAS,OAAO,CAACN,cAAR,GAAyBA,cAAzB;AACAM,OAAO,CAACH,aAAR,GAAwBA,aAAxB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n * @param {Iterable<T>} set a set\n * @returns {T | undefined} last item\n */\nconst last = set => {\n\tlet last;\n\tfor (const item of set) last = item;\n\treturn last;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable iterable\n * @param {function(T): boolean} filter predicate\n * @returns {boolean} true, if some items match the filter predicate\n */\nconst someInIterable = (iterable, filter) => {\n\tfor (const item of iterable) {\n\t\tif (filter(item)) return true;\n\t}\n\treturn false;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable an iterable\n * @returns {number} count of items\n */\nconst countIterable = iterable => {\n\tlet i = 0;\n\t// eslint-disable-next-line no-unused-vars\n\tfor (const _ of iterable) i++;\n\treturn i;\n};\n\nexports.last = last;\nexports.someInIterable = someInIterable;\nexports.countIterable = countIterable;\n"]},"metadata":{},"sourceType":"script"}