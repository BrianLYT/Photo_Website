{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\n\nmodule.exports = class AliasPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {AliasOption | Array<AliasOption>} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = Array.isArray(options) ? options : [options];\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n      const innerRequest = request.request || request.path;\n      if (!innerRequest) return callback();\n      forEachBail(this.options, (item, callback) => {\n        let shouldStop = false;\n\n        if (innerRequest === item.name || !item.onlyModule && innerRequest.startsWith(request.request ? `${item.name}/` : resolver.join(item.name, \"_\").slice(0, -1))) {\n          const remainingRequest = innerRequest.substr(item.name.length);\n\n          const resolveWithAlias = (alias, callback) => {\n            if (alias === false) {\n              /** @type {ResolveRequest} */\n              const ignoreObj = { ...request,\n                path: false\n              };\n\n              if (typeof resolveContext.yield === \"function\") {\n                resolveContext.yield(ignoreObj);\n                return callback(null, null);\n              }\n\n              return callback(null, ignoreObj);\n            }\n\n            if (innerRequest !== alias && !innerRequest.startsWith(alias + \"/\")) {\n              shouldStop = true;\n              const newRequestStr = alias + remainingRequest;\n              const obj = { ...request,\n                request: newRequestStr,\n                fullySpecified: false\n              };\n              return resolver.doResolve(target, obj, \"aliased with mapping '\" + item.name + \"': '\" + alias + \"' to '\" + newRequestStr + \"'\", resolveContext, (err, result) => {\n                if (err) return callback(err);\n                if (result) return callback(null, result);\n                return callback();\n              });\n            }\n\n            return callback();\n          };\n\n          const stoppingCallback = (err, result) => {\n            if (err) return callback(err);\n            if (result) return callback(null, result); // Don't allow other aliasing or raw request\n\n            if (shouldStop) return callback(null, null);\n            return callback();\n          };\n\n          if (Array.isArray(item.alias)) {\n            return forEachBail(item.alias, resolveWithAlias, stoppingCallback);\n          } else {\n            return resolveWithAlias(item.alias, stoppingCallback);\n          }\n        }\n\n        return callback();\n      }, callback);\n    });\n  }\n\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/enhanced-resolve/lib/AliasPlugin.js"],"names":["forEachBail","require","module","exports","AliasPlugin","constructor","source","options","target","Array","isArray","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","innerRequest","path","item","shouldStop","name","onlyModule","startsWith","join","slice","remainingRequest","substr","length","resolveWithAlias","alias","ignoreObj","yield","newRequestStr","obj","fullySpecified","doResolve","err","result","stoppingCallback"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = class AliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {AliasOption | Array<AliasOption>} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.options,\n\t\t\t\t\t(item, callback) => {\n\t\t\t\t\t\tlet shouldStop = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t\t(!item.onlyModule &&\n\t\t\t\t\t\t\t\tinnerRequest.startsWith(\n\t\t\t\t\t\t\t\t\trequest.request\n\t\t\t\t\t\t\t\t\t\t? `${item.name}/`\n\t\t\t\t\t\t\t\t\t\t: resolver.join(item.name, \"_\").slice(0, -1)\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst remainingRequest = innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst resolveWithAlias = (alias, callback) => {\n\t\t\t\t\t\t\t\tif (alias === false) {\n\t\t\t\t\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tinnerRequest !== alias &&\n\t\t\t\t\t\t\t\t\t!innerRequest.startsWith(alias + \"/\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tshouldStop = true;\n\t\t\t\t\t\t\t\t\tconst newRequestStr = alias + remainingRequest;\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\trequest: newRequestStr,\n\t\t\t\t\t\t\t\t\t\tfullySpecified: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\t\t\talias +\n\t\t\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\tif (shouldStop) return callback(null, null);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (Array.isArray(item.alias)) {\n\t\t\t\t\t\t\t\treturn forEachBail(\n\t\t\t\t\t\t\t\t\titem.alias,\n\t\t\t\t\t\t\t\t\tresolveWithAlias,\n\t\t\t\t\t\t\t\t\tstoppingCallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn resolveWithAlias(item.alias, stoppingCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}