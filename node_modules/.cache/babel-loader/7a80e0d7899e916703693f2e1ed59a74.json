{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst {\n  getChunkFilenameTemplate\n} = require(\"./css/CssModulesPlugin\");\n\nconst RuntimeRequirementsDependency = require(\"./dependencies/RuntimeRequirementsDependency\");\n\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\nconst AsyncModuleRuntimeModule = require(\"./runtime/AsyncModuleRuntimeModule\");\n\nconst AutoPublicPathRuntimeModule = require(\"./runtime/AutoPublicPathRuntimeModule\");\n\nconst CompatGetDefaultExportRuntimeModule = require(\"./runtime/CompatGetDefaultExportRuntimeModule\");\n\nconst CompatRuntimeModule = require(\"./runtime/CompatRuntimeModule\");\n\nconst CreateFakeNamespaceObjectRuntimeModule = require(\"./runtime/CreateFakeNamespaceObjectRuntimeModule\");\n\nconst CreateScriptRuntimeModule = require(\"./runtime/CreateScriptRuntimeModule\");\n\nconst CreateScriptUrlRuntimeModule = require(\"./runtime/CreateScriptUrlRuntimeModule\");\n\nconst DefinePropertyGettersRuntimeModule = require(\"./runtime/DefinePropertyGettersRuntimeModule\");\n\nconst EnsureChunkRuntimeModule = require(\"./runtime/EnsureChunkRuntimeModule\");\n\nconst GetChunkFilenameRuntimeModule = require(\"./runtime/GetChunkFilenameRuntimeModule\");\n\nconst GetMainFilenameRuntimeModule = require(\"./runtime/GetMainFilenameRuntimeModule\");\n\nconst GetTrustedTypesPolicyRuntimeModule = require(\"./runtime/GetTrustedTypesPolicyRuntimeModule\");\n\nconst GlobalRuntimeModule = require(\"./runtime/GlobalRuntimeModule\");\n\nconst HasOwnPropertyRuntimeModule = require(\"./runtime/HasOwnPropertyRuntimeModule\");\n\nconst LoadScriptRuntimeModule = require(\"./runtime/LoadScriptRuntimeModule\");\n\nconst MakeNamespaceObjectRuntimeModule = require(\"./runtime/MakeNamespaceObjectRuntimeModule\");\n\nconst OnChunksLoadedRuntimeModule = require(\"./runtime/OnChunksLoadedRuntimeModule\");\n\nconst PublicPathRuntimeModule = require(\"./runtime/PublicPathRuntimeModule\");\n\nconst RelativeUrlRuntimeModule = require(\"./runtime/RelativeUrlRuntimeModule\");\n\nconst RuntimeIdRuntimeModule = require(\"./runtime/RuntimeIdRuntimeModule\");\n\nconst SystemContextRuntimeModule = require(\"./runtime/SystemContextRuntimeModule\");\n\nconst ShareRuntimeModule = require(\"./sharing/ShareRuntimeModule\");\n\nconst StringXor = require(\"./util/StringXor\");\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Module\")} Module */\n\n\nconst GLOBALS_ON_REQUIRE = [RuntimeGlobals.chunkName, RuntimeGlobals.runtimeId, RuntimeGlobals.compatGetDefaultExport, RuntimeGlobals.createFakeNamespaceObject, RuntimeGlobals.createScript, RuntimeGlobals.createScriptUrl, RuntimeGlobals.getTrustedTypesPolicy, RuntimeGlobals.definePropertyGetters, RuntimeGlobals.ensureChunk, RuntimeGlobals.entryModuleId, RuntimeGlobals.getFullHash, RuntimeGlobals.global, RuntimeGlobals.makeNamespaceObject, RuntimeGlobals.moduleCache, RuntimeGlobals.moduleFactories, RuntimeGlobals.moduleFactoriesAddOnly, RuntimeGlobals.interceptModuleExecution, RuntimeGlobals.publicPath, RuntimeGlobals.baseURI, RuntimeGlobals.relativeUrl, RuntimeGlobals.scriptNonce, RuntimeGlobals.uncaughtErrorHandler, RuntimeGlobals.asyncModule, RuntimeGlobals.wasmInstances, RuntimeGlobals.instantiateWasm, RuntimeGlobals.shareScopeMap, RuntimeGlobals.initializeSharing, RuntimeGlobals.loadScript, RuntimeGlobals.systemContext, RuntimeGlobals.onChunksLoaded];\nconst MODULE_DEPENDENCIES = {\n  [RuntimeGlobals.moduleLoaded]: [RuntimeGlobals.module],\n  [RuntimeGlobals.moduleId]: [RuntimeGlobals.module]\n};\nconst TREE_DEPENDENCIES = {\n  [RuntimeGlobals.definePropertyGetters]: [RuntimeGlobals.hasOwnProperty],\n  [RuntimeGlobals.compatGetDefaultExport]: [RuntimeGlobals.definePropertyGetters],\n  [RuntimeGlobals.createFakeNamespaceObject]: [RuntimeGlobals.definePropertyGetters, RuntimeGlobals.makeNamespaceObject, RuntimeGlobals.require],\n  [RuntimeGlobals.initializeSharing]: [RuntimeGlobals.shareScopeMap],\n  [RuntimeGlobals.shareScopeMap]: [RuntimeGlobals.hasOwnProperty]\n};\n\nclass RuntimePlugin {\n  /**\n   * @param {Compiler} compiler the Compiler\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RuntimePlugin\", compilation => {\n      compilation.dependencyTemplates.set(RuntimeRequirementsDependency, new RuntimeRequirementsDependency.Template());\n\n      for (const req of GLOBALS_ON_REQUIRE) {\n        compilation.hooks.runtimeRequirementInModule.for(req).tap(\"RuntimePlugin\", (module, set) => {\n          set.add(RuntimeGlobals.requireScope);\n        });\n        compilation.hooks.runtimeRequirementInTree.for(req).tap(\"RuntimePlugin\", (module, set) => {\n          set.add(RuntimeGlobals.requireScope);\n        });\n      }\n\n      for (const req of Object.keys(TREE_DEPENDENCIES)) {\n        const deps = TREE_DEPENDENCIES[req];\n        compilation.hooks.runtimeRequirementInTree.for(req).tap(\"RuntimePlugin\", (chunk, set) => {\n          for (const dep of deps) set.add(dep);\n        });\n      }\n\n      for (const req of Object.keys(MODULE_DEPENDENCIES)) {\n        const deps = MODULE_DEPENDENCIES[req];\n        compilation.hooks.runtimeRequirementInModule.for(req).tap(\"RuntimePlugin\", (chunk, set) => {\n          for (const dep of deps) set.add(dep);\n        });\n      }\n\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.definePropertyGetters).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new DefinePropertyGettersRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.makeNamespaceObject).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new MakeNamespaceObjectRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createFakeNamespaceObject).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new CreateFakeNamespaceObjectRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hasOwnProperty).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new HasOwnPropertyRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.compatGetDefaultExport).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new CompatGetDefaultExportRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.runtimeId).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new RuntimeIdRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.publicPath).tap(\"RuntimePlugin\", (chunk, set) => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          publicPath: globalPublicPath,\n          scriptType\n        } = outputOptions;\n        const entryOptions = chunk.getEntryOptions();\n        const publicPath = entryOptions && entryOptions.publicPath !== undefined ? entryOptions.publicPath : globalPublicPath;\n\n        if (publicPath === \"auto\") {\n          const module = new AutoPublicPathRuntimeModule();\n          if (scriptType !== \"module\") set.add(RuntimeGlobals.global);\n          compilation.addRuntimeModule(chunk, module);\n        } else {\n          const module = new PublicPathRuntimeModule(publicPath);\n\n          if (typeof publicPath !== \"string\" || /\\[(full)?hash\\]/.test(publicPath)) {\n            module.fullHash = true;\n          }\n\n          compilation.addRuntimeModule(chunk, module);\n        }\n\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.global).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new GlobalRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.asyncModule).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new AsyncModuleRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.systemContext).tap(\"RuntimePlugin\", chunk => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          library: globalLibrary\n        } = outputOptions;\n        const entryOptions = chunk.getEntryOptions();\n        const libraryType = entryOptions && entryOptions.library !== undefined ? entryOptions.library.type : globalLibrary.type;\n\n        if (libraryType === \"system\") {\n          compilation.addRuntimeModule(chunk, new SystemContextRuntimeModule());\n        }\n\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkScriptFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (typeof compilation.outputOptions.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"javascript\", \"javascript\", RuntimeGlobals.getChunkScriptFilename, chunk => chunk.filenameTemplate || (chunk.canBeInitial() ? compilation.outputOptions.filename : compilation.outputOptions.chunkFilename), false));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkCssFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (typeof compilation.outputOptions.cssChunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.cssChunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"css\", \"css\", RuntimeGlobals.getChunkCssFilename, chunk => getChunkFilenameTemplate(chunk, compilation.outputOptions), set.has(RuntimeGlobals.hmrDownloadUpdateHandlers)));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkUpdateScriptFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (/\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.hotUpdateChunkFilename)) set.add(RuntimeGlobals.getFullHash);\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"javascript\", \"javascript update\", RuntimeGlobals.getChunkUpdateScriptFilename, c => compilation.outputOptions.hotUpdateChunkFilename, true));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getUpdateManifestFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (/\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.hotUpdateMainFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        compilation.addRuntimeModule(chunk, new GetMainFilenameRuntimeModule(\"update manifest\", RuntimeGlobals.getUpdateManifestFilename, compilation.outputOptions.hotUpdateMainFilename));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunk).tap(\"RuntimePlugin\", (chunk, set) => {\n        const hasAsyncChunks = chunk.hasAsyncChunks();\n\n        if (hasAsyncChunks) {\n          set.add(RuntimeGlobals.ensureChunkHandlers);\n        }\n\n        compilation.addRuntimeModule(chunk, new EnsureChunkRuntimeModule(set));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkIncludeEntries).tap(\"RuntimePlugin\", (chunk, set) => {\n        set.add(RuntimeGlobals.ensureChunkHandlers);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.shareScopeMap).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new ShareRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.loadScript).tap(\"RuntimePlugin\", (chunk, set) => {\n        const withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n\n        if (withCreateScriptUrl) {\n          set.add(RuntimeGlobals.createScriptUrl);\n        }\n\n        compilation.addRuntimeModule(chunk, new LoadScriptRuntimeModule(withCreateScriptUrl));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createScript).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (compilation.outputOptions.trustedTypes) {\n          set.add(RuntimeGlobals.getTrustedTypesPolicy);\n        }\n\n        compilation.addRuntimeModule(chunk, new CreateScriptRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createScriptUrl).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (compilation.outputOptions.trustedTypes) {\n          set.add(RuntimeGlobals.getTrustedTypesPolicy);\n        }\n\n        compilation.addRuntimeModule(chunk, new CreateScriptUrlRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getTrustedTypesPolicy).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new GetTrustedTypesPolicyRuntimeModule(set));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.relativeUrl).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new RelativeUrlRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.onChunksLoaded).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new OnChunksLoadedRuntimeModule());\n        return true;\n      }); // TODO webpack 6: remove CompatRuntimeModule\n\n      compilation.hooks.additionalTreeRuntimeRequirements.tap(\"RuntimePlugin\", (chunk, set) => {\n        const {\n          mainTemplate\n        } = compilation;\n\n        if (mainTemplate.hooks.bootstrap.isUsed() || mainTemplate.hooks.localVars.isUsed() || mainTemplate.hooks.requireEnsure.isUsed() || mainTemplate.hooks.requireExtensions.isUsed()) {\n          compilation.addRuntimeModule(chunk, new CompatRuntimeModule());\n        }\n      });\n      JavascriptModulesPlugin.getCompilationHooks(compilation).chunkHash.tap(\"RuntimePlugin\", (chunk, hash, _ref) => {\n        let {\n          chunkGraph\n        } = _ref;\n        const xor = new StringXor();\n\n        for (const m of chunkGraph.getChunkRuntimeModulesIterable(chunk)) {\n          xor.add(chunkGraph.getModuleHash(m, chunk.runtime));\n        }\n\n        xor.updateHash(hash);\n      });\n    });\n  }\n\n}\n\nmodule.exports = RuntimePlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/RuntimePlugin.js"],"names":["RuntimeGlobals","require","getChunkFilenameTemplate","RuntimeRequirementsDependency","JavascriptModulesPlugin","AsyncModuleRuntimeModule","AutoPublicPathRuntimeModule","CompatGetDefaultExportRuntimeModule","CompatRuntimeModule","CreateFakeNamespaceObjectRuntimeModule","CreateScriptRuntimeModule","CreateScriptUrlRuntimeModule","DefinePropertyGettersRuntimeModule","EnsureChunkRuntimeModule","GetChunkFilenameRuntimeModule","GetMainFilenameRuntimeModule","GetTrustedTypesPolicyRuntimeModule","GlobalRuntimeModule","HasOwnPropertyRuntimeModule","LoadScriptRuntimeModule","MakeNamespaceObjectRuntimeModule","OnChunksLoadedRuntimeModule","PublicPathRuntimeModule","RelativeUrlRuntimeModule","RuntimeIdRuntimeModule","SystemContextRuntimeModule","ShareRuntimeModule","StringXor","GLOBALS_ON_REQUIRE","chunkName","runtimeId","compatGetDefaultExport","createFakeNamespaceObject","createScript","createScriptUrl","getTrustedTypesPolicy","definePropertyGetters","ensureChunk","entryModuleId","getFullHash","global","makeNamespaceObject","moduleCache","moduleFactories","moduleFactoriesAddOnly","interceptModuleExecution","publicPath","baseURI","relativeUrl","scriptNonce","uncaughtErrorHandler","asyncModule","wasmInstances","instantiateWasm","shareScopeMap","initializeSharing","loadScript","systemContext","onChunksLoaded","MODULE_DEPENDENCIES","moduleLoaded","module","moduleId","TREE_DEPENDENCIES","hasOwnProperty","RuntimePlugin","apply","compiler","hooks","compilation","tap","dependencyTemplates","set","Template","req","runtimeRequirementInModule","for","add","requireScope","runtimeRequirementInTree","Object","keys","deps","chunk","dep","addRuntimeModule","outputOptions","globalPublicPath","scriptType","entryOptions","getEntryOptions","undefined","test","fullHash","library","globalLibrary","libraryType","type","getChunkScriptFilename","chunkFilename","filenameTemplate","canBeInitial","filename","getChunkCssFilename","cssChunkFilename","has","hmrDownloadUpdateHandlers","getChunkUpdateScriptFilename","hotUpdateChunkFilename","c","getUpdateManifestFilename","hotUpdateMainFilename","hasAsyncChunks","ensureChunkHandlers","ensureChunkIncludeEntries","withCreateScriptUrl","trustedTypes","additionalTreeRuntimeRequirements","mainTemplate","bootstrap","isUsed","localVars","requireEnsure","requireExtensions","getCompilationHooks","chunkHash","hash","chunkGraph","xor","m","getChunkRuntimeModulesIterable","getModuleHash","runtime","updateHash","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst { getChunkFilenameTemplate } = require(\"./css/CssModulesPlugin\");\nconst RuntimeRequirementsDependency = require(\"./dependencies/RuntimeRequirementsDependency\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\nconst AsyncModuleRuntimeModule = require(\"./runtime/AsyncModuleRuntimeModule\");\nconst AutoPublicPathRuntimeModule = require(\"./runtime/AutoPublicPathRuntimeModule\");\nconst CompatGetDefaultExportRuntimeModule = require(\"./runtime/CompatGetDefaultExportRuntimeModule\");\nconst CompatRuntimeModule = require(\"./runtime/CompatRuntimeModule\");\nconst CreateFakeNamespaceObjectRuntimeModule = require(\"./runtime/CreateFakeNamespaceObjectRuntimeModule\");\nconst CreateScriptRuntimeModule = require(\"./runtime/CreateScriptRuntimeModule\");\nconst CreateScriptUrlRuntimeModule = require(\"./runtime/CreateScriptUrlRuntimeModule\");\nconst DefinePropertyGettersRuntimeModule = require(\"./runtime/DefinePropertyGettersRuntimeModule\");\nconst EnsureChunkRuntimeModule = require(\"./runtime/EnsureChunkRuntimeModule\");\nconst GetChunkFilenameRuntimeModule = require(\"./runtime/GetChunkFilenameRuntimeModule\");\nconst GetMainFilenameRuntimeModule = require(\"./runtime/GetMainFilenameRuntimeModule\");\nconst GetTrustedTypesPolicyRuntimeModule = require(\"./runtime/GetTrustedTypesPolicyRuntimeModule\");\nconst GlobalRuntimeModule = require(\"./runtime/GlobalRuntimeModule\");\nconst HasOwnPropertyRuntimeModule = require(\"./runtime/HasOwnPropertyRuntimeModule\");\nconst LoadScriptRuntimeModule = require(\"./runtime/LoadScriptRuntimeModule\");\nconst MakeNamespaceObjectRuntimeModule = require(\"./runtime/MakeNamespaceObjectRuntimeModule\");\nconst OnChunksLoadedRuntimeModule = require(\"./runtime/OnChunksLoadedRuntimeModule\");\nconst PublicPathRuntimeModule = require(\"./runtime/PublicPathRuntimeModule\");\nconst RelativeUrlRuntimeModule = require(\"./runtime/RelativeUrlRuntimeModule\");\nconst RuntimeIdRuntimeModule = require(\"./runtime/RuntimeIdRuntimeModule\");\nconst SystemContextRuntimeModule = require(\"./runtime/SystemContextRuntimeModule\");\nconst ShareRuntimeModule = require(\"./sharing/ShareRuntimeModule\");\nconst StringXor = require(\"./util/StringXor\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n\nconst GLOBALS_ON_REQUIRE = [\n\tRuntimeGlobals.chunkName,\n\tRuntimeGlobals.runtimeId,\n\tRuntimeGlobals.compatGetDefaultExport,\n\tRuntimeGlobals.createFakeNamespaceObject,\n\tRuntimeGlobals.createScript,\n\tRuntimeGlobals.createScriptUrl,\n\tRuntimeGlobals.getTrustedTypesPolicy,\n\tRuntimeGlobals.definePropertyGetters,\n\tRuntimeGlobals.ensureChunk,\n\tRuntimeGlobals.entryModuleId,\n\tRuntimeGlobals.getFullHash,\n\tRuntimeGlobals.global,\n\tRuntimeGlobals.makeNamespaceObject,\n\tRuntimeGlobals.moduleCache,\n\tRuntimeGlobals.moduleFactories,\n\tRuntimeGlobals.moduleFactoriesAddOnly,\n\tRuntimeGlobals.interceptModuleExecution,\n\tRuntimeGlobals.publicPath,\n\tRuntimeGlobals.baseURI,\n\tRuntimeGlobals.relativeUrl,\n\tRuntimeGlobals.scriptNonce,\n\tRuntimeGlobals.uncaughtErrorHandler,\n\tRuntimeGlobals.asyncModule,\n\tRuntimeGlobals.wasmInstances,\n\tRuntimeGlobals.instantiateWasm,\n\tRuntimeGlobals.shareScopeMap,\n\tRuntimeGlobals.initializeSharing,\n\tRuntimeGlobals.loadScript,\n\tRuntimeGlobals.systemContext,\n\tRuntimeGlobals.onChunksLoaded\n];\n\nconst MODULE_DEPENDENCIES = {\n\t[RuntimeGlobals.moduleLoaded]: [RuntimeGlobals.module],\n\t[RuntimeGlobals.moduleId]: [RuntimeGlobals.module]\n};\n\nconst TREE_DEPENDENCIES = {\n\t[RuntimeGlobals.definePropertyGetters]: [RuntimeGlobals.hasOwnProperty],\n\t[RuntimeGlobals.compatGetDefaultExport]: [\n\t\tRuntimeGlobals.definePropertyGetters\n\t],\n\t[RuntimeGlobals.createFakeNamespaceObject]: [\n\t\tRuntimeGlobals.definePropertyGetters,\n\t\tRuntimeGlobals.makeNamespaceObject,\n\t\tRuntimeGlobals.require\n\t],\n\t[RuntimeGlobals.initializeSharing]: [RuntimeGlobals.shareScopeMap],\n\t[RuntimeGlobals.shareScopeMap]: [RuntimeGlobals.hasOwnProperty]\n};\n\nclass RuntimePlugin {\n\t/**\n\t * @param {Compiler} compiler the Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"RuntimePlugin\", compilation => {\n\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\tRuntimeRequirementsDependency,\n\t\t\t\tnew RuntimeRequirementsDependency.Template()\n\t\t\t);\n\t\t\tfor (const req of GLOBALS_ON_REQUIRE) {\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tfor (const req of Object.keys(TREE_DEPENDENCIES)) {\n\t\t\t\tconst deps = TREE_DEPENDENCIES[req];\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\t\tfor (const dep of deps) set.add(dep);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tfor (const req of Object.keys(MODULE_DEPENDENCIES)) {\n\t\t\t\tconst deps = MODULE_DEPENDENCIES[req];\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\t\tfor (const dep of deps) set.add(dep);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.definePropertyGetters)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew DefinePropertyGettersRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.makeNamespaceObject)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew MakeNamespaceObjectRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createFakeNamespaceObject)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CreateFakeNamespaceObjectRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.hasOwnProperty)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew HasOwnPropertyRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.compatGetDefaultExport)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CompatGetDefaultExportRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.runtimeId)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RuntimeIdRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.publicPath)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst { outputOptions } = compilation;\n\t\t\t\t\tconst { publicPath: globalPublicPath, scriptType } = outputOptions;\n\t\t\t\t\tconst entryOptions = chunk.getEntryOptions();\n\t\t\t\t\tconst publicPath =\n\t\t\t\t\t\tentryOptions && entryOptions.publicPath !== undefined\n\t\t\t\t\t\t\t? entryOptions.publicPath\n\t\t\t\t\t\t\t: globalPublicPath;\n\n\t\t\t\t\tif (publicPath === \"auto\") {\n\t\t\t\t\t\tconst module = new AutoPublicPathRuntimeModule();\n\t\t\t\t\t\tif (scriptType !== \"module\") set.add(RuntimeGlobals.global);\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, module);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst module = new PublicPathRuntimeModule(publicPath);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof publicPath !== \"string\" ||\n\t\t\t\t\t\t\t/\\[(full)?hash\\]/.test(publicPath)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmodule.fullHash = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, module);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.global)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new GlobalRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.asyncModule)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new AsyncModuleRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.systemContext)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tconst { outputOptions } = compilation;\n\t\t\t\t\tconst { library: globalLibrary } = outputOptions;\n\t\t\t\t\tconst entryOptions = chunk.getEntryOptions();\n\t\t\t\t\tconst libraryType =\n\t\t\t\t\t\tentryOptions && entryOptions.library !== undefined\n\t\t\t\t\t\t\t? entryOptions.library.type\n\t\t\t\t\t\t\t: globalLibrary.type;\n\n\t\t\t\t\tif (libraryType === \"system\") {\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew SystemContextRuntimeModule()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkScriptFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof compilation.outputOptions.chunkFilename === \"string\" &&\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.chunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename,\n\t\t\t\t\t\t\tchunk =>\n\t\t\t\t\t\t\t\tchunk.filenameTemplate ||\n\t\t\t\t\t\t\t\t(chunk.canBeInitial()\n\t\t\t\t\t\t\t\t\t? compilation.outputOptions.filename\n\t\t\t\t\t\t\t\t\t: compilation.outputOptions.chunkFilename),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkCssFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof compilation.outputOptions.cssChunkFilename === \"string\" &&\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.cssChunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"css\",\n\t\t\t\t\t\t\t\"css\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkCssFilename,\n\t\t\t\t\t\t\tchunk =>\n\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\tset.has(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkUpdateScriptFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateChunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\t\"javascript update\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkUpdateScriptFilename,\n\t\t\t\t\t\t\tc => compilation.outputOptions.hotUpdateChunkFilename,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getUpdateManifestFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateMainFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetMainFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"update manifest\",\n\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename,\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateMainFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.ensureChunk)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst hasAsyncChunks = chunk.hasAsyncChunks();\n\t\t\t\t\tif (hasAsyncChunks) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkHandlers);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew EnsureChunkRuntimeModule(set)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.ensureChunkIncludeEntries)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkHandlers);\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.shareScopeMap)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new ShareRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.loadScript)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n\t\t\t\t\tif (withCreateScriptUrl) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScriptUrl);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew LoadScriptRuntimeModule(withCreateScriptUrl)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createScript)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getTrustedTypesPolicy);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CreateScriptRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createScriptUrl)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getTrustedTypesPolicy);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CreateScriptUrlRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getTrustedTypesPolicy)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetTrustedTypesPolicyRuntimeModule(set)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.relativeUrl)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RelativeUrlRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.onChunksLoaded)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew OnChunksLoadedRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t// TODO webpack 6: remove CompatRuntimeModule\n\t\t\tcompilation.hooks.additionalTreeRuntimeRequirements.tap(\n\t\t\t\t\"RuntimePlugin\",\n\t\t\t\t(chunk, set) => {\n\t\t\t\t\tconst { mainTemplate } = compilation;\n\t\t\t\t\tif (\n\t\t\t\t\t\tmainTemplate.hooks.bootstrap.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.localVars.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.requireEnsure.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.requireExtensions.isUsed()\n\t\t\t\t\t) {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CompatRuntimeModule());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tJavascriptModulesPlugin.getCompilationHooks(compilation).chunkHash.tap(\n\t\t\t\t\"RuntimePlugin\",\n\t\t\t\t(chunk, hash, { chunkGraph }) => {\n\t\t\t\t\tconst xor = new StringXor();\n\t\t\t\t\tfor (const m of chunkGraph.getChunkRuntimeModulesIterable(chunk)) {\n\t\t\t\t\t\txor.add(chunkGraph.getModuleHash(m, chunk.runtime));\n\t\t\t\t\t}\n\t\t\t\t\txor.updateHash(hash);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = RuntimePlugin;\n"]},"metadata":{},"sourceType":"script"}