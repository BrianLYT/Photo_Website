{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst InnerGraph = require(\"../optimize/InnerGraph\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\n\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\n\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\n\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\n\nconst {\n  ExportPresenceModes\n} = require(\"./HarmonyImportDependency\");\n\nconst {\n  harmonySpecifierTag,\n  getAssertions\n} = require(\"./HarmonyImportDependencyParserPlugin\");\n\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst {\n  HarmonyStarExportsList\n} = HarmonyExportImportedSpecifierDependency;\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n  constructor(options) {\n    this.exportPresenceMode = options.reexportExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.reexportExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n  }\n\n  apply(parser) {\n    const {\n      exportPresenceMode\n    } = this;\n    parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", statement => {\n      const dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.module.addPresentationalDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(\"\", statement.range);\n      clearDep.loc = Object.create(statement.loc);\n      clearDep.loc.index = -1;\n      parser.state.module.addPresentationalDependency(clearDep);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.lastHarmonyImportOrder, getAssertions(statement));\n      sideEffectDep.loc = Object.create(statement.loc);\n      sideEffectDep.loc.index = -1;\n      parser.state.current.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", (statement, expr) => {\n      const isFunctionDeclaration = expr.type === \"FunctionDeclaration\";\n      const comments = parser.getComments([statement.range[0], expr.range[0]]);\n      const dep = new HarmonyExportExpressionDependency(expr.range, statement.range, comments.map(c => {\n        switch (c.type) {\n          case \"Block\":\n            return `/*${c.value}*/`;\n\n          case \"Line\":\n            return `//${c.value}\\n`;\n        }\n\n        return \"\";\n      }).join(\"\"), expr.type.endsWith(\"Declaration\") && expr.id ? expr.id.name : isFunctionDeclaration ? {\n        id: expr.id ? expr.id.name : undefined,\n        range: [expr.range[0], expr.params.length > 0 ? expr.params[0].range[0] : expr.body.range[0]],\n        prefix: `${expr.async ? \"async \" : \"\"}function${expr.generator ? \"*\" : \"\"} `,\n        suffix: `(${expr.params.length > 0 ? \"\" : \") \"}`\n      } : undefined);\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      InnerGraph.addVariableUsage(parser, expr.type.endsWith(\"Declaration\") && expr.id ? expr.id.name : \"*default*\", \"default\");\n      return true;\n    });\n    parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, id, name, idx) => {\n      const settings = parser.getTagData(id, harmonySpecifierTag);\n      let dep;\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      harmonyNamedExports.add(name);\n      InnerGraph.addVariableUsage(parser, id, name);\n\n      if (settings) {\n        dep = new HarmonyExportImportedSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, name, harmonyNamedExports, null, exportPresenceMode, null, settings.assertions);\n      } else {\n        dep = new HarmonyExportSpecifierDependency(id, name);\n      }\n\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source, id, name, idx) => {\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      let harmonyStarExports = null;\n\n      if (name) {\n        harmonyNamedExports.add(name);\n      } else {\n        harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || new HarmonyStarExportsList();\n      }\n\n      const dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.lastHarmonyImportOrder, id ? [id] : [], name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), exportPresenceMode, harmonyStarExports);\n\n      if (harmonyStarExports) {\n        harmonyStarExports.push(dep);\n      }\n\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n  }\n\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"names":["InnerGraph","require","ConstDependency","HarmonyExportExpressionDependency","HarmonyExportHeaderDependency","HarmonyExportImportedSpecifierDependency","HarmonyExportSpecifierDependency","ExportPresenceModes","harmonySpecifierTag","getAssertions","HarmonyImportSideEffectDependency","HarmonyStarExportsList","module","exports","HarmonyExportDependencyParserPlugin","constructor","options","exportPresenceMode","reexportExportsPresence","undefined","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","apply","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","addPresentationalDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","current","addDependency","exportExpression","expr","isFunctionDeclaration","type","comments","getComments","map","c","value","join","endsWith","id","name","params","length","body","prefix","async","generator","suffix","addVariableUsage","exportSpecifier","idx","settings","getTagData","harmonyNamedExports","Set","add","sourceOrder","ids","assertions","exportImportSpecifier","harmonyStarExports","slice","push"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst {\n\tharmonySpecifierTag,\n\tgetAssertions\n} = require(\"./HarmonyImportDependencyParserPlugin\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst { HarmonyStarExportsList } = HarmonyExportImportedSpecifierDependency;\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.reexportExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.reexportExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t: options.strictExportPresence\n\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t: ExportPresenceModes.AUTO;\n\t}\n\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tgetAssertions(statement)\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst isFunctionDeclaration = expr.type === \"FunctionDeclaration\";\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\"),\n\t\t\t\t\texpr.type.endsWith(\"Declaration\") && expr.id\n\t\t\t\t\t\t? expr.id.name\n\t\t\t\t\t\t: isFunctionDeclaration\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tid: expr.id ? expr.id.name : undefined,\n\t\t\t\t\t\t\t\trange: [\n\t\t\t\t\t\t\t\t\texpr.range[0],\n\t\t\t\t\t\t\t\t\texpr.params.length > 0\n\t\t\t\t\t\t\t\t\t\t? expr.params[0].range[0]\n\t\t\t\t\t\t\t\t\t\t: expr.body.range[0]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tprefix: `${expr.async ? \"async \" : \"\"}function${\n\t\t\t\t\t\t\t\t\texpr.generator ? \"*\" : \"\"\n\t\t\t\t\t\t\t\t} `,\n\t\t\t\t\t\t\t\tsuffix: `(${expr.params.length > 0 ? \"\" : \") \"}`\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\tInnerGraph.addVariableUsage(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.type.endsWith(\"Declaration\") && expr.id\n\t\t\t\t\t\t? expr.id.name\n\t\t\t\t\t\t: \"*default*\",\n\t\t\t\t\t\"default\"\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst settings = parser.getTagData(id, harmonySpecifierTag);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tInnerGraph.addVariableUsage(parser, id, name);\n\t\t\t\tif (settings) {\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tsettings.ids,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(id, name);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || new HarmonyStarExportsList();\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tid ? [id] : [],\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tharmonyStarExports\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}