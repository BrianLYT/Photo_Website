{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\n\nconst Module = require(\"./Module\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"runtime\"]);\n\nclass RuntimeModule extends Module {\n  /**\n   * @param {string} name a readable name\n   * @param {number=} stage an optional stage\n   */\n  constructor(name) {\n    let stage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    super(\"runtime\");\n    this.name = name;\n    this.stage = stage;\n    this.buildMeta = {};\n    this.buildInfo = {};\n    /** @type {Compilation} */\n\n    this.compilation = undefined;\n    /** @type {Chunk} */\n\n    this.chunk = undefined;\n    /** @type {ChunkGraph} */\n\n    this.chunkGraph = undefined;\n    this.fullHash = false;\n    this.dependentHash = false;\n    /** @type {string} */\n\n    this._cachedGeneratedCode = undefined;\n  }\n  /**\n   * @param {Compilation} compilation the compilation\n   * @param {Chunk} chunk the chunk\n   * @param {ChunkGraph} chunkGraph the chunk graph\n   * @returns {void}\n   */\n\n\n  attach(compilation, chunk) {\n    let chunkGraph = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : compilation.chunkGraph;\n    this.compilation = compilation;\n    this.chunk = chunk;\n    this.chunkGraph = chunkGraph;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `webpack/runtime/${this.name}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `webpack/runtime/${this.name}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    return callback(null, false);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    // do nothing\n    // should not be called as runtime modules are added later to the compilation\n    callback();\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(this.name);\n    hash.update(`${this.stage}`);\n\n    try {\n      if (this.fullHash || this.dependentHash) {\n        // Do not use getGeneratedCode here, because i. e. compilation hash might be not\n        // ready at this point. We will cache it later instead.\n        hash.update(this.generate());\n      } else {\n        hash.update(this.getGeneratedCode());\n      }\n    } catch (err) {\n      hash.update(err.message);\n    }\n\n    super.updateHash(hash, context);\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(context) {\n    const sources = new Map();\n    const generatedCode = this.getGeneratedCode();\n\n    if (generatedCode) {\n      sources.set(\"runtime\", this.useSourceMap || this.useSimpleSourceMap ? new OriginalSource(generatedCode, this.identifier()) : new RawSource(generatedCode));\n    }\n\n    return {\n      sources,\n      runtimeRequirements: null\n    };\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    try {\n      const source = this.getGeneratedCode();\n      return source ? source.length : 0;\n    } catch (e) {\n      return 0;\n    }\n  }\n  /* istanbul ignore next */\n\n  /**\n   * @abstract\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const AbstractMethodError = require(\"./AbstractMethodError\");\n\n    throw new AbstractMethodError();\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  getGeneratedCode() {\n    if (this._cachedGeneratedCode) {\n      return this._cachedGeneratedCode;\n    }\n\n    return this._cachedGeneratedCode = this.generate();\n  }\n  /**\n   * @returns {boolean} true, if the runtime module should get it's own scope\n   */\n\n\n  shouldIsolate() {\n    return true;\n  }\n\n}\n/**\n * Runtime modules without any dependencies to other runtime modules\n */\n\n\nRuntimeModule.STAGE_NORMAL = 0;\n/**\n * Runtime modules with simple dependencies on other runtime modules\n */\n\nRuntimeModule.STAGE_BASIC = 5;\n/**\n * Runtime modules which attach to handlers of other runtime modules\n */\n\nRuntimeModule.STAGE_ATTACH = 10;\n/**\n * Runtime modules which trigger actions on bootstrap\n */\n\nRuntimeModule.STAGE_TRIGGER = 20;\nmodule.exports = RuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/RuntimeModule.js"],"names":["RawSource","require","OriginalSource","Module","TYPES","Set","RuntimeModule","constructor","name","stage","buildMeta","buildInfo","compilation","undefined","chunk","chunkGraph","fullHash","dependentHash","_cachedGeneratedCode","attach","identifier","readableIdentifier","requestShortener","needBuild","context","callback","build","options","resolver","fs","updateHash","hash","update","generate","getGeneratedCode","err","message","getSourceTypes","codeGeneration","sources","Map","generatedCode","set","useSourceMap","useSimpleSourceMap","runtimeRequirements","size","type","source","length","e","AbstractMethodError","shouldIsolate","STAGE_NORMAL","STAGE_BASIC","STAGE_ATTACH","STAGE_TRIGGER","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst OriginalSource = require(\"webpack-sources\").OriginalSource;\nconst Module = require(\"./Module\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"runtime\"]);\n\nclass RuntimeModule extends Module {\n\t/**\n\t * @param {string} name a readable name\n\t * @param {number=} stage an optional stage\n\t */\n\tconstructor(name, stage = 0) {\n\t\tsuper(\"runtime\");\n\t\tthis.name = name;\n\t\tthis.stage = stage;\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {};\n\t\t/** @type {Compilation} */\n\t\tthis.compilation = undefined;\n\t\t/** @type {Chunk} */\n\t\tthis.chunk = undefined;\n\t\t/** @type {ChunkGraph} */\n\t\tthis.chunkGraph = undefined;\n\t\tthis.fullHash = false;\n\t\tthis.dependentHash = false;\n\t\t/** @type {string} */\n\t\tthis._cachedGeneratedCode = undefined;\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @param {Chunk} chunk the chunk\n\t * @param {ChunkGraph} chunkGraph the chunk graph\n\t * @returns {void}\n\t */\n\tattach(compilation, chunk, chunkGraph = compilation.chunkGraph) {\n\t\tthis.compilation = compilation;\n\t\tthis.chunk = chunk;\n\t\tthis.chunkGraph = chunkGraph;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `webpack/runtime/${this.name}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `webpack/runtime/${this.name}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, false);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\t// do nothing\n\t\t// should not be called as runtime modules are added later to the compilation\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.name);\n\t\thash.update(`${this.stage}`);\n\t\ttry {\n\t\t\tif (this.fullHash || this.dependentHash) {\n\t\t\t\t// Do not use getGeneratedCode here, because i. e. compilation hash might be not\n\t\t\t\t// ready at this point. We will cache it later instead.\n\t\t\t\thash.update(this.generate());\n\t\t\t} else {\n\t\t\t\thash.update(this.getGeneratedCode());\n\t\t\t}\n\t\t} catch (err) {\n\t\t\thash.update(err.message);\n\t\t}\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration(context) {\n\t\tconst sources = new Map();\n\t\tconst generatedCode = this.getGeneratedCode();\n\t\tif (generatedCode) {\n\t\t\tsources.set(\n\t\t\t\t\"runtime\",\n\t\t\t\tthis.useSourceMap || this.useSimpleSourceMap\n\t\t\t\t\t? new OriginalSource(generatedCode, this.identifier())\n\t\t\t\t\t: new RawSource(generatedCode)\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tsources,\n\t\t\truntimeRequirements: null\n\t\t};\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\ttry {\n\t\t\tconst source = this.getGeneratedCode();\n\t\t\treturn source ? source.length : 0;\n\t\t} catch (e) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgetGeneratedCode() {\n\t\tif (this._cachedGeneratedCode) {\n\t\t\treturn this._cachedGeneratedCode;\n\t\t}\n\t\treturn (this._cachedGeneratedCode = this.generate());\n\t}\n\n\t/**\n\t * @returns {boolean} true, if the runtime module should get it's own scope\n\t */\n\tshouldIsolate() {\n\t\treturn true;\n\t}\n}\n\n/**\n * Runtime modules without any dependencies to other runtime modules\n */\nRuntimeModule.STAGE_NORMAL = 0;\n\n/**\n * Runtime modules with simple dependencies on other runtime modules\n */\nRuntimeModule.STAGE_BASIC = 5;\n\n/**\n * Runtime modules which attach to handlers of other runtime modules\n */\nRuntimeModule.STAGE_ATTACH = 10;\n\n/**\n * Runtime modules which trigger actions on bootstrap\n */\nRuntimeModule.STAGE_TRIGGER = 20;\n\nmodule.exports = RuntimeModule;\n"]},"metadata":{},"sourceType":"script"}