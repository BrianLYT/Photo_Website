{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource,\n  OriginalSource\n} = require(\"webpack-sources\");\n\nconst ExternalModule = require(\"../ExternalModule\");\n\nconst Template = require(\"../Template\");\n\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdCommentObject} LibraryCustomUmdCommentObject */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryName} LibraryName */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\n\n\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n/**\n * @param {string|undefined} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\n\n\nconst accessorAccess = function (base, accessor) {\n  let joinWith = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \", \";\n  const accessors = Array.isArray(accessor) ? accessor : [accessor];\n  return accessors.map((_, idx) => {\n    const a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n    if (idx === 0 && base === undefined) return `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n    return `${a} = ${a} || {}`;\n  }).join(joinWith);\n};\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdLibraryPluginName */\n\n/**\n * @typedef {Object} UmdLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean=} optionalAmdExternalAsGlobal\n */\n\n/**\n * @typedef {Object} UmdLibraryPluginParsed\n * @property {string | string[]} name\n * @property {LibraryCustomUmdObject} names\n * @property {string | LibraryCustomUmdCommentObject} auxiliaryComment\n * @property {boolean} namedDefine\n */\n\n/**\n * @typedef {UmdLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<UmdLibraryPluginParsed>}\n */\n\n\nclass UmdLibraryPlugin extends AbstractLibraryPlugin {\n  /**\n   * @param {UmdLibraryPluginOptions} options the plugin option\n   */\n  constructor(options) {\n    super({\n      pluginName: \"UmdLibraryPlugin\",\n      type: options.type\n    });\n    this.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n  }\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n\n\n  parseOptions(library) {\n    /** @type {LibraryName} */\n    let name;\n    /** @type {LibraryCustomUmdObject} */\n\n    let names;\n\n    if (typeof library.name === \"object\" && !Array.isArray(library.name)) {\n      name = library.name.root || library.name.amd || library.name.commonjs;\n      names = library.name;\n    } else {\n      name = library.name;\n      const singleName = Array.isArray(name) ? name[0] : name;\n      names = {\n        commonjs: singleName,\n        root: library.name,\n        amd: singleName\n      };\n    }\n\n    return {\n      name,\n      names,\n      auxiliaryComment: library.auxiliaryComment,\n      namedDefine: library.umdNamedDefine\n    };\n  }\n  /**\n   * @param {Source} source source\n   * @param {RenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n\n\n  render(source, _ref, _ref2) {\n    let {\n      chunkGraph,\n      runtimeTemplate,\n      chunk,\n      moduleGraph\n    } = _ref;\n    let {\n      options,\n      compilation\n    } = _ref2;\n    const modules = chunkGraph.getChunkModules(chunk).filter(m => m instanceof ExternalModule && (m.externalType === \"umd\" || m.externalType === \"umd2\"));\n    let externals =\n    /** @type {ExternalModule[]} */\n    modules;\n    /** @type {ExternalModule[]} */\n\n    const optionalExternals = [];\n    /** @type {ExternalModule[]} */\n\n    let requiredExternals = [];\n\n    if (this.optionalAmdExternalAsGlobal) {\n      for (const m of externals) {\n        if (m.isOptional(moduleGraph)) {\n          optionalExternals.push(m);\n        } else {\n          requiredExternals.push(m);\n        }\n      }\n\n      externals = requiredExternals.concat(optionalExternals);\n    } else {\n      requiredExternals = externals;\n    }\n\n    const replaceKeys = str => {\n      return compilation.getPath(str, {\n        chunk\n      });\n    };\n\n    const externalsDepsArray = modules => {\n      return `[${replaceKeys(modules.map(m => JSON.stringify(typeof m.request === \"object\" ? m.request.amd : m.request)).join(\", \"))}]`;\n    };\n\n    const externalsRootArray = modules => {\n      return replaceKeys(modules.map(m => {\n        let request = m.request;\n        if (typeof request === \"object\") request = request.root;\n        return `root${accessorToObjectAccess([].concat(request))}`;\n      }).join(\", \"));\n    };\n\n    const externalsRequireArray = type => {\n      return replaceKeys(externals.map(m => {\n        let expr;\n        let request = m.request;\n\n        if (typeof request === \"object\") {\n          request = request[type];\n        }\n\n        if (request === undefined) {\n          throw new Error(\"Missing external configuration for type:\" + type);\n        }\n\n        if (Array.isArray(request)) {\n          expr = `require(${JSON.stringify(request[0])})${accessorToObjectAccess(request.slice(1))}`;\n        } else {\n          expr = `require(${JSON.stringify(request)})`;\n        }\n\n        if (m.isOptional(moduleGraph)) {\n          expr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n        }\n\n        return expr;\n      }).join(\", \"));\n    };\n\n    const externalsArguments = modules => {\n      return modules.map(m => `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${chunkGraph.getModuleId(m)}`)}__`).join(\", \");\n    };\n\n    const libraryName = library => {\n      return JSON.stringify(replaceKeys([].concat(library).pop()));\n    };\n\n    let amdFactory;\n\n    if (optionalExternals.length > 0) {\n      const wrapperArguments = externalsArguments(requiredExternals);\n      const factoryArguments = requiredExternals.length > 0 ? externalsArguments(requiredExternals) + \", \" + externalsRootArray(optionalExternals) : externalsRootArray(optionalExternals);\n      amdFactory = `function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` + `\t\t\treturn factory(${factoryArguments});\\n` + \"\t\t}\";\n    } else {\n      amdFactory = \"factory\";\n    }\n\n    const {\n      auxiliaryComment,\n      namedDefine,\n      names\n    } = options;\n\n    const getAuxiliaryComment = type => {\n      if (auxiliaryComment) {\n        if (typeof auxiliaryComment === \"string\") return \"\\t//\" + auxiliaryComment + \"\\n\";\n        if (auxiliaryComment[type]) return \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n      }\n\n      return \"\";\n    };\n\n    return new ConcatSource(new OriginalSource(\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" + getAuxiliaryComment(\"commonjs2\") + \"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" + \"\t\tmodule.exports = factory(\" + externalsRequireArray(\"commonjs2\") + \");\\n\" + getAuxiliaryComment(\"amd\") + \"\telse if(typeof define === 'function' && define.amd)\\n\" + (requiredExternals.length > 0 ? names.amd && namedDefine === true ? \"\t\tdefine(\" + libraryName(names.amd) + \", \" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : \"\t\tdefine(\" + externalsDepsArray(requiredExternals) + \", \" + amdFactory + \");\\n\" : names.amd && namedDefine === true ? \"\t\tdefine(\" + libraryName(names.amd) + \", [], \" + amdFactory + \");\\n\" : \"\t\tdefine([], \" + amdFactory + \");\\n\") + (names.root || names.commonjs ? getAuxiliaryComment(\"commonjs\") + \"\telse if(typeof exports === 'object')\\n\" + \"\t\texports[\" + libraryName(names.commonjs || names.root) + \"] = factory(\" + externalsRequireArray(\"commonjs\") + \");\\n\" + getAuxiliaryComment(\"root\") + \"\telse\\n\" + \"\t\t\" + replaceKeys(accessorAccess(\"root\", names.root || names.commonjs)) + \" = factory(\" + externalsRootArray(externals) + \");\\n\" : \"\telse {\\n\" + (externals.length > 0 ? \"\t\tvar a = typeof exports === 'object' ? factory(\" + externalsRequireArray(\"commonjs\") + \") : factory(\" + externalsRootArray(externals) + \");\\n\" : \"\t\tvar a = factory();\\n\") + \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" + \"\t}\\n\") + `})(${runtimeTemplate.outputOptions.globalObject}, function(${externalsArguments(externals)}) {\\nreturn `, \"webpack/universalModuleDefinition\"), source, \";\\n})\");\n  }\n\n}\n\nmodule.exports = UmdLibraryPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/library/UmdLibraryPlugin.js"],"names":["ConcatSource","OriginalSource","require","ExternalModule","Template","AbstractLibraryPlugin","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","joinWith","accessors","Array","isArray","_","idx","slice","length","undefined","UmdLibraryPlugin","constructor","options","pluginName","type","optionalAmdExternalAsGlobal","parseOptions","library","name","names","root","amd","commonjs","singleName","auxiliaryComment","namedDefine","umdNamedDefine","render","source","chunkGraph","runtimeTemplate","chunk","moduleGraph","compilation","modules","getChunkModules","filter","m","externalType","externals","optionalExternals","requiredExternals","isOptional","push","concat","replaceKeys","str","getPath","externalsDepsArray","request","externalsRootArray","externalsRequireArray","expr","Error","externalsArguments","toIdentifier","getModuleId","libraryName","pop","amdFactory","wrapperArguments","factoryArguments","getAuxiliaryComment","outputOptions","globalObject","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, OriginalSource } = require(\"webpack-sources\");\nconst ExternalModule = require(\"../ExternalModule\");\nconst Template = require(\"../Template\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdCommentObject} LibraryCustomUmdCommentObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryName} LibraryName */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string|undefined} base the path prefix\n * @param {string|string[]} accessor the accessor\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, joinWith = \", \") => {\n\tconst accessors = Array.isArray(accessor) ? accessor : [accessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined)\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\n/** @typedef {string | string[] | LibraryCustomUmdObject} UmdLibraryPluginName */\n\n/**\n * @typedef {Object} UmdLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean=} optionalAmdExternalAsGlobal\n */\n\n/**\n * @typedef {Object} UmdLibraryPluginParsed\n * @property {string | string[]} name\n * @property {LibraryCustomUmdObject} names\n * @property {string | LibraryCustomUmdCommentObject} auxiliaryComment\n * @property {boolean} namedDefine\n */\n\n/**\n * @typedef {UmdLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<UmdLibraryPluginParsed>}\n */\nclass UmdLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * @param {UmdLibraryPluginOptions} options the plugin option\n\t */\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tpluginName: \"UmdLibraryPlugin\",\n\t\t\ttype: options.type\n\t\t});\n\n\t\tthis.optionalAmdExternalAsGlobal = options.optionalAmdExternalAsGlobal;\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\t/** @type {LibraryName} */\n\t\tlet name;\n\t\t/** @type {LibraryCustomUmdObject} */\n\t\tlet names;\n\t\tif (typeof library.name === \"object\" && !Array.isArray(library.name)) {\n\t\t\tname = library.name.root || library.name.amd || library.name.commonjs;\n\t\t\tnames = library.name;\n\t\t} else {\n\t\t\tname = library.name;\n\t\t\tconst singleName = Array.isArray(name) ? name[0] : name;\n\t\t\tnames = {\n\t\t\t\tcommonjs: singleName,\n\t\t\t\troot: library.name,\n\t\t\t\tamd: singleName\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tname,\n\t\t\tnames,\n\t\t\tauxiliaryComment: library.auxiliaryComment,\n\t\t\tnamedDefine: library.umdNamedDefine\n\t\t};\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trender(\n\t\tsource,\n\t\t{ chunkGraph, runtimeTemplate, chunk, moduleGraph },\n\t\t{ options, compilation }\n\t) {\n\t\tconst modules = chunkGraph\n\t\t\t.getChunkModules(chunk)\n\t\t\t.filter(\n\t\t\t\tm =>\n\t\t\t\t\tm instanceof ExternalModule &&\n\t\t\t\t\t(m.externalType === \"umd\" || m.externalType === \"umd2\")\n\t\t\t);\n\t\tlet externals = /** @type {ExternalModule[]} */ (modules);\n\t\t/** @type {ExternalModule[]} */\n\t\tconst optionalExternals = [];\n\t\t/** @type {ExternalModule[]} */\n\t\tlet requiredExternals = [];\n\t\tif (this.optionalAmdExternalAsGlobal) {\n\t\t\tfor (const m of externals) {\n\t\t\t\tif (m.isOptional(moduleGraph)) {\n\t\t\t\t\toptionalExternals.push(m);\n\t\t\t\t} else {\n\t\t\t\t\trequiredExternals.push(m);\n\t\t\t\t}\n\t\t\t}\n\t\t\texternals = requiredExternals.concat(optionalExternals);\n\t\t} else {\n\t\t\trequiredExternals = externals;\n\t\t}\n\n\t\tconst replaceKeys = str => {\n\t\t\treturn compilation.getPath(str, {\n\t\t\t\tchunk\n\t\t\t});\n\t\t};\n\n\t\tconst externalsDepsArray = modules => {\n\t\t\treturn `[${replaceKeys(\n\t\t\t\tmodules\n\t\t\t\t\t.map(m =>\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\ttypeof m.request === \"object\" ? m.request.amd : m.request\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.join(\", \")\n\t\t\t)}]`;\n\t\t};\n\n\t\tconst externalsRootArray = modules => {\n\t\t\treturn replaceKeys(\n\t\t\t\tmodules\n\t\t\t\t\t.map(m => {\n\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\tif (typeof request === \"object\") request = request.root;\n\t\t\t\t\t\treturn `root${accessorToObjectAccess([].concat(request))}`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\", \")\n\t\t\t);\n\t\t};\n\n\t\tconst externalsRequireArray = type => {\n\t\t\treturn replaceKeys(\n\t\t\t\texternals\n\t\t\t\t\t.map(m => {\n\t\t\t\t\t\tlet expr;\n\t\t\t\t\t\tlet request = m.request;\n\t\t\t\t\t\tif (typeof request === \"object\") {\n\t\t\t\t\t\t\trequest = request[type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (request === undefined) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"Missing external configuration for type:\" + type\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Array.isArray(request)) {\n\t\t\t\t\t\t\texpr = `require(${JSON.stringify(\n\t\t\t\t\t\t\t\trequest[0]\n\t\t\t\t\t\t\t)})${accessorToObjectAccess(request.slice(1))}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texpr = `require(${JSON.stringify(request)})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.isOptional(moduleGraph)) {\n\t\t\t\t\t\t\texpr = `(function webpackLoadOptionalExternalModule() { try { return ${expr}; } catch(e) {} }())`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn expr;\n\t\t\t\t\t})\n\t\t\t\t\t.join(\", \")\n\t\t\t);\n\t\t};\n\n\t\tconst externalsArguments = modules => {\n\t\t\treturn modules\n\t\t\t\t.map(\n\t\t\t\t\tm =>\n\t\t\t\t\t\t`__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t\t\t\t\t\t`${chunkGraph.getModuleId(m)}`\n\t\t\t\t\t\t)}__`\n\t\t\t\t)\n\t\t\t\t.join(\", \");\n\t\t};\n\n\t\tconst libraryName = library => {\n\t\t\treturn JSON.stringify(replaceKeys([].concat(library).pop()));\n\t\t};\n\n\t\tlet amdFactory;\n\t\tif (optionalExternals.length > 0) {\n\t\t\tconst wrapperArguments = externalsArguments(requiredExternals);\n\t\t\tconst factoryArguments =\n\t\t\t\trequiredExternals.length > 0\n\t\t\t\t\t? externalsArguments(requiredExternals) +\n\t\t\t\t\t  \", \" +\n\t\t\t\t\t  externalsRootArray(optionalExternals)\n\t\t\t\t\t: externalsRootArray(optionalExternals);\n\t\t\tamdFactory =\n\t\t\t\t`function webpackLoadOptionalExternalModuleAmd(${wrapperArguments}) {\\n` +\n\t\t\t\t`\t\t\treturn factory(${factoryArguments});\\n` +\n\t\t\t\t\"\t\t}\";\n\t\t} else {\n\t\t\tamdFactory = \"factory\";\n\t\t}\n\n\t\tconst { auxiliaryComment, namedDefine, names } = options;\n\n\t\tconst getAuxiliaryComment = type => {\n\t\t\tif (auxiliaryComment) {\n\t\t\t\tif (typeof auxiliaryComment === \"string\")\n\t\t\t\t\treturn \"\\t//\" + auxiliaryComment + \"\\n\";\n\t\t\t\tif (auxiliaryComment[type])\n\t\t\t\t\treturn \"\\t//\" + auxiliaryComment[type] + \"\\n\";\n\t\t\t}\n\t\t\treturn \"\";\n\t\t};\n\n\t\treturn new ConcatSource(\n\t\t\tnew OriginalSource(\n\t\t\t\t\"(function webpackUniversalModuleDefinition(root, factory) {\\n\" +\n\t\t\t\t\tgetAuxiliaryComment(\"commonjs2\") +\n\t\t\t\t\t\"\tif(typeof exports === 'object' && typeof module === 'object')\\n\" +\n\t\t\t\t\t\"\t\tmodule.exports = factory(\" +\n\t\t\t\t\texternalsRequireArray(\"commonjs2\") +\n\t\t\t\t\t\");\\n\" +\n\t\t\t\t\tgetAuxiliaryComment(\"amd\") +\n\t\t\t\t\t\"\telse if(typeof define === 'function' && define.amd)\\n\" +\n\t\t\t\t\t(requiredExternals.length > 0\n\t\t\t\t\t\t? names.amd && namedDefine === true\n\t\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t\t  libraryName(names.amd) +\n\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t: \"\t\tdefine(\" +\n\t\t\t\t\t\t\t  externalsDepsArray(requiredExternals) +\n\t\t\t\t\t\t\t  \", \" +\n\t\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t: names.amd && namedDefine === true\n\t\t\t\t\t\t? \"\t\tdefine(\" +\n\t\t\t\t\t\t  libraryName(names.amd) +\n\t\t\t\t\t\t  \", [], \" +\n\t\t\t\t\t\t  amdFactory +\n\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t: \"\t\tdefine([], \" + amdFactory + \");\\n\") +\n\t\t\t\t\t(names.root || names.commonjs\n\t\t\t\t\t\t? getAuxiliaryComment(\"commonjs\") +\n\t\t\t\t\t\t  \"\telse if(typeof exports === 'object')\\n\" +\n\t\t\t\t\t\t  \"\t\texports[\" +\n\t\t\t\t\t\t  libraryName(names.commonjs || names.root) +\n\t\t\t\t\t\t  \"] = factory(\" +\n\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t  \");\\n\" +\n\t\t\t\t\t\t  getAuxiliaryComment(\"root\") +\n\t\t\t\t\t\t  \"\telse\\n\" +\n\t\t\t\t\t\t  \"\t\t\" +\n\t\t\t\t\t\t  replaceKeys(\n\t\t\t\t\t\t\t\taccessorAccess(\"root\", names.root || names.commonjs)\n\t\t\t\t\t\t  ) +\n\t\t\t\t\t\t  \" = factory(\" +\n\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t: \"\telse {\\n\" +\n\t\t\t\t\t\t  (externals.length > 0\n\t\t\t\t\t\t\t\t? \"\t\tvar a = typeof exports === 'object' ? factory(\" +\n\t\t\t\t\t\t\t\t  externalsRequireArray(\"commonjs\") +\n\t\t\t\t\t\t\t\t  \") : factory(\" +\n\t\t\t\t\t\t\t\t  externalsRootArray(externals) +\n\t\t\t\t\t\t\t\t  \");\\n\"\n\t\t\t\t\t\t\t\t: \"\t\tvar a = factory();\\n\") +\n\t\t\t\t\t\t  \"\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\\n\" +\n\t\t\t\t\t\t  \"\t}\\n\") +\n\t\t\t\t\t`})(${\n\t\t\t\t\t\truntimeTemplate.outputOptions.globalObject\n\t\t\t\t\t}, function(${externalsArguments(externals)}) {\\nreturn `,\n\t\t\t\t\"webpack/universalModuleDefinition\"\n\t\t\t),\n\t\t\tsource,\n\t\t\t\";\\n})\"\n\t\t);\n\t}\n}\n\nmodule.exports = UmdLibraryPlugin;\n"]},"metadata":{},"sourceType":"script"}