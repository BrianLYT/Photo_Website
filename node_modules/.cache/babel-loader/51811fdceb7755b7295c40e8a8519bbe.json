{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst Module = require(\"../Module\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"share-init\"]);\n\nclass ProvideSharedModule extends Module {\n  /**\n   * @param {string} shareScope shared scope name\n   * @param {string} name shared key\n   * @param {string | false} version version\n   * @param {string} request request to the provided module\n   * @param {boolean} eager include the module in sync way\n   */\n  constructor(shareScope, name, version, request, eager) {\n    super(\"provide-module\");\n    this._shareScope = shareScope;\n    this._name = name;\n    this._version = version;\n    this._request = request;\n    this._eager = eager;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `provide module (${this._shareScope}) ${this._name}@${this._version} = ${this._request}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `provide shared module (${this._shareScope}) ${this._name}@${this._version} = ${requestShortener.shorten(this._request)}`;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/sharing/provide/${this._shareScope}/${this._name}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      strict: true\n    };\n    this.clearDependenciesAndBlocks();\n    const dep = new ProvideForSharedDependency(this._request);\n\n    if (this._eager) {\n      this.addDependency(dep);\n    } else {\n      const block = new AsyncDependenciesBlock({});\n      block.addDependency(dep);\n      this.addBlock(block);\n    }\n\n    callback();\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 42;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref;\n    const runtimeRequirements = new Set([RuntimeGlobals.initializeSharing]);\n    const code = `register(${JSON.stringify(this._name)}, ${JSON.stringify(this._version || \"0\")}, ${this._eager ? runtimeTemplate.syncModuleFactory({\n      dependency: this.dependencies[0],\n      chunkGraph,\n      request: this._request,\n      runtimeRequirements\n    }) : runtimeTemplate.asyncModuleFactory({\n      block: this.blocks[0],\n      chunkGraph,\n      request: this._request,\n      runtimeRequirements\n    })}${this._eager ? \", 1\" : \"\"});`;\n    const sources = new Map();\n    const data = new Map();\n    data.set(\"share-init\", [{\n      shareScope: this._shareScope,\n      initStage: 10,\n      init: code\n    }]);\n    return {\n      sources,\n      data,\n      runtimeRequirements\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this._shareScope);\n    write(this._name);\n    write(this._version);\n    write(this._request);\n    write(this._eager);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new ProvideSharedModule(read(), read(), read(), read(), read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(ProvideSharedModule, \"webpack/lib/sharing/ProvideSharedModule\");\nmodule.exports = ProvideSharedModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/sharing/ProvideSharedModule.js"],"names":["AsyncDependenciesBlock","require","Module","RuntimeGlobals","makeSerializable","ProvideForSharedDependency","TYPES","Set","ProvideSharedModule","constructor","shareScope","name","version","request","eager","_shareScope","_name","_version","_request","_eager","identifier","readableIdentifier","requestShortener","shorten","libIdent","options","layer","needBuild","context","callback","buildInfo","build","compilation","resolver","fs","buildMeta","strict","clearDependenciesAndBlocks","dep","addDependency","block","addBlock","size","type","getSourceTypes","codeGeneration","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","initializeSharing","code","JSON","stringify","syncModuleFactory","dependency","dependencies","asyncModuleFactory","blocks","sources","Map","data","set","initStage","init","serialize","write","deserialize","read","obj","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"share-init\"]);\n\nclass ProvideSharedModule extends Module {\n\t/**\n\t * @param {string} shareScope shared scope name\n\t * @param {string} name shared key\n\t * @param {string | false} version version\n\t * @param {string} request request to the provided module\n\t * @param {boolean} eager include the module in sync way\n\t */\n\tconstructor(shareScope, name, version, request, eager) {\n\t\tsuper(\"provide-module\");\n\t\tthis._shareScope = shareScope;\n\t\tthis._name = name;\n\t\tthis._version = version;\n\t\tthis._request = request;\n\t\tthis._eager = eager;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `provide module (${this._shareScope}) ${this._name}@${this._version} = ${this._request}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `provide shared module (${this._shareScope}) ${this._name}@${\n\t\t\tthis._version\n\t\t} = ${requestShortener.shorten(this._request)}`;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.layer ? `(${this.layer})/` : \"\"}webpack/sharing/provide/${\n\t\t\tthis._shareScope\n\t\t}/${this._name}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true\n\t\t};\n\n\t\tthis.clearDependenciesAndBlocks();\n\t\tconst dep = new ProvideForSharedDependency(this._request);\n\t\tif (this._eager) {\n\t\t\tthis.addDependency(dep);\n\t\t} else {\n\t\t\tconst block = new AsyncDependenciesBlock({});\n\t\t\tblock.addDependency(dep);\n\t\t\tthis.addBlock(block);\n\t\t}\n\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst runtimeRequirements = new Set([RuntimeGlobals.initializeSharing]);\n\t\tconst code = `register(${JSON.stringify(this._name)}, ${JSON.stringify(\n\t\t\tthis._version || \"0\"\n\t\t)}, ${\n\t\t\tthis._eager\n\t\t\t\t? runtimeTemplate.syncModuleFactory({\n\t\t\t\t\t\tdependency: this.dependencies[0],\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest: this._request,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t  })\n\t\t\t\t: runtimeTemplate.asyncModuleFactory({\n\t\t\t\t\t\tblock: this.blocks[0],\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest: this._request,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t  })\n\t\t}${this._eager ? \", 1\" : \"\"});`;\n\t\tconst sources = new Map();\n\t\tconst data = new Map();\n\t\tdata.set(\"share-init\", [\n\t\t\t{\n\t\t\t\tshareScope: this._shareScope,\n\t\t\t\tinitStage: 10,\n\t\t\t\tinit: code\n\t\t\t}\n\t\t]);\n\t\treturn { sources, data, runtimeRequirements };\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this._shareScope);\n\t\twrite(this._name);\n\t\twrite(this._version);\n\t\twrite(this._request);\n\t\twrite(this._eager);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new ProvideSharedModule(read(), read(), read(), read(), read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(\n\tProvideSharedModule,\n\t\"webpack/lib/sharing/ProvideSharedModule\"\n);\n\nmodule.exports = ProvideSharedModule;\n"]},"metadata":{},"sourceType":"script"}