{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ResultPlugin {\n  /**\n   * @param {ResolveStepHook} source source\n   */\n  constructor(source) {\n    this.source = source;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    this.source.tapAsync(\"ResultPlugin\", (request, resolverContext, callback) => {\n      const obj = { ...request\n      };\n      if (resolverContext.log) resolverContext.log(\"reporting result \" + obj.path);\n      resolver.hooks.result.callAsync(obj, resolverContext, err => {\n        if (err) return callback(err);\n\n        if (typeof resolverContext.yield === \"function\") {\n          resolverContext.yield(obj);\n          callback(null, null);\n        } else {\n          callback(null, obj);\n        }\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/enhanced-resolve/lib/ResultPlugin.js"],"names":["module","exports","ResultPlugin","constructor","source","apply","resolver","tapAsync","request","resolverContext","callback","obj","log","path","hooks","result","callAsync","err","yield"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,YAAN,CAAmB;AACnC;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,MAAD,EAAS;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,SAAKF,MAAL,CAAYG,QAAZ,CACC,cADD,EAEC,CAACC,OAAD,EAAUC,eAAV,EAA2BC,QAA3B,KAAwC;AACvC,YAAMC,GAAG,GAAG,EAAE,GAAGH;AAAL,OAAZ;AACA,UAAIC,eAAe,CAACG,GAApB,EACCH,eAAe,CAACG,GAAhB,CAAoB,sBAAsBD,GAAG,CAACE,IAA9C;AACDP,MAAAA,QAAQ,CAACQ,KAAT,CAAeC,MAAf,CAAsBC,SAAtB,CAAgCL,GAAhC,EAAqCF,eAArC,EAAsDQ,GAAG,IAAI;AAC5D,YAAIA,GAAJ,EAAS,OAAOP,QAAQ,CAACO,GAAD,CAAf;;AACT,YAAI,OAAOR,eAAe,CAACS,KAAvB,KAAiC,UAArC,EAAiD;AAChDT,UAAAA,eAAe,CAACS,KAAhB,CAAsBP,GAAtB;AACAD,UAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACA,SAHD,MAGO;AACNA,UAAAA,QAAQ,CAAC,IAAD,EAAOC,GAAP,CAAR;AACA;AACD,OARD;AASA,KAfF;AAiBA;;AA9BkC,CAApC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ResultPlugin {\n\t/**\n\t * @param {ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tthis.source.tapAsync(\n\t\t\t\"ResultPlugin\",\n\t\t\t(request, resolverContext, callback) => {\n\t\t\t\tconst obj = { ...request };\n\t\t\t\tif (resolverContext.log)\n\t\t\t\t\tresolverContext.log(\"reporting result \" + obj.path);\n\t\t\t\tresolver.hooks.result.callAsync(obj, resolverContext, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (typeof resolverContext.yield === \"function\") {\n\t\t\t\t\t\tresolverContext.yield(obj);\n\t\t\t\t\t\tcallback(null, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}