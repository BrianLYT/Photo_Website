{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ImportDependency = require(\"./ImportDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n\nclass ImportWeakDependency extends ImportDependency {\n  /**\n   * @param {string} request the request\n   * @param {[number, number]} range expression range\n   * @param {string[][]=} referencedExports list of referenced exports\n   */\n  constructor(request, range, referencedExports) {\n    super(request, range, referencedExports);\n    this.weak = true;\n  }\n\n  get type() {\n    return \"import() weak\";\n  }\n\n}\n\nmakeSerializable(ImportWeakDependency, \"webpack/lib/dependencies/ImportWeakDependency\");\nImportWeakDependency.Template = class ImportDependencyTemplate extends ImportDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      module,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {ImportWeakDependency} */\n    dependency;\n    const content = runtimeTemplate.moduleNamespacePromise({\n      chunkGraph,\n      module: moduleGraph.getModule(dep),\n      request: dep.request,\n      strict: module.buildMeta.strictHarmonyModule,\n      message: \"import() weak\",\n      weak: true,\n      runtimeRequirements\n    });\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n\n};\nmodule.exports = ImportWeakDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ImportWeakDependency.js"],"names":["makeSerializable","require","ImportDependency","ImportWeakDependency","constructor","request","range","referencedExports","weak","type","Template","ImportDependencyTemplate","apply","dependency","source","runtimeTemplate","module","moduleGraph","chunkGraph","runtimeRequirements","dep","content","moduleNamespacePromise","getModule","strict","buildMeta","strictHarmonyModule","message","replace","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAME,oBAAN,SAAmCD,gBAAnC,CAAoD;AACnD;AACD;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,iBAAjB,EAAoC;AAC9C,UAAMF,OAAN,EAAeC,KAAf,EAAsBC,iBAAtB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,eAAP;AACA;;AAbkD;;AAgBpDT,gBAAgB,CACfG,oBADe,EAEf,+CAFe,CAAhB;AAKAA,oBAAoB,CAACO,QAArB,GAAgC,MAAMC,wBAAN,SAC/BT,gBAAgB,CAACQ,QADc,CAE9B;AACD;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,KAAK,CACJC,UADI,EAEJC,MAFI,QAIH;AAAA,QADD;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,MAAnB;AAA2BC,MAAAA,WAA3B;AAAwCC,MAAAA,UAAxC;AAAoDC,MAAAA;AAApD,KACC;AACD,UAAMC,GAAG;AAAG;AAAqCP,IAAAA,UAAjD;AACA,UAAMQ,OAAO,GAAGN,eAAe,CAACO,sBAAhB,CAAuC;AACtDJ,MAAAA,UADsD;AAEtDF,MAAAA,MAAM,EAAEC,WAAW,CAACM,SAAZ,CAAsBH,GAAtB,CAF8C;AAGtDf,MAAAA,OAAO,EAAEe,GAAG,CAACf,OAHyC;AAItDmB,MAAAA,MAAM,EAAER,MAAM,CAACS,SAAP,CAAiBC,mBAJ6B;AAKtDC,MAAAA,OAAO,EAAE,eAL6C;AAMtDnB,MAAAA,IAAI,EAAE,IANgD;AAOtDW,MAAAA;AAPsD,KAAvC,CAAhB;AAUAL,IAAAA,MAAM,CAACc,OAAP,CAAeR,GAAG,CAACd,KAAJ,CAAU,CAAV,CAAf,EAA6Bc,GAAG,CAACd,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+Ce,OAA/C;AACA;;AAxBA,CAFF;AA6BAL,MAAM,CAACa,OAAP,GAAiB1B,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ImportDependency = require(\"./ImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\nclass ImportWeakDependency extends ImportDependency {\n\t/**\n\t * @param {string} request the request\n\t * @param {[number, number]} range expression range\n\t * @param {string[][]=} referencedExports list of referenced exports\n\t */\n\tconstructor(request, range, referencedExports) {\n\t\tsuper(request, range, referencedExports);\n\t\tthis.weak = true;\n\t}\n\n\tget type() {\n\t\treturn \"import() weak\";\n\t}\n}\n\nmakeSerializable(\n\tImportWeakDependency,\n\t\"webpack/lib/dependencies/ImportWeakDependency\"\n);\n\nImportWeakDependency.Template = class ImportDependencyTemplate extends (\n\tImportDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtimeTemplate, module, moduleGraph, chunkGraph, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {ImportWeakDependency} */ (dependency);\n\t\tconst content = runtimeTemplate.moduleNamespacePromise({\n\t\t\tchunkGraph,\n\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\trequest: dep.request,\n\t\t\tstrict: module.buildMeta.strictHarmonyModule,\n\t\t\tmessage: \"import() weak\",\n\t\t\tweak: true,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n};\n\nmodule.exports = ImportWeakDependency;\n"]},"metadata":{},"sourceType":"script"}