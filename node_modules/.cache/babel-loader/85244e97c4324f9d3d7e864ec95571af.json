{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\n\nconst Template = require(\"../Template\");\n\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\n\nconst {\n  evaluateToIdentifier,\n  toConstantDependency,\n  evaluateToString,\n  evaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst memoize = require(\"../util/memoize\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\n\nconst getCriticalDependencyWarning = memoize(() => require(\"./CriticalDependencyWarning\"));\n\nclass ImportMetaPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"ImportMetaPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n\n      /**\n       * @param {NormalModule} module module\n       * @returns {string} file url\n       */\n      const getUrl = module => {\n        return pathToFileURL(module.resource).toString();\n      };\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n\n\n      const parserHandler = (parser, _ref2) => {\n        let {\n          importMeta\n        } = _ref2;\n\n        if (importMeta === false) {\n          const {\n            importMetaName\n          } = compilation.outputOptions;\n          if (importMetaName === \"import.meta\") return;\n          parser.hooks.expression.for(\"import.meta\").tap(\"ImportMetaPlugin\", metaProperty => {\n            const dep = new ConstDependency(importMetaName, metaProperty.range);\n            dep.loc = metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          return;\n        } /// import.meta direct ///\n\n\n        parser.hooks.typeof.for(\"import.meta\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.expression.for(\"import.meta\").tap(\"ImportMetaPlugin\", metaProperty => {\n          const CriticalDependencyWarning = getCriticalDependencyWarning();\n          parser.state.module.addWarning(new ModuleDependencyWarning(parser.state.module, new CriticalDependencyWarning(\"Accessing import.meta directly is unsupported (only property access is supported)\"), metaProperty.loc));\n          const dep = new ConstDependency(`${parser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"}({})`, metaProperty.range);\n          dep.loc = metaProperty.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta\").tap(\"ImportMetaPlugin\", evaluateToString(\"object\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\"ImportMetaPlugin\", evaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)); /// import.meta.url ///\n\n        parser.hooks.typeof.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"string\")));\n        parser.hooks.expression.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", expr => {\n          const dep = new ConstDependency(JSON.stringify(getUrl(parser.state.module)), expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", expr => {\n          return new BasicEvaluatedExpression().setString(getUrl(parser.state.module)).setRange(expr.range);\n        }); /// import.meta.webpack ///\n\n        const webpackVersion = parseInt(require(\"../../package.json\").version, 10);\n        parser.hooks.typeof.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"number\")));\n        parser.hooks.expression.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(webpackVersion)));\n        parser.hooks.evaluateTypeof.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", evaluateToString(\"number\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", evaluateToNumber(webpackVersion)); /// Unknown properties ///\n\n        parser.hooks.unhandledExpressionMemberChain.for(\"import.meta\").tap(\"ImportMetaPlugin\", (expr, members) => {\n          const dep = new ConstDependency(`${Template.toNormalComment(\"unsupported import.meta.\" + members.join(\".\"))} undefined${propertyAccess(members, 1)}`, expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluate.for(\"MemberExpression\").tap(\"ImportMetaPlugin\", expression => {\n          const expr =\n          /** @type {MemberExpression} */\n          expression;\n\n          if (expr.object.type === \"MetaProperty\" && expr.object.meta.name === \"import\" && expr.object.property.name === \"meta\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\n            return new BasicEvaluatedExpression().setUndefined().setRange(expr.range);\n          }\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportMetaPlugin\", parserHandler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportMetaPlugin\", parserHandler);\n    });\n  }\n\n}\n\nmodule.exports = ImportMetaPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ImportMetaPlugin.js"],"names":["pathToFileURL","require","ModuleDependencyWarning","Template","BasicEvaluatedExpression","evaluateToIdentifier","toConstantDependency","evaluateToString","evaluateToNumber","memoize","propertyAccess","ConstDependency","getCriticalDependencyWarning","ImportMetaPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","getUrl","module","resource","toString","parserHandler","parser","importMeta","importMetaName","outputOptions","expression","for","metaProperty","dep","range","loc","state","addPresentationalDependency","typeof","JSON","stringify","CriticalDependencyWarning","addWarning","isAsiPosition","evaluateTypeof","evaluateIdentifier","expr","setString","setRange","webpackVersion","parseInt","version","unhandledExpressionMemberChain","members","toNormalComment","join","evaluate","object","type","meta","name","property","computed","setUndefined","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\ttoConstantDependency,\n\tevaluateToString,\n\tevaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst getCriticalDependencyWarning = memoize(() =>\n\trequire(\"./CriticalDependencyWarning\")\n);\n\nclass ImportMetaPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ImportMetaPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {string} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => {\n\t\t\t\t\treturn pathToFileURL(module.resource).toString();\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserHandler = (parser, { importMeta }) => {\n\t\t\t\t\tif (importMeta === false) {\n\t\t\t\t\t\tconst { importMetaName } = compilation.outputOptions;\n\t\t\t\t\t\tif (importMetaName === \"import.meta\") return;\n\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", metaProperty => {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\timportMetaName,\n\t\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/// import.meta direct ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", metaProperty => {\n\t\t\t\t\t\t\tconst CriticalDependencyWarning = getCriticalDependencyWarning();\n\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\tnew ModuleDependencyWarning(\n\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\t\t\t\t\t\"Accessing import.meta directly is unsupported (only property access is supported)\"\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tmetaProperty.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`${parser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"}({})`,\n\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\n\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\tevaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)\n\t\t\t\t\t);\n\n\t\t\t\t\t/// import.meta.url ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"string\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expr => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\tJSON.stringify(getUrl(parser.state.module)),\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"string\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expr => {\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(getUrl(parser.state.module))\n\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t/// import.meta.webpack ///\n\t\t\t\t\tconst webpackVersion = parseInt(\n\t\t\t\t\t\trequire(\"../../package.json\").version,\n\t\t\t\t\t\t10\n\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"number\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(webpackVersion))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"number\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToNumber(webpackVersion));\n\n\t\t\t\t\t/// Unknown properties ///\n\t\t\t\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", (expr, members) => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t\t\t\"unsupported import.meta.\" + members.join(\".\")\n\t\t\t\t\t\t\t\t)} undefined${propertyAccess(members, 1)}`,\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluate\n\t\t\t\t\t\t.for(\"MemberExpression\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expression => {\n\t\t\t\t\t\t\tconst expr = /** @type {MemberExpression} */ (expression);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.object.type === \"MetaProperty\" &&\n\t\t\t\t\t\t\t\texpr.object.meta.name === \"import\" &&\n\t\t\t\t\t\t\t\texpr.object.property.name === \"meta\" &&\n\t\t\t\t\t\t\t\texpr.property.type ===\n\t\t\t\t\t\t\t\t\t(expr.computed ? \"Literal\" : \"Identifier\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setUndefined()\n\t\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportMetaPlugin\", parserHandler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportMetaPlugin\", parserHandler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaPlugin;\n"]},"metadata":{},"sourceType":"script"}