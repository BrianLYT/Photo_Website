{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass WebAssemblyExportImportedDependency extends ModuleDependency {\n  constructor(exportName, request, name, valueType) {\n    super(request);\n    /** @type {string} */\n\n    this.exportName = exportName;\n    /** @type {string} */\n\n    this.name = name;\n    /** @type {string} */\n\n    this.valueType = valueType;\n  }\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n\n\n  couldAffectReferencingModule() {\n    return Dependency.TRANSITIVE;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    return [[this.name]];\n  }\n\n  get type() {\n    return \"wasm export import\";\n  }\n\n  get category() {\n    return \"wasm\";\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.exportName);\n    write(this.name);\n    write(this.valueType);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.exportName = read();\n    this.name = read();\n    this.valueType = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(WebAssemblyExportImportedDependency, \"webpack/lib/dependencies/WebAssemblyExportImportedDependency\");\nmodule.exports = WebAssemblyExportImportedDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/WebAssemblyExportImportedDependency.js"],"names":["Dependency","require","makeSerializable","ModuleDependency","WebAssemblyExportImportedDependency","constructor","exportName","request","name","valueType","couldAffectReferencingModule","TRANSITIVE","getReferencedExports","moduleGraph","runtime","type","category","serialize","context","write","deserialize","read","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAMG,mCAAN,SAAkDD,gBAAlD,CAAmE;AAClEE,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,SAA5B,EAAuC;AACjD,UAAMF,OAAN;AACA;;AACA,SAAKD,UAAL,GAAkBA,UAAlB;AACA;;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,4BAA4B,GAAG;AAC9B,WAAOV,UAAU,CAACW,UAAlB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,oBAAoB,CAACC,WAAD,EAAcC,OAAd,EAAuB;AAC1C,WAAO,CAAC,CAAC,KAAKN,IAAN,CAAD,CAAP;AACA;;AAEO,MAAJO,IAAI,GAAG;AACV,WAAO,oBAAP;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,MAAP;AACA;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AAEAC,IAAAA,KAAK,CAAC,KAAKb,UAAN,CAAL;AACAa,IAAAA,KAAK,CAAC,KAAKX,IAAN,CAAL;AACAW,IAAAA,KAAK,CAAC,KAAKV,SAAN,CAAL;AAEA,UAAMQ,SAAN,CAAgBC,OAAhB;AACA;;AAEDE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AAEA,SAAKZ,UAAL,GAAkBe,IAAI,EAAtB;AACA,SAAKb,IAAL,GAAYa,IAAI,EAAhB;AACA,SAAKZ,SAAL,GAAiBY,IAAI,EAArB;AAEA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AAtDiE;;AAyDnEhB,gBAAgB,CACfE,mCADe,EAEf,8DAFe,CAAhB;AAKAkB,MAAM,CAACC,OAAP,GAAiBnB,mCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WebAssemblyExportImportedDependency extends ModuleDependency {\n\tconstructor(exportName, request, name, valueType) {\n\t\tsuper(request);\n\t\t/** @type {string} */\n\t\tthis.exportName = exportName;\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @type {string} */\n\t\tthis.valueType = valueType;\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn Dependency.TRANSITIVE;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn [[this.name]];\n\t}\n\n\tget type() {\n\t\treturn \"wasm export import\";\n\t}\n\n\tget category() {\n\t\treturn \"wasm\";\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.exportName);\n\t\twrite(this.name);\n\t\twrite(this.valueType);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.exportName = read();\n\t\tthis.name = read();\n\t\tthis.valueType = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tWebAssemblyExportImportedDependency,\n\t\"webpack/lib/dependencies/WebAssemblyExportImportedDependency\"\n);\n\nmodule.exports = WebAssemblyExportImportedDependency;\n"]},"metadata":{},"sourceType":"script"}