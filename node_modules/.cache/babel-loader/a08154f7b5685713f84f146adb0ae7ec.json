{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst CssLocalIdentifierDependency = require(\"./CssLocalIdentifierDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass CssSelfLocalIdentifierDependency extends CssLocalIdentifierDependency {\n  /**\n   * @param {string} name name\n   * @param {[number, number]} range range\n   * @param {string=} prefix prefix\n   * @param {Set<string>=} declaredSet set of declared names (will only be active when in declared set)\n   */\n  constructor(name, range) {\n    let prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let declaredSet = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    super(name, range, prefix);\n    this.declaredSet = declaredSet;\n  }\n\n  get type() {\n    return \"css self local identifier\";\n  }\n\n  get category() {\n    return \"self\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `self`;\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    if (this.declaredSet && !this.declaredSet.has(this.name)) return;\n    return super.getExports(moduleGraph);\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    if (this.declaredSet && !this.declaredSet.has(this.name)) return Dependency.NO_EXPORTS_REFERENCED;\n    return [[this.name]];\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.declaredSet);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.declaredSet = read();\n    super.deserialize(context);\n  }\n\n}\n\nCssSelfLocalIdentifierDependency.Template = class CssSelfLocalIdentifierDependencyTemplate extends CssLocalIdentifierDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {CssSelfLocalIdentifierDependency} */\n    dependency;\n    if (dep.declaredSet && !dep.declaredSet.has(dep.name)) return;\n    super.apply(dependency, source, templateContext);\n  }\n\n};\nmakeSerializable(CssSelfLocalIdentifierDependency, \"webpack/lib/dependencies/CssSelfLocalIdentifierDependency\");\nmodule.exports = CssSelfLocalIdentifierDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/CssSelfLocalIdentifierDependency.js"],"names":["Dependency","require","makeSerializable","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","constructor","name","range","prefix","declaredSet","undefined","type","category","getResourceIdentifier","getExports","moduleGraph","has","getReferencedExports","runtime","NO_EXPORTS_REFERENCED","serialize","context","write","deserialize","read","Template","CssSelfLocalIdentifierDependencyTemplate","apply","dependency","source","templateContext","dep","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,4BAA4B,GAAGF,OAAO,CAAC,gCAAD,CAA5C;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMG,gCAAN,SAA+CD,4BAA/C,CAA4E;AAC3E;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAoD;AAAA,QAAtCC,MAAsC,uEAA7B,EAA6B;AAAA,QAAzBC,WAAyB,uEAAXC,SAAW;AAC9D,UAAMJ,IAAN,EAAYC,KAAZ,EAAmBC,MAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA;;AAEO,MAAJE,IAAI,GAAG;AACV,WAAO,2BAAP;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,MAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,qBAAqB,GAAG;AACvB,WAAQ,MAAR;AACA;AACD;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,CAACC,WAAD,EAAc;AACvB,QAAI,KAAKN,WAAL,IAAoB,CAAC,KAAKA,WAAL,CAAiBO,GAAjB,CAAqB,KAAKV,IAA1B,CAAzB,EAA0D;AAC1D,WAAO,MAAMQ,UAAN,CAAiBC,WAAjB,CAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCE,EAAAA,oBAAoB,CAACF,WAAD,EAAcG,OAAd,EAAuB;AAC1C,QAAI,KAAKT,WAAL,IAAoB,CAAC,KAAKA,WAAL,CAAiBO,GAAjB,CAAqB,KAAKV,IAA1B,CAAzB,EACC,OAAON,UAAU,CAACmB,qBAAlB;AACD,WAAO,CAAC,CAAC,KAAKb,IAAN,CAAD,CAAP;AACA;;AAEDc,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AACAC,IAAAA,KAAK,CAAC,KAAKb,WAAN,CAAL;AACA,UAAMW,SAAN,CAAgBC,OAAhB;AACA;;AAEDE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AACA,SAAKZ,WAAL,GAAmBe,IAAI,EAAvB;AACA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AA1D0E;;AA6D5EjB,gCAAgC,CAACqB,QAAjC,GAA4C,MAAMC,wCAAN,SAC3CvB,4BAA4B,CAACsB,QADc,CAE1C;AACD;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,EAAqBC,eAArB,EAAsC;AAC1C,UAAMC,GAAG;AAAG;AAAiDH,IAAAA,UAA7D;AACA,QAAIG,GAAG,CAACtB,WAAJ,IAAmB,CAACsB,GAAG,CAACtB,WAAJ,CAAgBO,GAAhB,CAAoBe,GAAG,CAACzB,IAAxB,CAAxB,EAAuD;AACvD,UAAMqB,KAAN,CAAYC,UAAZ,EAAwBC,MAAxB,EAAgCC,eAAhC;AACA;;AAXA,CAFF;AAgBA5B,gBAAgB,CACfE,gCADe,EAEf,2DAFe,CAAhB;AAKA4B,MAAM,CAACC,OAAP,GAAiB7B,gCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst CssLocalIdentifierDependency = require(\"./CssLocalIdentifierDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").CssDependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssSelfLocalIdentifierDependency extends CssLocalIdentifierDependency {\n\t/**\n\t * @param {string} name name\n\t * @param {[number, number]} range range\n\t * @param {string=} prefix prefix\n\t * @param {Set<string>=} declaredSet set of declared names (will only be active when in declared set)\n\t */\n\tconstructor(name, range, prefix = \"\", declaredSet = undefined) {\n\t\tsuper(name, range, prefix);\n\t\tthis.declaredSet = declaredSet;\n\t}\n\n\tget type() {\n\t\treturn \"css self local identifier\";\n\t}\n\n\tget category() {\n\t\treturn \"self\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `self`;\n\t}\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\tif (this.declaredSet && !this.declaredSet.has(this.name)) return;\n\t\treturn super.getExports(moduleGraph);\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tif (this.declaredSet && !this.declaredSet.has(this.name))\n\t\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\t\treturn [[this.name]];\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.declaredSet);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.declaredSet = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nCssSelfLocalIdentifierDependency.Template = class CssSelfLocalIdentifierDependencyTemplate extends (\n\tCssLocalIdentifierDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {CssSelfLocalIdentifierDependency} */ (dependency);\n\t\tif (dep.declaredSet && !dep.declaredSet.has(dep.name)) return;\n\t\tsuper.apply(dependency, source, templateContext);\n\t}\n};\n\nmakeSerializable(\n\tCssSelfLocalIdentifierDependency,\n\t\"webpack/lib/dependencies/CssSelfLocalIdentifierDependency\"\n);\n\nmodule.exports = CssSelfLocalIdentifierDependency;\n"]},"metadata":{},"sourceType":"script"}