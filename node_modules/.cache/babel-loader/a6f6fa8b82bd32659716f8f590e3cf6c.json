{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  LogType\n} = require(\"./Logger\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerConsole\n * @property {function(): void} clear\n * @property {function(): void} trace\n * @property {(...args: any[]) => void} info\n * @property {(...args: any[]) => void} log\n * @property {(...args: any[]) => void} warn\n * @property {(...args: any[]) => void} error\n * @property {(...args: any[]) => void=} debug\n * @property {(...args: any[]) => void=} group\n * @property {(...args: any[]) => void=} groupCollapsed\n * @property {(...args: any[]) => void=} groupEnd\n * @property {(...args: any[]) => void=} status\n * @property {(...args: any[]) => void=} profile\n * @property {(...args: any[]) => void=} profileEnd\n * @property {(...args: any[]) => void=} logTime\n */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n * @property {FilterTypes|boolean} debug filter for debug logging\n * @property {LoggerConsole} console the console to log to\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter function\n */\n\n\nconst filterToFunction = item => {\n  if (typeof item === \"string\") {\n    const regExp = new RegExp(`[\\\\\\\\/]${item.replace( // eslint-disable-next-line no-useless-escape\n    /[-[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\")}([\\\\\\\\/]|$|!|\\\\?)`);\n    return ident => regExp.test(ident);\n  }\n\n  if (item && typeof item === \"object\" && typeof item.test === \"function\") {\n    return ident => item.test(ident);\n  }\n\n  if (typeof item === \"function\") {\n    return item;\n  }\n\n  if (typeof item === \"boolean\") {\n    return () => item;\n  }\n};\n/**\n * @enum {number}\n */\n\n\nconst LogLevel = {\n  none: 6,\n  false: 6,\n  error: 5,\n  warn: 4,\n  info: 3,\n  log: 2,\n  true: 2,\n  verbose: 1\n};\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\n\nmodule.exports = _ref => {\n  let {\n    level = \"info\",\n    debug = false,\n    console\n  } = _ref;\n  const debugFilters = typeof debug === \"boolean\" ? [() => debug] :\n  /** @type {FilterItemTypes[]} */\n  [].concat(debug).map(filterToFunction);\n  /** @type {number} */\n\n  const loglevel = LogLevel[`${level}`] || 0;\n  /**\n   * @param {string} name name of the logger\n   * @param {LogTypeEnum} type type of the log entry\n   * @param {any[]} args arguments of the log entry\n   * @returns {void}\n   */\n\n  const logger = (name, type, args) => {\n    const labeledArgs = () => {\n      if (Array.isArray(args)) {\n        if (args.length > 0 && typeof args[0] === \"string\") {\n          return [`[${name}] ${args[0]}`, ...args.slice(1)];\n        } else {\n          return [`[${name}]`, ...args];\n        }\n      } else {\n        return [];\n      }\n    };\n\n    const debug = debugFilters.some(f => f(name));\n\n    switch (type) {\n      case LogType.debug:\n        if (!debug) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\n        if (typeof console.debug === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.debug(...labeledArgs());\n        } else {\n          console.log(...labeledArgs());\n        }\n\n        break;\n\n      case LogType.log:\n        if (!debug && loglevel > LogLevel.log) return;\n        console.log(...labeledArgs());\n        break;\n\n      case LogType.info:\n        if (!debug && loglevel > LogLevel.info) return;\n        console.info(...labeledArgs());\n        break;\n\n      case LogType.warn:\n        if (!debug && loglevel > LogLevel.warn) return;\n        console.warn(...labeledArgs());\n        break;\n\n      case LogType.error:\n        if (!debug && loglevel > LogLevel.error) return;\n        console.error(...labeledArgs());\n        break;\n\n      case LogType.trace:\n        if (!debug) return;\n        console.trace();\n        break;\n\n      case LogType.groupCollapsed:\n        if (!debug && loglevel > LogLevel.log) return;\n\n        if (!debug && loglevel > LogLevel.verbose) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.groupCollapsed === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.groupCollapsed(...labeledArgs());\n          } else {\n            console.log(...labeledArgs());\n          }\n\n          break;\n        }\n\n      // falls through\n\n      case LogType.group:\n        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\n        if (typeof console.group === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.group(...labeledArgs());\n        } else {\n          console.log(...labeledArgs());\n        }\n\n        break;\n\n      case LogType.groupEnd:\n        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\n        if (typeof console.groupEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.groupEnd();\n        }\n\n        break;\n\n      case LogType.time:\n        {\n          if (!debug && loglevel > LogLevel.log) return;\n          const ms = args[1] * 1000 + args[2] / 1000000;\n          const msg = `[${name}] ${args[0]}: ${ms} ms`;\n\n          if (typeof console.logTime === \"function\") {\n            console.logTime(msg);\n          } else {\n            console.log(msg);\n          }\n\n          break;\n        }\n\n      case LogType.profile:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profile === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profile(...labeledArgs());\n        }\n\n        break;\n\n      case LogType.profileEnd:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        if (typeof console.profileEnd === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.profileEnd(...labeledArgs());\n        }\n\n        break;\n\n      case LogType.clear:\n        if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins\n\n        if (typeof console.clear === \"function\") {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          console.clear();\n        }\n\n        break;\n\n      case LogType.status:\n        if (!debug && loglevel > LogLevel.info) return;\n\n        if (typeof console.status === \"function\") {\n          if (args.length === 0) {\n            console.status();\n          } else {\n            console.status(...labeledArgs());\n          }\n        } else {\n          if (args.length !== 0) {\n            console.info(...labeledArgs());\n          }\n        }\n\n        break;\n\n      default:\n        throw new Error(`Unexpected LogType ${type}`);\n    }\n  };\n\n  return logger;\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/logging/createConsoleLogger.js"],"names":["LogType","require","filterToFunction","item","regExp","RegExp","replace","ident","test","LogLevel","none","false","error","warn","info","log","true","verbose","module","exports","level","debug","console","debugFilters","concat","map","loglevel","logger","name","type","args","labeledArgs","Array","isArray","length","slice","some","f","trace","groupCollapsed","group","groupEnd","time","ms","msg","logTime","profile","profileEnd","clear","status","Error"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { LogType } = require(\"./Logger\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterItemTypes} FilterItemTypes */\n/** @typedef {import(\"../../declarations/WebpackOptions\").FilterTypes} FilterTypes */\n/** @typedef {import(\"./Logger\").LogTypeEnum} LogTypeEnum */\n\n/** @typedef {function(string): boolean} FilterFunction */\n\n/**\n * @typedef {Object} LoggerConsole\n * @property {function(): void} clear\n * @property {function(): void} trace\n * @property {(...args: any[]) => void} info\n * @property {(...args: any[]) => void} log\n * @property {(...args: any[]) => void} warn\n * @property {(...args: any[]) => void} error\n * @property {(...args: any[]) => void=} debug\n * @property {(...args: any[]) => void=} group\n * @property {(...args: any[]) => void=} groupCollapsed\n * @property {(...args: any[]) => void=} groupEnd\n * @property {(...args: any[]) => void=} status\n * @property {(...args: any[]) => void=} profile\n * @property {(...args: any[]) => void=} profileEnd\n * @property {(...args: any[]) => void=} logTime\n */\n\n/**\n * @typedef {Object} LoggerOptions\n * @property {false|true|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} level loglevel\n * @property {FilterTypes|boolean} debug filter for debug logging\n * @property {LoggerConsole} console the console to log to\n */\n\n/**\n * @param {FilterItemTypes} item an input item\n * @returns {FilterFunction} filter function\n */\nconst filterToFunction = item => {\n\tif (typeof item === \"string\") {\n\t\tconst regExp = new RegExp(\n\t\t\t`[\\\\\\\\/]${item.replace(\n\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t/[-[\\]{}()*+?.\\\\^$|]/g,\n\t\t\t\t\"\\\\$&\"\n\t\t\t)}([\\\\\\\\/]|$|!|\\\\?)`\n\t\t);\n\t\treturn ident => regExp.test(ident);\n\t}\n\tif (item && typeof item === \"object\" && typeof item.test === \"function\") {\n\t\treturn ident => item.test(ident);\n\t}\n\tif (typeof item === \"function\") {\n\t\treturn item;\n\t}\n\tif (typeof item === \"boolean\") {\n\t\treturn () => item;\n\t}\n};\n\n/**\n * @enum {number}\n */\nconst LogLevel = {\n\tnone: 6,\n\tfalse: 6,\n\terror: 5,\n\twarn: 4,\n\tinfo: 3,\n\tlog: 2,\n\ttrue: 2,\n\tverbose: 1\n};\n\n/**\n * @param {LoggerOptions} options options object\n * @returns {function(string, LogTypeEnum, any[]): void} logging function\n */\nmodule.exports = ({ level = \"info\", debug = false, console }) => {\n\tconst debugFilters =\n\t\ttypeof debug === \"boolean\"\n\t\t\t? [() => debug]\n\t\t\t: /** @type {FilterItemTypes[]} */ ([])\n\t\t\t\t\t.concat(debug)\n\t\t\t\t\t.map(filterToFunction);\n\t/** @type {number} */\n\tconst loglevel = LogLevel[`${level}`] || 0;\n\n\t/**\n\t * @param {string} name name of the logger\n\t * @param {LogTypeEnum} type type of the log entry\n\t * @param {any[]} args arguments of the log entry\n\t * @returns {void}\n\t */\n\tconst logger = (name, type, args) => {\n\t\tconst labeledArgs = () => {\n\t\t\tif (Array.isArray(args)) {\n\t\t\t\tif (args.length > 0 && typeof args[0] === \"string\") {\n\t\t\t\t\treturn [`[${name}] ${args[0]}`, ...args.slice(1)];\n\t\t\t\t} else {\n\t\t\t\t\treturn [`[${name}]`, ...args];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t\tconst debug = debugFilters.some(f => f(name));\n\t\tswitch (type) {\n\t\t\tcase LogType.debug:\n\t\t\t\tif (!debug) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.debug === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.debug(...labeledArgs());\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.log:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\tbreak;\n\t\t\tcase LogType.info:\n\t\t\t\tif (!debug && loglevel > LogLevel.info) return;\n\t\t\t\tconsole.info(...labeledArgs());\n\t\t\t\tbreak;\n\t\t\tcase LogType.warn:\n\t\t\t\tif (!debug && loglevel > LogLevel.warn) return;\n\t\t\t\tconsole.warn(...labeledArgs());\n\t\t\t\tbreak;\n\t\t\tcase LogType.error:\n\t\t\t\tif (!debug && loglevel > LogLevel.error) return;\n\t\t\t\tconsole.error(...labeledArgs());\n\t\t\t\tbreak;\n\t\t\tcase LogType.trace:\n\t\t\t\tif (!debug) return;\n\t\t\t\tconsole.trace();\n\t\t\t\tbreak;\n\t\t\tcase LogType.groupCollapsed:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\tif (!debug && loglevel > LogLevel.verbose) {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tif (typeof console.groupCollapsed === \"function\") {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tconsole.groupCollapsed(...labeledArgs());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t// falls through\n\t\t\tcase LogType.group:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.group === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.group(...labeledArgs());\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.groupEnd:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.groupEnd === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.groupEnd();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.time: {\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\tconst ms = args[1] * 1000 + args[2] / 1000000;\n\t\t\t\tconst msg = `[${name}] ${args[0]}: ${ms} ms`;\n\t\t\t\tif (typeof console.logTime === \"function\") {\n\t\t\t\t\tconsole.logTime(msg);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LogType.profile:\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.profile(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.profileEnd:\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.profileEnd(...labeledArgs());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.clear:\n\t\t\t\tif (!debug && loglevel > LogLevel.log) return;\n\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\tif (typeof console.clear === \"function\") {\n\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\tconsole.clear();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase LogType.status:\n\t\t\t\tif (!debug && loglevel > LogLevel.info) return;\n\t\t\t\tif (typeof console.status === \"function\") {\n\t\t\t\t\tif (args.length === 0) {\n\t\t\t\t\t\tconsole.status();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.status(...labeledArgs());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (args.length !== 0) {\n\t\t\t\t\t\tconsole.info(...labeledArgs());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unexpected LogType ${type}`);\n\t\t}\n\t};\n\treturn logger;\n};\n"]},"metadata":{},"sourceType":"script"}