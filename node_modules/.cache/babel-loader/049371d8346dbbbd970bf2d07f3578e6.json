{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Module = require(\"./Module\");\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\n\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./LibManifestPlugin\").ManifestModuleData} ManifestModuleData */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./Module\").SourceContext} SourceContext */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"javascript\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module, RuntimeGlobals.require]);\n\nclass DelegatedModule extends Module {\n  constructor(sourceRequest, data, type, userRequest, originalRequest) {\n    super(\"javascript/dynamic\", null); // Info from Factory\n\n    this.sourceRequest = sourceRequest;\n    this.request = data.id;\n    this.delegationType = type;\n    this.userRequest = userRequest;\n    this.originalRequest = originalRequest;\n    /** @type {ManifestModuleData} */\n\n    this.delegateData = data; // Build info\n\n    this.delegatedSourceDependency = undefined;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return typeof this.originalRequest === \"string\" ? this.originalRequest : this.originalRequest.libIdent(options);\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `delegated ${JSON.stringify(this.request)} from ${this.sourceRequest}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `delegated ${this.userRequest} from ${this.sourceRequest}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = { ...this.delegateData.buildMeta\n    };\n    this.buildInfo = {};\n    this.dependencies.length = 0;\n    this.delegatedSourceDependency = new DelegatedSourceDependency(this.sourceRequest);\n    this.addDependency(this.delegatedSourceDependency);\n    this.addDependency(new StaticExportsDependency(this.delegateData.exports || true, false));\n    callback();\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref;\n    const dep =\n    /** @type {DelegatedSourceDependency} */\n    this.dependencies[0];\n    const sourceModule = moduleGraph.getModule(dep);\n    let str;\n\n    if (!sourceModule) {\n      str = runtimeTemplate.throwMissingModuleErrorBlock({\n        request: this.sourceRequest\n      });\n    } else {\n      str = `module.exports = (${runtimeTemplate.moduleExports({\n        module: sourceModule,\n        chunkGraph,\n        request: dep.request,\n        runtimeRequirements: new Set()\n      })})`;\n\n      switch (this.delegationType) {\n        case \"require\":\n          str += `(${JSON.stringify(this.request)})`;\n          break;\n\n        case \"object\":\n          str += `[${JSON.stringify(this.request)}]`;\n          break;\n      }\n\n      str += \";\";\n    }\n\n    const sources = new Map();\n\n    if (this.useSourceMap || this.useSimpleSourceMap) {\n      sources.set(\"javascript\", new OriginalSource(str, this.identifier()));\n    } else {\n      sources.set(\"javascript\", new RawSource(str));\n    }\n\n    return {\n      sources,\n      runtimeRequirements: RUNTIME_REQUIREMENTS\n    };\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 42;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(this.delegationType);\n    hash.update(JSON.stringify(this.request));\n    super.updateHash(hash, context);\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context; // constructor\n\n    write(this.sourceRequest);\n    write(this.delegateData);\n    write(this.delegationType);\n    write(this.userRequest);\n    write(this.originalRequest);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new DelegatedModule(read(), // sourceRequest\n    read(), // delegateData\n    read(), // delegationType\n    read(), // userRequest\n    read() // originalRequest\n    );\n    obj.deserialize(context);\n    return obj;\n  }\n  /**\n   * Assuming this module is in the cache. Update the (cached) module with\n   * the fresh module from the factory. Usually updates internal references\n   * and properties.\n   * @param {Module} module fresh module\n   * @returns {void}\n   */\n\n\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m =\n    /** @type {DelegatedModule} */\n    module;\n    this.delegationType = m.delegationType;\n    this.userRequest = m.userRequest;\n    this.originalRequest = m.originalRequest;\n    this.delegateData = m.delegateData;\n  }\n  /**\n   * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n   */\n\n\n  cleanupForCache() {\n    super.cleanupForCache();\n    this.delegateData = undefined;\n  }\n\n}\n\nmakeSerializable(DelegatedModule, \"webpack/lib/DelegatedModule\");\nmodule.exports = DelegatedModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/DelegatedModule.js"],"names":["OriginalSource","RawSource","require","Module","RuntimeGlobals","DelegatedSourceDependency","StaticExportsDependency","makeSerializable","TYPES","Set","RUNTIME_REQUIREMENTS","module","DelegatedModule","constructor","sourceRequest","data","type","userRequest","originalRequest","request","id","delegationType","delegateData","delegatedSourceDependency","undefined","getSourceTypes","libIdent","options","identifier","JSON","stringify","readableIdentifier","requestShortener","needBuild","context","callback","buildMeta","build","compilation","resolver","fs","buildInfo","dependencies","length","addDependency","exports","codeGeneration","runtimeTemplate","moduleGraph","chunkGraph","dep","sourceModule","getModule","str","throwMissingModuleErrorBlock","moduleExports","runtimeRequirements","sources","Map","useSourceMap","useSimpleSourceMap","set","size","updateHash","hash","update","serialize","write","deserialize","read","obj","updateCacheModule","m","cleanupForCache"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./LibManifestPlugin\").ManifestModuleData} ManifestModuleData */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./Module\").SourceContext} SourceContext */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"javascript\"]);\nconst RUNTIME_REQUIREMENTS = new Set([\n\tRuntimeGlobals.module,\n\tRuntimeGlobals.require\n]);\n\nclass DelegatedModule extends Module {\n\tconstructor(sourceRequest, data, type, userRequest, originalRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\tthis.sourceRequest = sourceRequest;\n\t\tthis.request = data.id;\n\t\tthis.delegationType = type;\n\t\tthis.userRequest = userRequest;\n\t\tthis.originalRequest = originalRequest;\n\t\t/** @type {ManifestModuleData} */\n\t\tthis.delegateData = data;\n\n\t\t// Build info\n\t\tthis.delegatedSourceDependency = undefined;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn typeof this.originalRequest === \"string\"\n\t\t\t? this.originalRequest\n\t\t\t: this.originalRequest.libIdent(options);\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `delegated ${JSON.stringify(this.request)} from ${\n\t\t\tthis.sourceRequest\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `delegated ${this.userRequest} from ${this.sourceRequest}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = { ...this.delegateData.buildMeta };\n\t\tthis.buildInfo = {};\n\t\tthis.dependencies.length = 0;\n\t\tthis.delegatedSourceDependency = new DelegatedSourceDependency(\n\t\t\tthis.sourceRequest\n\t\t);\n\t\tthis.addDependency(this.delegatedSourceDependency);\n\t\tthis.addDependency(\n\t\t\tnew StaticExportsDependency(this.delegateData.exports || true, false)\n\t\t);\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst dep = /** @type {DelegatedSourceDependency} */ (this.dependencies[0]);\n\t\tconst sourceModule = moduleGraph.getModule(dep);\n\t\tlet str;\n\n\t\tif (!sourceModule) {\n\t\t\tstr = runtimeTemplate.throwMissingModuleErrorBlock({\n\t\t\t\trequest: this.sourceRequest\n\t\t\t});\n\t\t} else {\n\t\t\tstr = `module.exports = (${runtimeTemplate.moduleExports({\n\t\t\t\tmodule: sourceModule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest: dep.request,\n\t\t\t\truntimeRequirements: new Set()\n\t\t\t})})`;\n\n\t\t\tswitch (this.delegationType) {\n\t\t\t\tcase \"require\":\n\t\t\t\t\tstr += `(${JSON.stringify(this.request)})`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"object\":\n\t\t\t\t\tstr += `[${JSON.stringify(this.request)}]`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tstr += \";\";\n\t\t}\n\n\t\tconst sources = new Map();\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\tsources.set(\"javascript\", new OriginalSource(str, this.identifier()));\n\t\t} else {\n\t\t\tsources.set(\"javascript\", new RawSource(str));\n\t\t}\n\n\t\treturn {\n\t\t\tsources,\n\t\t\truntimeRequirements: RUNTIME_REQUIREMENTS\n\t\t};\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.delegationType);\n\t\thash.update(JSON.stringify(this.request));\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\t// constructor\n\t\twrite(this.sourceRequest);\n\t\twrite(this.delegateData);\n\t\twrite(this.delegationType);\n\t\twrite(this.userRequest);\n\t\twrite(this.originalRequest);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new DelegatedModule(\n\t\t\tread(), // sourceRequest\n\t\t\tread(), // delegateData\n\t\t\tread(), // delegationType\n\t\t\tread(), // userRequest\n\t\t\tread() // originalRequest\n\t\t);\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Update the (cached) module with\n\t * the fresh module from the factory. Usually updates internal references\n\t * and properties.\n\t * @param {Module} module fresh module\n\t * @returns {void}\n\t */\n\tupdateCacheModule(module) {\n\t\tsuper.updateCacheModule(module);\n\t\tconst m = /** @type {DelegatedModule} */ (module);\n\t\tthis.delegationType = m.delegationType;\n\t\tthis.userRequest = m.userRequest;\n\t\tthis.originalRequest = m.originalRequest;\n\t\tthis.delegateData = m.delegateData;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n\t */\n\tcleanupForCache() {\n\t\tsuper.cleanupForCache();\n\t\tthis.delegateData = undefined;\n\t}\n}\n\nmakeSerializable(DelegatedModule, \"webpack/lib/DelegatedModule\");\n\nmodule.exports = DelegatedModule;\n"]},"metadata":{},"sourceType":"script"}