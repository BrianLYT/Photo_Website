{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst Template = require(\"../Template\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass WebpackIsIncludedDependency extends ModuleDependency {\n  constructor(request, range) {\n    super(request);\n    this.weak = true;\n    this.range = range;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    // This doesn't use any export\n    return Dependency.NO_EXPORTS_REFERENCED;\n  }\n\n  get type() {\n    return \"__webpack_is_included__\";\n  }\n\n}\n\nmakeSerializable(WebpackIsIncludedDependency, \"webpack/lib/dependencies/WebpackIsIncludedDependency\");\nWebpackIsIncludedDependency.Template = class WebpackIsIncludedDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      chunkGraph,\n      moduleGraph\n    } = _ref;\n    const dep =\n    /** @type {WebpackIsIncludedDependency} */\n    dependency;\n    const connection = moduleGraph.getConnection(dep);\n    const included = connection ? chunkGraph.getNumberOfModuleChunks(connection.module) > 0 : false;\n    const comment = runtimeTemplate.outputOptions.pathinfo ? Template.toComment(`__webpack_is_included__ ${runtimeTemplate.requestShortener.shorten(dep.request)}`) : \"\";\n    source.replace(dep.range[0], dep.range[1] - 1, `${comment}${JSON.stringify(included)}`);\n  }\n\n};\nmodule.exports = WebpackIsIncludedDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/WebpackIsIncludedDependency.js"],"names":["Dependency","require","Template","makeSerializable","ModuleDependency","WebpackIsIncludedDependency","constructor","request","range","weak","getReferencedExports","moduleGraph","runtime","NO_EXPORTS_REFERENCED","type","WebpackIsIncludedDependencyTemplate","apply","dependency","source","runtimeTemplate","chunkGraph","dep","connection","getConnection","included","getNumberOfModuleChunks","module","comment","outputOptions","pathinfo","toComment","requestShortener","shorten","replace","JSON","stringify","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMI,2BAAN,SAA0CD,gBAA1C,CAA2D;AAC1DE,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC3B,UAAMD,OAAN;AAEA,SAAKE,IAAL,GAAY,IAAZ;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCE,EAAAA,oBAAoB,CAACC,WAAD,EAAcC,OAAd,EAAuB;AAC1C;AACA,WAAOZ,UAAU,CAACa,qBAAlB;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,yBAAP;AACA;;AArByD;;AAwB3DX,gBAAgB,CACfE,2BADe,EAEf,sDAFe,CAAhB;AAKAA,2BAA2B,CAACH,QAA5B,GAAuC,MAAMa,mCAAN,SACtCX,gBAAgB,CAACF,QADqB,CAErC;AACD;AACD;AACA;AACA;AACA;AACA;AACCc,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,QAAmE;AAAA,QAA9C;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,UAAnB;AAA+BT,MAAAA;AAA/B,KAA8C;AACvE,UAAMU,GAAG;AAAG;AAA4CJ,IAAAA,UAAxD;AACA,UAAMK,UAAU,GAAGX,WAAW,CAACY,aAAZ,CAA0BF,GAA1B,CAAnB;AACA,UAAMG,QAAQ,GAAGF,UAAU,GACxBF,UAAU,CAACK,uBAAX,CAAmCH,UAAU,CAACI,MAA9C,IAAwD,CADhC,GAExB,KAFH;AAGA,UAAMC,OAAO,GAAGR,eAAe,CAACS,aAAhB,CAA8BC,QAA9B,GACb3B,QAAQ,CAAC4B,SAAT,CACC,2BAA0BX,eAAe,CAACY,gBAAhB,CAAiCC,OAAjC,CAC1BX,GAAG,CAACd,OADsB,CAEzB,EAHF,CADa,GAMb,EANH;AAQAW,IAAAA,MAAM,CAACe,OAAP,CACCZ,GAAG,CAACb,KAAJ,CAAU,CAAV,CADD,EAECa,GAAG,CAACb,KAAJ,CAAU,CAAV,IAAe,CAFhB,EAGE,GAAEmB,OAAQ,GAAEO,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAyB,EAHvC;AAKA;;AA1BA,CAFF;AA+BAE,MAAM,CAACU,OAAP,GAAiB/B,2BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst Template = require(\"../Template\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WebpackIsIncludedDependency extends ModuleDependency {\n\tconstructor(request, range) {\n\t\tsuper(request);\n\n\t\tthis.weak = true;\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\t// This doesn't use any export\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\t}\n\n\tget type() {\n\t\treturn \"__webpack_is_included__\";\n\t}\n}\n\nmakeSerializable(\n\tWebpackIsIncludedDependency,\n\t\"webpack/lib/dependencies/WebpackIsIncludedDependency\"\n);\n\nWebpackIsIncludedDependency.Template = class WebpackIsIncludedDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, { runtimeTemplate, chunkGraph, moduleGraph }) {\n\t\tconst dep = /** @type {WebpackIsIncludedDependency} */ (dependency);\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\tconst included = connection\n\t\t\t? chunkGraph.getNumberOfModuleChunks(connection.module) > 0\n\t\t\t: false;\n\t\tconst comment = runtimeTemplate.outputOptions.pathinfo\n\t\t\t? Template.toComment(\n\t\t\t\t\t`__webpack_is_included__ ${runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\tdep.request\n\t\t\t\t\t)}`\n\t\t\t  )\n\t\t\t: \"\";\n\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\t`${comment}${JSON.stringify(included)}`\n\t\t);\n\t}\n};\n\nmodule.exports = WebpackIsIncludedDependency;\n"]},"metadata":{},"sourceType":"script"}