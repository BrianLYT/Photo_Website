{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst {\n  equals\n} = require(\"../util/ArrayHelpers\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass CommonJsSelfReferenceDependency extends NullDependency {\n  constructor(range, base, names, call) {\n    super();\n    this.range = range;\n    this.base = base;\n    this.names = names;\n    this.call = call;\n  }\n\n  get type() {\n    return \"cjs self exports reference\";\n  }\n\n  get category() {\n    return \"self\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `self`;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    return [this.call ? this.names.slice(0, -1) : this.names];\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.base);\n    write(this.names);\n    write(this.call);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.base = read();\n    this.names = read();\n    this.call = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(CommonJsSelfReferenceDependency, \"webpack/lib/dependencies/CommonJsSelfReferenceDependency\");\nCommonJsSelfReferenceDependency.Template = class CommonJsSelfReferenceDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      moduleGraph,\n      runtime,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {CommonJsSelfReferenceDependency} */\n    dependency;\n    let used;\n\n    if (dep.names.length === 0) {\n      used = dep.names;\n    } else {\n      used = moduleGraph.getExportsInfo(module).getUsedName(dep.names, runtime);\n    }\n\n    if (!used) {\n      throw new Error(\"Self-reference dependency has unused export name: This should not happen\");\n    }\n\n    let base = undefined;\n\n    switch (dep.base) {\n      case \"exports\":\n        runtimeRequirements.add(RuntimeGlobals.exports);\n        base = module.exportsArgument;\n        break;\n\n      case \"module.exports\":\n        runtimeRequirements.add(RuntimeGlobals.module);\n        base = `${module.moduleArgument}.exports`;\n        break;\n\n      case \"this\":\n        runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n        base = \"this\";\n        break;\n\n      default:\n        throw new Error(`Unsupported base ${dep.base}`);\n    }\n\n    if (base === dep.base && equals(used, dep.names)) {\n      // Nothing has to be changed\n      // We don't use a replacement for compat reasons\n      // for plugins that update `module._source` which they\n      // shouldn't do!\n      return;\n    }\n\n    source.replace(dep.range[0], dep.range[1] - 1, `${base}${propertyAccess(used)}`);\n  }\n\n};\nmodule.exports = CommonJsSelfReferenceDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/CommonJsSelfReferenceDependency.js"],"names":["RuntimeGlobals","require","equals","makeSerializable","propertyAccess","NullDependency","CommonJsSelfReferenceDependency","constructor","range","base","names","call","type","category","getResourceIdentifier","getReferencedExports","moduleGraph","runtime","slice","serialize","context","write","deserialize","read","Template","CommonJsSelfReferenceDependencyTemplate","apply","dependency","source","module","runtimeRequirements","dep","used","length","getExportsInfo","getUsedName","Error","undefined","add","exports","exportsArgument","moduleArgument","thisAsExports","replace"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst { equals } = require(\"../util/ArrayHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CommonJsSelfReferenceDependency extends NullDependency {\n\tconstructor(range, base, names, call) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.base = base;\n\t\tthis.names = names;\n\t\tthis.call = call;\n\t}\n\n\tget type() {\n\t\treturn \"cjs self exports reference\";\n\t}\n\n\tget category() {\n\t\treturn \"self\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `self`;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn [this.call ? this.names.slice(0, -1) : this.names];\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.range);\n\t\twrite(this.base);\n\t\twrite(this.names);\n\t\twrite(this.call);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.range = read();\n\t\tthis.base = read();\n\t\tthis.names = read();\n\t\tthis.call = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tCommonJsSelfReferenceDependency,\n\t\"webpack/lib/dependencies/CommonJsSelfReferenceDependency\"\n);\n\nCommonJsSelfReferenceDependency.Template = class CommonJsSelfReferenceDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ module, moduleGraph, runtime, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {CommonJsSelfReferenceDependency} */ (dependency);\n\t\tlet used;\n\t\tif (dep.names.length === 0) {\n\t\t\tused = dep.names;\n\t\t} else {\n\t\t\tused = moduleGraph.getExportsInfo(module).getUsedName(dep.names, runtime);\n\t\t}\n\t\tif (!used) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Self-reference dependency has unused export name: This should not happen\"\n\t\t\t);\n\t\t}\n\n\t\tlet base = undefined;\n\t\tswitch (dep.base) {\n\t\t\tcase \"exports\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\tbase = module.exportsArgument;\n\t\t\t\tbreak;\n\t\t\tcase \"module.exports\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\t\tbase = `${module.moduleArgument}.exports`;\n\t\t\t\tbreak;\n\t\t\tcase \"this\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t\t\tbase = \"this\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unsupported base ${dep.base}`);\n\t\t}\n\n\t\tif (base === dep.base && equals(used, dep.names)) {\n\t\t\t// Nothing has to be changed\n\t\t\t// We don't use a replacement for compat reasons\n\t\t\t// for plugins that update `module._source` which they\n\t\t\t// shouldn't do!\n\t\t\treturn;\n\t\t}\n\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\t`${base}${propertyAccess(used)}`\n\t\t);\n\t}\n};\n\nmodule.exports = CommonJsSelfReferenceDependency;\n"]},"metadata":{},"sourceType":"script"}