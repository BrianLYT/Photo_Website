{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\n\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n\nconst InitFragment = require(\"../InitFragment\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  countIterable\n} = require(\"../util/IterableHelpers\");\n\nconst {\n  first,\n  combine\n} = require(\"../util/SetHelpers\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst {\n  getRuntimeKey,\n  keyToRuntime\n} = require(\"../util/runtime\");\n\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nconst processExportInfo = require(\"./processExportInfo\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-dynamic-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-fake-namespace-object\"|\"reexport-undefined\"|\"normal-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\n\nconst {\n  ExportPresenceModes\n} = HarmonyImportDependency;\nconst idsSymbol = Symbol(\"HarmonyExportImportedSpecifierDependency.ids\");\n\nclass NormalReexportItem {\n  /**\n   * @param {string} name export name\n   * @param {string[]} ids reexported ids from other module\n   * @param {ExportInfo} exportInfo export info from other module\n   * @param {boolean} checked true, if it should be checked at runtime if this export exists\n   * @param {boolean} hidden true, if it is hidden behind another active export in the same module\n   */\n  constructor(name, ids, exportInfo, checked, hidden) {\n    this.name = name;\n    this.ids = ids;\n    this.exportInfo = exportInfo;\n    this.checked = checked;\n    this.hidden = hidden;\n  }\n\n}\n\nclass ExportMode {\n  /**\n   * @param {ExportModeType} type type of the mode\n   */\n  constructor(type) {\n    /** @type {ExportModeType} */\n    this.type = type; // for \"normal-reexport\":\n\n    /** @type {NormalReexportItem[] | null} */\n\n    this.items = null; // for \"reexport-named-default\" | \"reexport-fake-namespace-object\" | \"reexport-namespace-object\"\n\n    /** @type {string|null} */\n\n    this.name = null;\n    /** @type {ExportInfo | null} */\n\n    this.partialNamespaceExportInfo = null; // for \"dynamic-reexport\":\n\n    /** @type {Set<string> | null} */\n\n    this.ignored = null; // for \"dynamic-reexport\" | \"empty-star\":\n\n    /** @type {Set<string> | null} */\n\n    this.hidden = null; // for \"missing\":\n\n    /** @type {string | null} */\n\n    this.userRequest = null; // for \"reexport-fake-namespace-object\":\n\n    /** @type {number} */\n\n    this.fakeType = 0;\n  }\n\n}\n\nconst determineExportAssignments = (moduleGraph, dependencies, additionalDependency) => {\n  const names = new Set();\n  const dependencyIndices = [];\n\n  if (additionalDependency) {\n    dependencies = dependencies.concat(additionalDependency);\n  }\n\n  for (const dep of dependencies) {\n    const i = dependencyIndices.length;\n    dependencyIndices[i] = names.size;\n    const otherImportedModule = moduleGraph.getModule(dep);\n\n    if (otherImportedModule) {\n      const exportsInfo = moduleGraph.getExportsInfo(otherImportedModule);\n\n      for (const exportInfo of exportsInfo.exports) {\n        if (exportInfo.provided === true && exportInfo.name !== \"default\" && !names.has(exportInfo.name)) {\n          names.add(exportInfo.name);\n          dependencyIndices[i] = names.size;\n        }\n      }\n    }\n  }\n\n  dependencyIndices.push(names.size);\n  return {\n    names: Array.from(names),\n    dependencyIndices\n  };\n};\n\nconst findDependencyForName = (_ref, name, dependencies) => {\n  let {\n    names,\n    dependencyIndices\n  } = _ref;\n  const dependenciesIt = dependencies[Symbol.iterator]();\n  const dependencyIndicesIt = dependencyIndices[Symbol.iterator]();\n  let dependenciesItResult = dependenciesIt.next();\n  let dependencyIndicesItResult = dependencyIndicesIt.next();\n  if (dependencyIndicesItResult.done) return;\n\n  for (let i = 0; i < names.length; i++) {\n    while (i >= dependencyIndicesItResult.value) {\n      dependenciesItResult = dependenciesIt.next();\n      dependencyIndicesItResult = dependencyIndicesIt.next();\n      if (dependencyIndicesItResult.done) return;\n    }\n\n    if (names[i] === name) return dependenciesItResult.value;\n  }\n\n  return undefined;\n};\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {HarmonyExportImportedSpecifierDependency} dep the dependency\n * @param {string} runtimeKey the runtime key\n * @returns {ExportMode} the export mode\n */\n\n\nconst getMode = (moduleGraph, dep, runtimeKey) => {\n  const importedModule = moduleGraph.getModule(dep);\n\n  if (!importedModule) {\n    const mode = new ExportMode(\"missing\");\n    mode.userRequest = dep.userRequest;\n    return mode;\n  }\n\n  const name = dep.name;\n  const runtime = keyToRuntime(runtimeKey);\n  const parentModule = moduleGraph.getParentModule(dep);\n  const exportsInfo = moduleGraph.getExportsInfo(parentModule);\n\n  if (name ? exportsInfo.getUsed(name, runtime) === UsageState.Unused : exportsInfo.isUsed(runtime) === false) {\n    const mode = new ExportMode(\"unused\");\n    mode.name = name || \"*\";\n    return mode;\n  }\n\n  const importedExportsType = importedModule.getExportsType(moduleGraph, parentModule.buildMeta.strictHarmonyModule);\n  const ids = dep.getIds(moduleGraph); // Special handling for reexporting the default export\n  // from non-namespace modules\n\n  if (name && ids.length > 0 && ids[0] === \"default\") {\n    switch (importedExportsType) {\n      case \"dynamic\":\n        {\n          const mode = new ExportMode(\"reexport-dynamic-default\");\n          mode.name = name;\n          return mode;\n        }\n\n      case \"default-only\":\n      case \"default-with-named\":\n        {\n          const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n          const mode = new ExportMode(\"reexport-named-default\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          return mode;\n        }\n    }\n  } // reexporting with a fixed name\n\n\n  if (name) {\n    let mode;\n    const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\n    if (ids.length > 0) {\n      // export { name as name }\n      switch (importedExportsType) {\n        case \"default-only\":\n          mode = new ExportMode(\"reexport-undefined\");\n          mode.name = name;\n          break;\n\n        default:\n          mode = new ExportMode(\"normal-reexport\");\n          mode.items = [new NormalReexportItem(name, ids, exportInfo, false, false)];\n          break;\n      }\n    } else {\n      // export * as name\n      switch (importedExportsType) {\n        case \"default-only\":\n          mode = new ExportMode(\"reexport-fake-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          mode.fakeType = 0;\n          break;\n\n        case \"default-with-named\":\n          mode = new ExportMode(\"reexport-fake-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n          mode.fakeType = 2;\n          break;\n\n        case \"dynamic\":\n        default:\n          mode = new ExportMode(\"reexport-namespace-object\");\n          mode.name = name;\n          mode.partialNamespaceExportInfo = exportInfo;\n      }\n    }\n\n    return mode;\n  } // Star reexporting\n\n\n  const {\n    ignoredExports,\n    exports,\n    checked,\n    hidden\n  } = dep.getStarReexports(moduleGraph, runtime, exportsInfo, importedModule);\n\n  if (!exports) {\n    // We have too few info about the modules\n    // Delegate the logic to the runtime code\n    const mode = new ExportMode(\"dynamic-reexport\");\n    mode.ignored = ignoredExports;\n    mode.hidden = hidden;\n    return mode;\n  }\n\n  if (exports.size === 0) {\n    const mode = new ExportMode(\"empty-star\");\n    mode.hidden = hidden;\n    return mode;\n  }\n\n  const mode = new ExportMode(\"normal-reexport\");\n  mode.items = Array.from(exports, exportName => new NormalReexportItem(exportName, [exportName], exportsInfo.getReadOnlyExportInfo(exportName), checked.has(exportName), false));\n\n  if (hidden !== undefined) {\n    for (const exportName of hidden) {\n      mode.items.push(new NormalReexportItem(exportName, [exportName], exportsInfo.getReadOnlyExportInfo(exportName), false, true));\n    }\n  }\n\n  return mode;\n};\n\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n  /**\n   * @param {string} request the request string\n   * @param {number} sourceOrder the order in the original source file\n   * @param {string[]} ids the requested export name of the imported module\n   * @param {string | null} name the export name of for this module\n   * @param {Set<string>} activeExports other named exports in the module\n   * @param {ReadonlyArray<HarmonyExportImportedSpecifierDependency> | Iterable<HarmonyExportImportedSpecifierDependency>} otherStarExports other star exports in the module before this import\n   * @param {number} exportPresenceMode mode of checking export names\n   * @param {HarmonyStarExportsList} allStarExports all star exports in the module\n   * @param {Record<string, any>=} assertions import assertions\n   */\n  constructor(request, sourceOrder, ids, name, activeExports, otherStarExports, exportPresenceMode, allStarExports, assertions) {\n    super(request, sourceOrder, assertions);\n    this.ids = ids;\n    this.name = name;\n    this.activeExports = activeExports;\n    this.otherStarExports = otherStarExports;\n    this.exportPresenceMode = exportPresenceMode;\n    this.allStarExports = allStarExports;\n  }\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n\n\n  couldAffectReferencingModule() {\n    return Dependency.TRANSITIVE;\n  } // TODO webpack 6 remove\n\n\n  get id() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  getId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  setId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  get type() {\n    return \"harmony export imported specifier\";\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {string[]} the imported id\n   */\n\n\n  getIds(moduleGraph) {\n    return moduleGraph.getMeta(this)[idsSymbol] || this.ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {string[]} ids the imported ids\n   * @returns {void}\n   */\n\n\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {ExportMode} the export mode\n   */\n\n\n  getMode(moduleGraph, runtime) {\n    return moduleGraph.dependencyCacheProvide(this, getRuntimeKey(runtime), getMode);\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {ExportsInfo} exportsInfo exports info about the current module (optional)\n   * @param {Module} importedModule the imported module (optional)\n   * @returns {{exports?: Set<string>, checked?: Set<string>, ignoredExports: Set<string>, hidden?: Set<string>}} information\n   */\n\n\n  getStarReexports(moduleGraph, runtime) {\n    let exportsInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : moduleGraph.getExportsInfo(moduleGraph.getParentModule(this));\n    let importedModule = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : moduleGraph.getModule(this);\n    const importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\n    const noExtraExports = importedExportsInfo.otherExportsInfo.provided === false;\n    const noExtraImports = exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\n    const ignoredExports = new Set([\"default\", ...this.activeExports]);\n    let hiddenExports = undefined;\n\n    const otherStarExports = this._discoverActiveExportsFromOtherStarExports(moduleGraph);\n\n    if (otherStarExports !== undefined) {\n      hiddenExports = new Set();\n\n      for (let i = 0; i < otherStarExports.namesSlice; i++) {\n        hiddenExports.add(otherStarExports.names[i]);\n      }\n\n      for (const e of ignoredExports) hiddenExports.delete(e);\n    }\n\n    if (!noExtraExports && !noExtraImports) {\n      return {\n        ignoredExports,\n        hidden: hiddenExports\n      };\n    }\n    /** @type {Set<string>} */\n\n\n    const exports = new Set();\n    /** @type {Set<string>} */\n\n    const checked = new Set();\n    /** @type {Set<string>} */\n\n    const hidden = hiddenExports !== undefined ? new Set() : undefined;\n\n    if (noExtraImports) {\n      for (const exportInfo of exportsInfo.orderedExports) {\n        const name = exportInfo.name;\n        if (ignoredExports.has(name)) continue;\n        if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n        const importedExportInfo = importedExportsInfo.getReadOnlyExportInfo(name);\n        if (importedExportInfo.provided === false) continue;\n\n        if (hiddenExports !== undefined && hiddenExports.has(name)) {\n          hidden.add(name);\n          continue;\n        }\n\n        exports.add(name);\n        if (importedExportInfo.provided === true) continue;\n        checked.add(name);\n      }\n    } else if (noExtraExports) {\n      for (const importedExportInfo of importedExportsInfo.orderedExports) {\n        const name = importedExportInfo.name;\n        if (ignoredExports.has(name)) continue;\n        if (importedExportInfo.provided === false) continue;\n        const exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n        if (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\n        if (hiddenExports !== undefined && hiddenExports.has(name)) {\n          hidden.add(name);\n          continue;\n        }\n\n        exports.add(name);\n        if (importedExportInfo.provided === true) continue;\n        checked.add(name);\n      }\n    }\n\n    return {\n      ignoredExports,\n      exports,\n      checked,\n      hidden\n    };\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n   */\n\n\n  getCondition(moduleGraph) {\n    return (connection, runtime) => {\n      const mode = this.getMode(moduleGraph, runtime);\n      return mode.type !== \"unused\" && mode.type !== \"empty-star\";\n    };\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n\n\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    const mode = this.getMode(moduleGraph, runtime);\n\n    switch (mode.type) {\n      case \"missing\":\n      case \"unused\":\n      case \"empty-star\":\n      case \"reexport-undefined\":\n        return Dependency.NO_EXPORTS_REFERENCED;\n\n      case \"reexport-dynamic-default\":\n        return Dependency.EXPORTS_OBJECT_REFERENCED;\n\n      case \"reexport-named-default\":\n        {\n          if (!mode.partialNamespaceExportInfo) return Dependency.EXPORTS_OBJECT_REFERENCED;\n          /** @type {string[][]} */\n\n          const referencedExports = [];\n          processExportInfo(runtime, referencedExports, [],\n          /** @type {ExportInfo} */\n          mode.partialNamespaceExportInfo);\n          return referencedExports;\n        }\n\n      case \"reexport-namespace-object\":\n      case \"reexport-fake-namespace-object\":\n        {\n          if (!mode.partialNamespaceExportInfo) return Dependency.EXPORTS_OBJECT_REFERENCED;\n          /** @type {string[][]} */\n\n          const referencedExports = [];\n          processExportInfo(runtime, referencedExports, [],\n          /** @type {ExportInfo} */\n          mode.partialNamespaceExportInfo, mode.type === \"reexport-fake-namespace-object\");\n          return referencedExports;\n        }\n\n      case \"dynamic-reexport\":\n        return Dependency.EXPORTS_OBJECT_REFERENCED;\n\n      case \"normal-reexport\":\n        {\n          const referencedExports = [];\n\n          for (const {\n            ids,\n            exportInfo,\n            hidden\n          } of mode.items) {\n            if (hidden) continue;\n            processExportInfo(runtime, referencedExports, ids, exportInfo, false);\n          }\n\n          return referencedExports;\n        }\n\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {{ names: string[], namesSlice: number, dependencyIndices: number[], dependencyIndex: number } | undefined} exported names and their origin dependency\n   */\n\n\n  _discoverActiveExportsFromOtherStarExports(moduleGraph) {\n    if (!this.otherStarExports) return undefined;\n    const i = \"length\" in this.otherStarExports ? this.otherStarExports.length : countIterable(this.otherStarExports);\n    if (i === 0) return undefined;\n\n    if (this.allStarExports) {\n      const {\n        names,\n        dependencyIndices\n      } = moduleGraph.cached(determineExportAssignments, this.allStarExports.dependencies);\n      return {\n        names,\n        namesSlice: dependencyIndices[i - 1],\n        dependencyIndices,\n        dependencyIndex: i\n      };\n    }\n\n    const {\n      names,\n      dependencyIndices\n    } = moduleGraph.cached(determineExportAssignments, this.otherStarExports, this);\n    return {\n      names,\n      namesSlice: dependencyIndices[i - 1],\n      dependencyIndices,\n      dependencyIndex: i\n    };\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    const mode = this.getMode(moduleGraph, undefined);\n\n    switch (mode.type) {\n      case \"missing\":\n        return undefined;\n\n      case \"dynamic-reexport\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: true,\n            from,\n            canMangle: false,\n            excludeExports: mode.hidden ? combine(mode.ignored, mode.hidden) : mode.ignored,\n            hideExports: mode.hidden,\n            dependencies: [from.module]\n          };\n        }\n\n      case \"empty-star\":\n        return {\n          exports: [],\n          hideExports: mode.hidden,\n          dependencies: [moduleGraph.getModule(this)]\n        };\n      // falls through\n\n      case \"normal-reexport\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: Array.from(mode.items, item => ({\n              name: item.name,\n              from,\n              export: item.ids,\n              hidden: item.hidden\n            })),\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n\n      case \"reexport-dynamic-default\":\n        {\n          {\n            const from = moduleGraph.getConnection(this);\n            return {\n              exports: [{\n                name: mode.name,\n                from,\n                export: [\"default\"]\n              }],\n              priority: 1,\n              dependencies: [from.module]\n            };\n          }\n        }\n\n      case \"reexport-undefined\":\n        return {\n          exports: [mode.name],\n          dependencies: [moduleGraph.getModule(this)]\n        };\n\n      case \"reexport-fake-namespace-object\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: null,\n              exports: [{\n                name: \"default\",\n                canMangle: false,\n                from,\n                export: null\n              }]\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n\n      case \"reexport-namespace-object\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: null\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n\n      case \"reexport-named-default\":\n        {\n          const from = moduleGraph.getConnection(this);\n          return {\n            exports: [{\n              name: mode.name,\n              from,\n              export: [\"default\"]\n            }],\n            priority: 1,\n            dependencies: [from.module]\n          };\n        }\n\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {number} effective mode\n   */\n\n\n  _getEffectiveExportPresenceLevel(moduleGraph) {\n    if (this.exportPresenceMode !== ExportPresenceModes.AUTO) return this.exportPresenceMode;\n    return moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule ? ExportPresenceModes.ERROR : ExportPresenceModes.WARN;\n  }\n  /**\n   * Returns warnings\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[]} warnings\n   */\n\n\n  getWarnings(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.WARN) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * Returns errors\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[]} errors\n   */\n\n\n  getErrors(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.ERROR) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | undefined} errors\n   */\n\n\n  _getErrors(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n    let errors = this.getLinkingErrors(moduleGraph, ids, `(reexported as '${this.name}')`);\n\n    if (ids.length === 0 && this.name === null) {\n      const potentialConflicts = this._discoverActiveExportsFromOtherStarExports(moduleGraph);\n\n      if (potentialConflicts && potentialConflicts.namesSlice > 0) {\n        const ownNames = new Set(potentialConflicts.names.slice(potentialConflicts.namesSlice, potentialConflicts.dependencyIndices[potentialConflicts.dependencyIndex]));\n        const importedModule = moduleGraph.getModule(this);\n\n        if (importedModule) {\n          const exportsInfo = moduleGraph.getExportsInfo(importedModule);\n          const conflicts = new Map();\n\n          for (const exportInfo of exportsInfo.orderedExports) {\n            if (exportInfo.provided !== true) continue;\n            if (exportInfo.name === \"default\") continue;\n            if (this.activeExports.has(exportInfo.name)) continue;\n            if (ownNames.has(exportInfo.name)) continue;\n            const conflictingDependency = findDependencyForName(potentialConflicts, exportInfo.name, this.allStarExports ? this.allStarExports.dependencies : [...this.otherStarExports, this]);\n            if (!conflictingDependency) continue;\n            const target = exportInfo.getTerminalBinding(moduleGraph);\n            if (!target) continue;\n            const conflictingModule = moduleGraph.getModule(conflictingDependency);\n            if (conflictingModule === importedModule) continue;\n            const conflictingExportInfo = moduleGraph.getExportInfo(conflictingModule, exportInfo.name);\n            const conflictingTarget = conflictingExportInfo.getTerminalBinding(moduleGraph);\n            if (!conflictingTarget) continue;\n            if (target === conflictingTarget) continue;\n            const list = conflicts.get(conflictingDependency.request);\n\n            if (list === undefined) {\n              conflicts.set(conflictingDependency.request, [exportInfo.name]);\n            } else {\n              list.push(exportInfo.name);\n            }\n          }\n\n          for (const [request, exports] of conflicts) {\n            if (!errors) errors = [];\n            errors.push(new HarmonyLinkingError(`The requested module '${this.request}' contains conflicting star exports for the ${exports.length > 1 ? \"names\" : \"name\"} ${exports.map(e => `'${e}'`).join(\", \")} with the previous requested module '${request}'`));\n          }\n        }\n      }\n    }\n\n    return errors;\n  }\n\n  serialize(context) {\n    const {\n      write,\n      setCircularReference\n    } = context;\n    setCircularReference(this);\n    write(this.ids);\n    write(this.name);\n    write(this.activeExports);\n    write(this.otherStarExports);\n    write(this.exportPresenceMode);\n    write(this.allStarExports);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read,\n      setCircularReference\n    } = context;\n    setCircularReference(this);\n    this.ids = read();\n    this.name = read();\n    this.activeExports = read();\n    this.otherStarExports = read();\n    this.exportPresenceMode = read();\n    this.allStarExports = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyExportImportedSpecifierDependency, \"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\");\nmodule.exports = HarmonyExportImportedSpecifierDependency;\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const {\n      moduleGraph,\n      runtime,\n      concatenationScope\n    } = templateContext;\n    const dep =\n    /** @type {HarmonyExportImportedSpecifierDependency} */\n    dependency;\n    const mode = dep.getMode(moduleGraph, runtime);\n\n    if (concatenationScope) {\n      switch (mode.type) {\n        case \"reexport-undefined\":\n          concatenationScope.registerRawExport(mode.name, \"/* reexport non-default export from non-harmony */ undefined\");\n      }\n\n      return;\n    }\n\n    if (mode.type !== \"unused\" && mode.type !== \"empty-star\") {\n      super.apply(dependency, source, templateContext);\n\n      this._addExportFragments(templateContext.initFragments, dep, mode, templateContext.module, moduleGraph, runtime, templateContext.runtimeTemplate, templateContext.runtimeRequirements);\n    }\n  }\n  /**\n   * @param {InitFragment[]} initFragments target array for init fragments\n   * @param {HarmonyExportImportedSpecifierDependency} dep dependency\n   * @param {ExportMode} mode the export mode\n   * @param {Module} module the current module\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {RuntimeTemplate} runtimeTemplate the runtime template\n   * @param {Set<string>} runtimeRequirements runtime requirements\n   * @returns {void}\n   */\n\n\n  _addExportFragments(initFragments, dep, mode, module, moduleGraph, runtime, runtimeTemplate, runtimeRequirements) {\n    const importedModule = moduleGraph.getModule(dep);\n    const importVar = dep.getImportVar(moduleGraph);\n\n    switch (mode.type) {\n      case \"missing\":\n      case \"empty-star\":\n        initFragments.push(new InitFragment(\"/* empty/unused harmony star reexport */\\n\", InitFragment.STAGE_HARMONY_EXPORTS, 1));\n        break;\n\n      case \"unused\":\n        initFragments.push(new InitFragment(`${Template.toNormalComment(`unused harmony reexport ${mode.name}`)}\\n`, InitFragment.STAGE_HARMONY_EXPORTS, 1));\n        break;\n\n      case \"reexport-dynamic-default\":\n        initFragments.push(this.getReexportFragment(module, \"reexport default from dynamic\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, null, runtimeRequirements));\n        break;\n\n      case \"reexport-fake-namespace-object\":\n        initFragments.push(...this.getReexportFakeNamespaceObjectFragments(module, moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, mode.fakeType, runtimeRequirements));\n        break;\n\n      case \"reexport-undefined\":\n        initFragments.push(this.getReexportFragment(module, \"reexport non-default export from non-harmony\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), \"undefined\", \"\", runtimeRequirements));\n        break;\n\n      case \"reexport-named-default\":\n        initFragments.push(this.getReexportFragment(module, \"reexport default export from named module\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, \"\", runtimeRequirements));\n        break;\n\n      case \"reexport-namespace-object\":\n        initFragments.push(this.getReexportFragment(module, \"reexport module object\", moduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime), importVar, \"\", runtimeRequirements));\n        break;\n\n      case \"normal-reexport\":\n        for (const {\n          name,\n          ids,\n          checked,\n          hidden\n        } of mode.items) {\n          if (hidden) continue;\n\n          if (checked) {\n            initFragments.push(new InitFragment(\"/* harmony reexport (checked) */ \" + this.getConditionalReexportStatement(module, name, importVar, ids, runtimeRequirements), moduleGraph.isAsync(importedModule) ? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS : InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder));\n          } else {\n            initFragments.push(this.getReexportFragment(module, \"reexport safe\", moduleGraph.getExportsInfo(module).getUsedName(name, runtime), importVar, moduleGraph.getExportsInfo(importedModule).getUsedName(ids, runtime), runtimeRequirements));\n          }\n        }\n\n        break;\n\n      case \"dynamic-reexport\":\n        {\n          const ignored = mode.hidden ? combine(mode.ignored, mode.hidden) : mode.ignored;\n          const modern = runtimeTemplate.supportsConst() && runtimeTemplate.supportsArrowFunction();\n          let content = \"/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\\n\" + `/* harmony reexport (unknown) */ for(${modern ? \"const\" : \"var\"} __WEBPACK_IMPORT_KEY__ in ${importVar}) `; // Filter out exports which are defined by other exports\n          // and filter out default export because it cannot be reexported with *\n\n          if (ignored.size > 1) {\n            content += \"if(\" + JSON.stringify(Array.from(ignored)) + \".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n          } else if (ignored.size === 1) {\n            content += `if(__WEBPACK_IMPORT_KEY__ !== ${JSON.stringify(first(ignored))}) `;\n          }\n\n          content += `__WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = `;\n\n          if (modern) {\n            content += `() => ${importVar}[__WEBPACK_IMPORT_KEY__]`;\n          } else {\n            content += `function(key) { return ${importVar}[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)`;\n          }\n\n          runtimeRequirements.add(RuntimeGlobals.exports);\n          runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n          const exportsName = module.exportsArgument;\n          initFragments.push(new InitFragment(`${content}\\n/* harmony reexport (unknown) */ ${RuntimeGlobals.definePropertyGetters}(${exportsName}, __WEBPACK_REEXPORT_OBJECT__);\\n`, moduleGraph.isAsync(importedModule) ? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS : InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder));\n          break;\n        }\n\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n\n  getReexportFragment(module, comment, key, name, valueKey, runtimeRequirements) {\n    const returnValue = this.getReturnValue(name, valueKey);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    const map = new Map();\n    map.set(key, `/* ${comment} */ ${returnValue}`);\n    return new HarmonyExportInitFragment(module.exportsArgument, map);\n  }\n\n  getReexportFakeNamespaceObjectFragments(module, key, name, fakeType, runtimeRequirements) {\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n    const map = new Map();\n    map.set(key, `/* reexport fake namespace object from non-harmony */ ${name}_namespace_cache || (${name}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${name}${fakeType ? `, ${fakeType}` : \"\"}))`);\n    return [new InitFragment(`var ${name}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${name}_namespace_cache`), new HarmonyExportInitFragment(module.exportsArgument, map)];\n  }\n\n  getConditionalReexportStatement(module, key, name, valueKey, runtimeRequirements) {\n    if (valueKey === false) {\n      return \"/* unused export */\\n\";\n    }\n\n    const exportsName = module.exportsArgument;\n    const returnValue = this.getReturnValue(name, valueKey);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    runtimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n    runtimeRequirements.add(RuntimeGlobals.hasOwnProperty);\n    return `if(${RuntimeGlobals.hasOwnProperty}(${name}, ${JSON.stringify(valueKey[0])})) ${RuntimeGlobals.definePropertyGetters}(${exportsName}, { ${JSON.stringify(key)}: function() { return ${returnValue}; } });\\n`;\n  }\n\n  getReturnValue(name, valueKey) {\n    if (valueKey === null) {\n      return `${name}_default.a`;\n    }\n\n    if (valueKey === \"\") {\n      return name;\n    }\n\n    if (valueKey === false) {\n      return \"/* unused export */ undefined\";\n    }\n\n    return `${name}${propertyAccess(valueKey)}`;\n  }\n\n};\n\nclass HarmonyStarExportsList {\n  constructor() {\n    /** @type {HarmonyExportImportedSpecifierDependency[]} */\n    this.dependencies = [];\n  }\n  /**\n   * @param {HarmonyExportImportedSpecifierDependency} dep dependency\n   * @returns {void}\n   */\n\n\n  push(dep) {\n    this.dependencies.push(dep);\n  }\n\n  slice() {\n    return this.dependencies.slice();\n  }\n\n  serialize(_ref2) {\n    let {\n      write,\n      setCircularReference\n    } = _ref2;\n    setCircularReference(this);\n    write(this.dependencies);\n  }\n\n  deserialize(_ref3) {\n    let {\n      read,\n      setCircularReference\n    } = _ref3;\n    setCircularReference(this);\n    this.dependencies = read();\n  }\n\n}\n\nmakeSerializable(HarmonyStarExportsList, \"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\", \"HarmonyStarExportsList\");\nmodule.exports.HarmonyStarExportsList = HarmonyStarExportsList;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency.js"],"names":["Dependency","require","UsageState","HarmonyLinkingError","InitFragment","RuntimeGlobals","Template","countIterable","first","combine","makeSerializable","propertyAccess","getRuntimeKey","keyToRuntime","HarmonyExportInitFragment","HarmonyImportDependency","processExportInfo","ExportPresenceModes","idsSymbol","Symbol","NormalReexportItem","constructor","name","ids","exportInfo","checked","hidden","ExportMode","type","items","partialNamespaceExportInfo","ignored","userRequest","fakeType","determineExportAssignments","moduleGraph","dependencies","additionalDependency","names","Set","dependencyIndices","concat","dep","i","length","size","otherImportedModule","getModule","exportsInfo","getExportsInfo","exports","provided","has","add","push","Array","from","findDependencyForName","dependenciesIt","iterator","dependencyIndicesIt","dependenciesItResult","next","dependencyIndicesItResult","done","value","undefined","getMode","runtimeKey","importedModule","mode","runtime","parentModule","getParentModule","getUsed","Unused","isUsed","importedExportsType","getExportsType","buildMeta","strictHarmonyModule","getIds","getReadOnlyExportInfo","ignoredExports","getStarReexports","exportName","HarmonyExportImportedSpecifierDependency","request","sourceOrder","activeExports","otherStarExports","exportPresenceMode","allStarExports","assertions","couldAffectReferencingModule","TRANSITIVE","id","Error","getId","setId","getMeta","setIds","dependencyCacheProvide","importedExportsInfo","noExtraExports","otherExportsInfo","noExtraImports","hiddenExports","_discoverActiveExportsFromOtherStarExports","namesSlice","e","delete","orderedExports","importedExportInfo","getCondition","connection","getModuleEvaluationSideEffectsState","getReferencedExports","NO_EXPORTS_REFERENCED","EXPORTS_OBJECT_REFERENCED","referencedExports","cached","dependencyIndex","getExports","getConnection","canMangle","excludeExports","hideExports","module","item","export","priority","_getEffectiveExportPresenceLevel","AUTO","ERROR","WARN","getWarnings","exportsPresence","_getErrors","getErrors","errors","getLinkingErrors","potentialConflicts","ownNames","slice","conflicts","Map","conflictingDependency","target","getTerminalBinding","conflictingModule","conflictingExportInfo","getExportInfo","conflictingTarget","list","get","set","map","join","serialize","context","write","setCircularReference","deserialize","read","HarmonyExportImportedSpecifierDependencyTemplate","apply","dependency","source","templateContext","concatenationScope","registerRawExport","_addExportFragments","initFragments","runtimeTemplate","runtimeRequirements","importVar","getImportVar","STAGE_HARMONY_EXPORTS","toNormalComment","getReexportFragment","getUsedName","getReexportFakeNamespaceObjectFragments","getConditionalReexportStatement","isAsync","STAGE_ASYNC_HARMONY_IMPORTS","STAGE_HARMONY_IMPORTS","modern","supportsConst","supportsArrowFunction","content","JSON","stringify","definePropertyGetters","exportsName","exportsArgument","comment","key","valueKey","returnValue","getReturnValue","createFakeNamespaceObject","STAGE_CONSTANTS","hasOwnProperty","HarmonyStarExportsList"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst { countIterable } = require(\"../util/IterableHelpers\");\nconst { first, combine } = require(\"../util/SetHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst { getRuntimeKey, keyToRuntime } = require(\"../util/runtime\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst processExportInfo = require(\"./processExportInfo\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-dynamic-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-fake-namespace-object\"|\"reexport-undefined\"|\"normal-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\nconst { ExportPresenceModes } = HarmonyImportDependency;\n\nconst idsSymbol = Symbol(\"HarmonyExportImportedSpecifierDependency.ids\");\n\nclass NormalReexportItem {\n\t/**\n\t * @param {string} name export name\n\t * @param {string[]} ids reexported ids from other module\n\t * @param {ExportInfo} exportInfo export info from other module\n\t * @param {boolean} checked true, if it should be checked at runtime if this export exists\n\t * @param {boolean} hidden true, if it is hidden behind another active export in the same module\n\t */\n\tconstructor(name, ids, exportInfo, checked, hidden) {\n\t\tthis.name = name;\n\t\tthis.ids = ids;\n\t\tthis.exportInfo = exportInfo;\n\t\tthis.checked = checked;\n\t\tthis.hidden = hidden;\n\t}\n}\n\nclass ExportMode {\n\t/**\n\t * @param {ExportModeType} type type of the mode\n\t */\n\tconstructor(type) {\n\t\t/** @type {ExportModeType} */\n\t\tthis.type = type;\n\n\t\t// for \"normal-reexport\":\n\t\t/** @type {NormalReexportItem[] | null} */\n\t\tthis.items = null;\n\n\t\t// for \"reexport-named-default\" | \"reexport-fake-namespace-object\" | \"reexport-namespace-object\"\n\t\t/** @type {string|null} */\n\t\tthis.name = null;\n\t\t/** @type {ExportInfo | null} */\n\t\tthis.partialNamespaceExportInfo = null;\n\n\t\t// for \"dynamic-reexport\":\n\t\t/** @type {Set<string> | null} */\n\t\tthis.ignored = null;\n\n\t\t// for \"dynamic-reexport\" | \"empty-star\":\n\t\t/** @type {Set<string> | null} */\n\t\tthis.hidden = null;\n\n\t\t// for \"missing\":\n\t\t/** @type {string | null} */\n\t\tthis.userRequest = null;\n\n\t\t// for \"reexport-fake-namespace-object\":\n\t\t/** @type {number} */\n\t\tthis.fakeType = 0;\n\t}\n}\n\nconst determineExportAssignments = (\n\tmoduleGraph,\n\tdependencies,\n\tadditionalDependency\n) => {\n\tconst names = new Set();\n\tconst dependencyIndices = [];\n\n\tif (additionalDependency) {\n\t\tdependencies = dependencies.concat(additionalDependency);\n\t}\n\n\tfor (const dep of dependencies) {\n\t\tconst i = dependencyIndices.length;\n\t\tdependencyIndices[i] = names.size;\n\t\tconst otherImportedModule = moduleGraph.getModule(dep);\n\t\tif (otherImportedModule) {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(otherImportedModule);\n\t\t\tfor (const exportInfo of exportsInfo.exports) {\n\t\t\t\tif (\n\t\t\t\t\texportInfo.provided === true &&\n\t\t\t\t\texportInfo.name !== \"default\" &&\n\t\t\t\t\t!names.has(exportInfo.name)\n\t\t\t\t) {\n\t\t\t\t\tnames.add(exportInfo.name);\n\t\t\t\t\tdependencyIndices[i] = names.size;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tdependencyIndices.push(names.size);\n\n\treturn { names: Array.from(names), dependencyIndices };\n};\n\nconst findDependencyForName = (\n\t{ names, dependencyIndices },\n\tname,\n\tdependencies\n) => {\n\tconst dependenciesIt = dependencies[Symbol.iterator]();\n\tconst dependencyIndicesIt = dependencyIndices[Symbol.iterator]();\n\tlet dependenciesItResult = dependenciesIt.next();\n\tlet dependencyIndicesItResult = dependencyIndicesIt.next();\n\tif (dependencyIndicesItResult.done) return;\n\tfor (let i = 0; i < names.length; i++) {\n\t\twhile (i >= dependencyIndicesItResult.value) {\n\t\t\tdependenciesItResult = dependenciesIt.next();\n\t\t\tdependencyIndicesItResult = dependencyIndicesIt.next();\n\t\t\tif (dependencyIndicesItResult.done) return;\n\t\t}\n\t\tif (names[i] === name) return dependenciesItResult.value;\n\t}\n\treturn undefined;\n};\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {HarmonyExportImportedSpecifierDependency} dep the dependency\n * @param {string} runtimeKey the runtime key\n * @returns {ExportMode} the export mode\n */\nconst getMode = (moduleGraph, dep, runtimeKey) => {\n\tconst importedModule = moduleGraph.getModule(dep);\n\n\tif (!importedModule) {\n\t\tconst mode = new ExportMode(\"missing\");\n\n\t\tmode.userRequest = dep.userRequest;\n\n\t\treturn mode;\n\t}\n\n\tconst name = dep.name;\n\tconst runtime = keyToRuntime(runtimeKey);\n\tconst parentModule = moduleGraph.getParentModule(dep);\n\tconst exportsInfo = moduleGraph.getExportsInfo(parentModule);\n\n\tif (\n\t\tname\n\t\t\t? exportsInfo.getUsed(name, runtime) === UsageState.Unused\n\t\t\t: exportsInfo.isUsed(runtime) === false\n\t) {\n\t\tconst mode = new ExportMode(\"unused\");\n\n\t\tmode.name = name || \"*\";\n\n\t\treturn mode;\n\t}\n\n\tconst importedExportsType = importedModule.getExportsType(\n\t\tmoduleGraph,\n\t\tparentModule.buildMeta.strictHarmonyModule\n\t);\n\n\tconst ids = dep.getIds(moduleGraph);\n\n\t// Special handling for reexporting the default export\n\t// from non-namespace modules\n\tif (name && ids.length > 0 && ids[0] === \"default\") {\n\t\tswitch (importedExportsType) {\n\t\t\tcase \"dynamic\": {\n\t\t\t\tconst mode = new ExportMode(\"reexport-dynamic-default\");\n\n\t\t\t\tmode.name = name;\n\n\t\t\t\treturn mode;\n\t\t\t}\n\t\t\tcase \"default-only\":\n\t\t\tcase \"default-with-named\": {\n\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\t\t\t\tconst mode = new ExportMode(\"reexport-named-default\");\n\n\t\t\t\tmode.name = name;\n\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\n\n\t\t\t\treturn mode;\n\t\t\t}\n\t\t}\n\t}\n\n\t// reexporting with a fixed name\n\tif (name) {\n\t\tlet mode;\n\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\n\t\tif (ids.length > 0) {\n\t\t\t// export { name as name }\n\t\t\tswitch (importedExportsType) {\n\t\t\t\tcase \"default-only\":\n\t\t\t\t\tmode = new ExportMode(\"reexport-undefined\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tmode = new ExportMode(\"normal-reexport\");\n\t\t\t\t\tmode.items = [\n\t\t\t\t\t\tnew NormalReexportItem(name, ids, exportInfo, false, false)\n\t\t\t\t\t];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t// export * as name\n\t\t\tswitch (importedExportsType) {\n\t\t\t\tcase \"default-only\":\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\n\t\t\t\t\tmode.fakeType = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\n\t\t\t\t\tmode.fakeType = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dynamic\":\n\t\t\t\tdefault:\n\t\t\t\t\tmode = new ExportMode(\"reexport-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t\tmode.partialNamespaceExportInfo = exportInfo;\n\t\t\t}\n\t\t}\n\n\t\treturn mode;\n\t}\n\n\t// Star reexporting\n\n\tconst { ignoredExports, exports, checked, hidden } = dep.getStarReexports(\n\t\tmoduleGraph,\n\t\truntime,\n\t\texportsInfo,\n\t\timportedModule\n\t);\n\tif (!exports) {\n\t\t// We have too few info about the modules\n\t\t// Delegate the logic to the runtime code\n\n\t\tconst mode = new ExportMode(\"dynamic-reexport\");\n\t\tmode.ignored = ignoredExports;\n\t\tmode.hidden = hidden;\n\n\t\treturn mode;\n\t}\n\n\tif (exports.size === 0) {\n\t\tconst mode = new ExportMode(\"empty-star\");\n\t\tmode.hidden = hidden;\n\n\t\treturn mode;\n\t}\n\n\tconst mode = new ExportMode(\"normal-reexport\");\n\n\tmode.items = Array.from(\n\t\texports,\n\t\texportName =>\n\t\t\tnew NormalReexportItem(\n\t\t\t\texportName,\n\t\t\t\t[exportName],\n\t\t\t\texportsInfo.getReadOnlyExportInfo(exportName),\n\t\t\t\tchecked.has(exportName),\n\t\t\t\tfalse\n\t\t\t)\n\t);\n\tif (hidden !== undefined) {\n\t\tfor (const exportName of hidden) {\n\t\t\tmode.items.push(\n\t\t\t\tnew NormalReexportItem(\n\t\t\t\t\texportName,\n\t\t\t\t\t[exportName],\n\t\t\t\t\texportsInfo.getReadOnlyExportInfo(exportName),\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn mode;\n};\n\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n\t/**\n\t * @param {string} request the request string\n\t * @param {number} sourceOrder the order in the original source file\n\t * @param {string[]} ids the requested export name of the imported module\n\t * @param {string | null} name the export name of for this module\n\t * @param {Set<string>} activeExports other named exports in the module\n\t * @param {ReadonlyArray<HarmonyExportImportedSpecifierDependency> | Iterable<HarmonyExportImportedSpecifierDependency>} otherStarExports other star exports in the module before this import\n\t * @param {number} exportPresenceMode mode of checking export names\n\t * @param {HarmonyStarExportsList} allStarExports all star exports in the module\n\t * @param {Record<string, any>=} assertions import assertions\n\t */\n\tconstructor(\n\t\trequest,\n\t\tsourceOrder,\n\t\tids,\n\t\tname,\n\t\tactiveExports,\n\t\totherStarExports,\n\t\texportPresenceMode,\n\t\tallStarExports,\n\t\tassertions\n\t) {\n\t\tsuper(request, sourceOrder, assertions);\n\n\t\tthis.ids = ids;\n\t\tthis.name = name;\n\t\tthis.activeExports = activeExports;\n\t\tthis.otherStarExports = otherStarExports;\n\t\tthis.exportPresenceMode = exportPresenceMode;\n\t\tthis.allStarExports = allStarExports;\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn Dependency.TRANSITIVE;\n\t}\n\n\t// TODO webpack 6 remove\n\tget id() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tgetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tsetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\tget type() {\n\t\treturn \"harmony export imported specifier\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string[]} the imported id\n\t */\n\tgetIds(moduleGraph) {\n\t\treturn moduleGraph.getMeta(this)[idsSymbol] || this.ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {string[]} ids the imported ids\n\t * @returns {void}\n\t */\n\tsetIds(moduleGraph, ids) {\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {ExportMode} the export mode\n\t */\n\tgetMode(moduleGraph, runtime) {\n\t\treturn moduleGraph.dependencyCacheProvide(\n\t\t\tthis,\n\t\t\tgetRuntimeKey(runtime),\n\t\t\tgetMode\n\t\t);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {ExportsInfo} exportsInfo exports info about the current module (optional)\n\t * @param {Module} importedModule the imported module (optional)\n\t * @returns {{exports?: Set<string>, checked?: Set<string>, ignoredExports: Set<string>, hidden?: Set<string>}} information\n\t */\n\tgetStarReexports(\n\t\tmoduleGraph,\n\t\truntime,\n\t\texportsInfo = moduleGraph.getExportsInfo(moduleGraph.getParentModule(this)),\n\t\timportedModule = moduleGraph.getModule(this)\n\t) {\n\t\tconst importedExportsInfo = moduleGraph.getExportsInfo(importedModule);\n\n\t\tconst noExtraExports =\n\t\t\timportedExportsInfo.otherExportsInfo.provided === false;\n\t\tconst noExtraImports =\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused;\n\n\t\tconst ignoredExports = new Set([\"default\", ...this.activeExports]);\n\n\t\tlet hiddenExports = undefined;\n\t\tconst otherStarExports =\n\t\t\tthis._discoverActiveExportsFromOtherStarExports(moduleGraph);\n\t\tif (otherStarExports !== undefined) {\n\t\t\thiddenExports = new Set();\n\t\t\tfor (let i = 0; i < otherStarExports.namesSlice; i++) {\n\t\t\t\thiddenExports.add(otherStarExports.names[i]);\n\t\t\t}\n\t\t\tfor (const e of ignoredExports) hiddenExports.delete(e);\n\t\t}\n\n\t\tif (!noExtraExports && !noExtraImports) {\n\t\t\treturn {\n\t\t\t\tignoredExports,\n\t\t\t\thidden: hiddenExports\n\t\t\t};\n\t\t}\n\n\t\t/** @type {Set<string>} */\n\t\tconst exports = new Set();\n\t\t/** @type {Set<string>} */\n\t\tconst checked = new Set();\n\t\t/** @type {Set<string>} */\n\t\tconst hidden = hiddenExports !== undefined ? new Set() : undefined;\n\n\t\tif (noExtraImports) {\n\t\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\t\tconst name = exportInfo.name;\n\t\t\t\tif (ignoredExports.has(name)) continue;\n\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\t\t\t\tconst importedExportInfo =\n\t\t\t\t\timportedExportsInfo.getReadOnlyExportInfo(name);\n\t\t\t\tif (importedExportInfo.provided === false) continue;\n\t\t\t\tif (hiddenExports !== undefined && hiddenExports.has(name)) {\n\t\t\t\t\thidden.add(name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\texports.add(name);\n\t\t\t\tif (importedExportInfo.provided === true) continue;\n\t\t\t\tchecked.add(name);\n\t\t\t}\n\t\t} else if (noExtraExports) {\n\t\t\tfor (const importedExportInfo of importedExportsInfo.orderedExports) {\n\t\t\t\tconst name = importedExportInfo.name;\n\t\t\t\tif (ignoredExports.has(name)) continue;\n\t\t\t\tif (importedExportInfo.provided === false) continue;\n\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(name);\n\t\t\t\tif (exportInfo.getUsed(runtime) === UsageState.Unused) continue;\n\t\t\t\tif (hiddenExports !== undefined && hiddenExports.has(name)) {\n\t\t\t\t\thidden.add(name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\texports.add(name);\n\t\t\t\tif (importedExportInfo.provided === true) continue;\n\t\t\t\tchecked.add(name);\n\t\t\t}\n\t\t}\n\n\t\treturn { ignoredExports, exports, checked, hidden };\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn (connection, runtime) => {\n\t\t\tconst mode = this.getMode(moduleGraph, runtime);\n\t\t\treturn mode.type !== \"unused\" && mode.type !== \"empty-star\";\n\t\t};\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tconst mode = this.getMode(moduleGraph, runtime);\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\tcase \"unused\":\n\t\t\tcase \"empty-star\":\n\t\t\tcase \"reexport-undefined\":\n\t\t\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\n\t\t\tcase \"reexport-dynamic-default\":\n\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\n\t\t\tcase \"reexport-named-default\": {\n\t\t\t\tif (!mode.partialNamespaceExportInfo)\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t\t/** @type {string[][]} */\n\t\t\t\tconst referencedExports = [];\n\t\t\t\tprocessExportInfo(\n\t\t\t\t\truntime,\n\t\t\t\t\treferencedExports,\n\t\t\t\t\t[],\n\t\t\t\t\t/** @type {ExportInfo} */ (mode.partialNamespaceExportInfo)\n\t\t\t\t);\n\t\t\t\treturn referencedExports;\n\t\t\t}\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\tcase \"reexport-fake-namespace-object\": {\n\t\t\t\tif (!mode.partialNamespaceExportInfo)\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t\t/** @type {string[][]} */\n\t\t\t\tconst referencedExports = [];\n\t\t\t\tprocessExportInfo(\n\t\t\t\t\truntime,\n\t\t\t\t\treferencedExports,\n\t\t\t\t\t[],\n\t\t\t\t\t/** @type {ExportInfo} */ (mode.partialNamespaceExportInfo),\n\t\t\t\t\tmode.type === \"reexport-fake-namespace-object\"\n\t\t\t\t);\n\t\t\t\treturn referencedExports;\n\t\t\t}\n\n\t\t\tcase \"dynamic-reexport\":\n\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\n\t\t\tcase \"normal-reexport\": {\n\t\t\t\tconst referencedExports = [];\n\t\t\t\tfor (const { ids, exportInfo, hidden } of mode.items) {\n\t\t\t\t\tif (hidden) continue;\n\t\t\t\t\tprocessExportInfo(runtime, referencedExports, ids, exportInfo, false);\n\t\t\t\t}\n\t\t\t\treturn referencedExports;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {{ names: string[], namesSlice: number, dependencyIndices: number[], dependencyIndex: number } | undefined} exported names and their origin dependency\n\t */\n\t_discoverActiveExportsFromOtherStarExports(moduleGraph) {\n\t\tif (!this.otherStarExports) return undefined;\n\n\t\tconst i =\n\t\t\t\"length\" in this.otherStarExports\n\t\t\t\t? this.otherStarExports.length\n\t\t\t\t: countIterable(this.otherStarExports);\n\t\tif (i === 0) return undefined;\n\n\t\tif (this.allStarExports) {\n\t\t\tconst { names, dependencyIndices } = moduleGraph.cached(\n\t\t\t\tdetermineExportAssignments,\n\t\t\t\tthis.allStarExports.dependencies\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tnames,\n\t\t\t\tnamesSlice: dependencyIndices[i - 1],\n\t\t\t\tdependencyIndices,\n\t\t\t\tdependencyIndex: i\n\t\t\t};\n\t\t}\n\n\t\tconst { names, dependencyIndices } = moduleGraph.cached(\n\t\t\tdetermineExportAssignments,\n\t\t\tthis.otherStarExports,\n\t\t\tthis\n\t\t);\n\n\t\treturn {\n\t\t\tnames,\n\t\t\tnamesSlice: dependencyIndices[i - 1],\n\t\t\tdependencyIndices,\n\t\t\tdependencyIndex: i\n\t\t};\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\tconst mode = this.getMode(moduleGraph, undefined);\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\t\treturn undefined;\n\t\t\tcase \"dynamic-reexport\": {\n\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\treturn {\n\t\t\t\t\texports: true,\n\t\t\t\t\tfrom,\n\t\t\t\t\tcanMangle: false,\n\t\t\t\t\texcludeExports: mode.hidden\n\t\t\t\t\t\t? combine(mode.ignored, mode.hidden)\n\t\t\t\t\t\t: mode.ignored,\n\t\t\t\t\thideExports: mode.hidden,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase \"empty-star\":\n\t\t\t\treturn {\n\t\t\t\t\texports: [],\n\t\t\t\t\thideExports: mode.hidden,\n\t\t\t\t\tdependencies: [moduleGraph.getModule(this)]\n\t\t\t\t};\n\t\t\t// falls through\n\t\t\tcase \"normal-reexport\": {\n\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\treturn {\n\t\t\t\t\texports: Array.from(mode.items, item => ({\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\texport: item.ids,\n\t\t\t\t\t\thidden: item.hidden\n\t\t\t\t\t})),\n\t\t\t\t\tpriority: 1,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase \"reexport-dynamic-default\": {\n\t\t\t\t{\n\t\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\t\treturn {\n\t\t\t\t\t\texports: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: mode.name,\n\t\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\t\texport: [\"default\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tpriority: 1,\n\t\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase \"reexport-undefined\":\n\t\t\t\treturn {\n\t\t\t\t\texports: [mode.name],\n\t\t\t\t\tdependencies: [moduleGraph.getModule(this)]\n\t\t\t\t};\n\t\t\tcase \"reexport-fake-namespace-object\": {\n\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\treturn {\n\t\t\t\t\texports: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: mode.name,\n\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\texport: null,\n\t\t\t\t\t\t\texports: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"default\",\n\t\t\t\t\t\t\t\t\tcanMangle: false,\n\t\t\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\t\t\texport: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tpriority: 1,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase \"reexport-namespace-object\": {\n\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\treturn {\n\t\t\t\t\texports: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: mode.name,\n\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\texport: null\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tpriority: 1,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase \"reexport-named-default\": {\n\t\t\t\tconst from = moduleGraph.getConnection(this);\n\t\t\t\treturn {\n\t\t\t\t\texports: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: mode.name,\n\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\texport: [\"default\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tpriority: 1,\n\t\t\t\t\tdependencies: [from.module]\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {number} effective mode\n\t */\n\t_getEffectiveExportPresenceLevel(moduleGraph) {\n\t\tif (this.exportPresenceMode !== ExportPresenceModes.AUTO)\n\t\t\treturn this.exportPresenceMode;\n\t\treturn moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule\n\t\t\t? ExportPresenceModes.ERROR\n\t\t\t: ExportPresenceModes.WARN;\n\t}\n\n\t/**\n\t * Returns warnings\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[]} warnings\n\t */\n\tgetWarnings(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.WARN) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns errors\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[]} errors\n\t */\n\tgetErrors(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.ERROR) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | undefined} errors\n\t */\n\t_getErrors(moduleGraph) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\tlet errors = this.getLinkingErrors(\n\t\t\tmoduleGraph,\n\t\t\tids,\n\t\t\t`(reexported as '${this.name}')`\n\t\t);\n\t\tif (ids.length === 0 && this.name === null) {\n\t\t\tconst potentialConflicts =\n\t\t\t\tthis._discoverActiveExportsFromOtherStarExports(moduleGraph);\n\t\t\tif (potentialConflicts && potentialConflicts.namesSlice > 0) {\n\t\t\t\tconst ownNames = new Set(\n\t\t\t\t\tpotentialConflicts.names.slice(\n\t\t\t\t\t\tpotentialConflicts.namesSlice,\n\t\t\t\t\t\tpotentialConflicts.dependencyIndices[\n\t\t\t\t\t\t\tpotentialConflicts.dependencyIndex\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tconst importedModule = moduleGraph.getModule(this);\n\t\t\t\tif (importedModule) {\n\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(importedModule);\n\t\t\t\t\tconst conflicts = new Map();\n\t\t\t\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\t\t\t\tif (exportInfo.provided !== true) continue;\n\t\t\t\t\t\tif (exportInfo.name === \"default\") continue;\n\t\t\t\t\t\tif (this.activeExports.has(exportInfo.name)) continue;\n\t\t\t\t\t\tif (ownNames.has(exportInfo.name)) continue;\n\t\t\t\t\t\tconst conflictingDependency = findDependencyForName(\n\t\t\t\t\t\t\tpotentialConflicts,\n\t\t\t\t\t\t\texportInfo.name,\n\t\t\t\t\t\t\tthis.allStarExports\n\t\t\t\t\t\t\t\t? this.allStarExports.dependencies\n\t\t\t\t\t\t\t\t: [...this.otherStarExports, this]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!conflictingDependency) continue;\n\t\t\t\t\t\tconst target = exportInfo.getTerminalBinding(moduleGraph);\n\t\t\t\t\t\tif (!target) continue;\n\t\t\t\t\t\tconst conflictingModule = moduleGraph.getModule(\n\t\t\t\t\t\t\tconflictingDependency\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (conflictingModule === importedModule) continue;\n\t\t\t\t\t\tconst conflictingExportInfo = moduleGraph.getExportInfo(\n\t\t\t\t\t\t\tconflictingModule,\n\t\t\t\t\t\t\texportInfo.name\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst conflictingTarget =\n\t\t\t\t\t\t\tconflictingExportInfo.getTerminalBinding(moduleGraph);\n\t\t\t\t\t\tif (!conflictingTarget) continue;\n\t\t\t\t\t\tif (target === conflictingTarget) continue;\n\t\t\t\t\t\tconst list = conflicts.get(conflictingDependency.request);\n\t\t\t\t\t\tif (list === undefined) {\n\t\t\t\t\t\t\tconflicts.set(conflictingDependency.request, [exportInfo.name]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlist.push(exportInfo.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const [request, exports] of conflicts) {\n\t\t\t\t\t\tif (!errors) errors = [];\n\t\t\t\t\t\terrors.push(\n\t\t\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t\t\t`The requested module '${\n\t\t\t\t\t\t\t\t\tthis.request\n\t\t\t\t\t\t\t\t}' contains conflicting star exports for the ${\n\t\t\t\t\t\t\t\t\texports.length > 1 ? \"names\" : \"name\"\n\t\t\t\t\t\t\t\t} ${exports\n\t\t\t\t\t\t\t\t\t.map(e => `'${e}'`)\n\t\t\t\t\t\t\t\t\t.join(\", \")} with the previous requested module '${request}'`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tserialize(context) {\n\t\tconst { write, setCircularReference } = context;\n\n\t\tsetCircularReference(this);\n\t\twrite(this.ids);\n\t\twrite(this.name);\n\t\twrite(this.activeExports);\n\t\twrite(this.otherStarExports);\n\t\twrite(this.exportPresenceMode);\n\t\twrite(this.allStarExports);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read, setCircularReference } = context;\n\n\t\tsetCircularReference(this);\n\t\tthis.ids = read();\n\t\tthis.name = read();\n\t\tthis.activeExports = read();\n\t\tthis.otherStarExports = read();\n\t\tthis.exportPresenceMode = read();\n\t\tthis.allStarExports = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyExportImportedSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\"\n);\n\nmodule.exports = HarmonyExportImportedSpecifierDependency;\n\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends (\n\tHarmonyImportDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst { moduleGraph, runtime, concatenationScope } = templateContext;\n\n\t\tconst dep = /** @type {HarmonyExportImportedSpecifierDependency} */ (\n\t\t\tdependency\n\t\t);\n\n\t\tconst mode = dep.getMode(moduleGraph, runtime);\n\n\t\tif (concatenationScope) {\n\t\t\tswitch (mode.type) {\n\t\t\t\tcase \"reexport-undefined\":\n\t\t\t\t\tconcatenationScope.registerRawExport(\n\t\t\t\t\t\tmode.name,\n\t\t\t\t\t\t\"/* reexport non-default export from non-harmony */ undefined\"\n\t\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (mode.type !== \"unused\" && mode.type !== \"empty-star\") {\n\t\t\tsuper.apply(dependency, source, templateContext);\n\n\t\t\tthis._addExportFragments(\n\t\t\t\ttemplateContext.initFragments,\n\t\t\t\tdep,\n\t\t\t\tmode,\n\t\t\t\ttemplateContext.module,\n\t\t\t\tmoduleGraph,\n\t\t\t\truntime,\n\t\t\t\ttemplateContext.runtimeTemplate,\n\t\t\t\ttemplateContext.runtimeRequirements\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {InitFragment[]} initFragments target array for init fragments\n\t * @param {HarmonyExportImportedSpecifierDependency} dep dependency\n\t * @param {ExportMode} mode the export mode\n\t * @param {Module} module the current module\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {RuntimeTemplate} runtimeTemplate the runtime template\n\t * @param {Set<string>} runtimeRequirements runtime requirements\n\t * @returns {void}\n\t */\n\t_addExportFragments(\n\t\tinitFragments,\n\t\tdep,\n\t\tmode,\n\t\tmodule,\n\t\tmoduleGraph,\n\t\truntime,\n\t\truntimeTemplate,\n\t\truntimeRequirements\n\t) {\n\t\tconst importedModule = moduleGraph.getModule(dep);\n\t\tconst importVar = dep.getImportVar(moduleGraph);\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\tcase \"empty-star\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t\"/* empty/unused harmony star reexport */\\n\",\n\t\t\t\t\t\tInitFragment.STAGE_HARMONY_EXPORTS,\n\t\t\t\t\t\t1\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"unused\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t`unused harmony reexport ${mode.name}`\n\t\t\t\t\t\t)}\\n`,\n\t\t\t\t\t\tInitFragment.STAGE_HARMONY_EXPORTS,\n\t\t\t\t\t\t1\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"reexport-dynamic-default\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tthis.getReexportFragment(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\"reexport default from dynamic\",\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"reexport-fake-namespace-object\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\t...this.getReexportFakeNamespaceObjectFragments(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\tmode.fakeType,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"reexport-undefined\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tthis.getReexportFragment(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\"reexport non-default export from non-harmony\",\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\n\t\t\t\t\t\t\"undefined\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"reexport-named-default\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tthis.getReexportFragment(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\"reexport default export from named module\",\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tthis.getReexportFragment(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\"reexport module object\",\n\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(mode.name, runtime),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"normal-reexport\":\n\t\t\t\tfor (const { name, ids, checked, hidden } of mode.items) {\n\t\t\t\t\tif (hidden) continue;\n\t\t\t\t\tif (checked) {\n\t\t\t\t\t\tinitFragments.push(\n\t\t\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t\t\t\"/* harmony reexport (checked) */ \" +\n\t\t\t\t\t\t\t\t\tthis.getConditionalReexportStatement(\n\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\t\t\tids,\n\t\t\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmoduleGraph.isAsync(importedModule)\n\t\t\t\t\t\t\t\t\t? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS\n\t\t\t\t\t\t\t\t\t: InitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t\t\t\t\t\tdep.sourceOrder\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitFragments.push(\n\t\t\t\t\t\t\tthis.getReexportFragment(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\"reexport safe\",\n\t\t\t\t\t\t\t\tmoduleGraph.getExportsInfo(module).getUsedName(name, runtime),\n\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t\t\t.getExportsInfo(importedModule)\n\t\t\t\t\t\t\t\t\t.getUsedName(ids, runtime),\n\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"dynamic-reexport\": {\n\t\t\t\tconst ignored = mode.hidden\n\t\t\t\t\t? combine(mode.ignored, mode.hidden)\n\t\t\t\t\t: mode.ignored;\n\t\t\t\tconst modern =\n\t\t\t\t\truntimeTemplate.supportsConst() &&\n\t\t\t\t\truntimeTemplate.supportsArrowFunction();\n\t\t\t\tlet content =\n\t\t\t\t\t\"/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\\n\" +\n\t\t\t\t\t`/* harmony reexport (unknown) */ for(${\n\t\t\t\t\t\tmodern ? \"const\" : \"var\"\n\t\t\t\t\t} __WEBPACK_IMPORT_KEY__ in ${importVar}) `;\n\n\t\t\t\t// Filter out exports which are defined by other exports\n\t\t\t\t// and filter out default export because it cannot be reexported with *\n\t\t\t\tif (ignored.size > 1) {\n\t\t\t\t\tcontent +=\n\t\t\t\t\t\t\"if(\" +\n\t\t\t\t\t\tJSON.stringify(Array.from(ignored)) +\n\t\t\t\t\t\t\".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n\t\t\t\t} else if (ignored.size === 1) {\n\t\t\t\t\tcontent += `if(__WEBPACK_IMPORT_KEY__ !== ${JSON.stringify(\n\t\t\t\t\t\tfirst(ignored)\n\t\t\t\t\t)}) `;\n\t\t\t\t}\n\n\t\t\t\tcontent += `__WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = `;\n\t\t\t\tif (modern) {\n\t\t\t\t\tcontent += `() => ${importVar}[__WEBPACK_IMPORT_KEY__]`;\n\t\t\t\t} else {\n\t\t\t\t\tcontent += `function(key) { return ${importVar}[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)`;\n\t\t\t\t}\n\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n\n\t\t\t\tconst exportsName = module.exportsArgument;\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`${content}\\n/* harmony reexport (unknown) */ ${RuntimeGlobals.definePropertyGetters}(${exportsName}, __WEBPACK_REEXPORT_OBJECT__);\\n`,\n\t\t\t\t\t\tmoduleGraph.isAsync(importedModule)\n\t\t\t\t\t\t\t? InitFragment.STAGE_ASYNC_HARMONY_IMPORTS\n\t\t\t\t\t\t\t: InitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t\t\t\tdep.sourceOrder\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\tgetReexportFragment(\n\t\tmodule,\n\t\tcomment,\n\t\tkey,\n\t\tname,\n\t\tvalueKey,\n\t\truntimeRequirements\n\t) {\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n\n\t\tconst map = new Map();\n\t\tmap.set(key, `/* ${comment} */ ${returnValue}`);\n\n\t\treturn new HarmonyExportInitFragment(module.exportsArgument, map);\n\t}\n\n\tgetReexportFakeNamespaceObjectFragments(\n\t\tmodule,\n\t\tkey,\n\t\tname,\n\t\tfakeType,\n\t\truntimeRequirements\n\t) {\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\n\t\tconst map = new Map();\n\t\tmap.set(\n\t\t\tkey,\n\t\t\t`/* reexport fake namespace object from non-harmony */ ${name}_namespace_cache || (${name}_namespace_cache = ${\n\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\n\t\t\t}(${name}${fakeType ? `, ${fakeType}` : \"\"}))`\n\t\t);\n\n\t\treturn [\n\t\t\tnew InitFragment(\n\t\t\t\t`var ${name}_namespace_cache;\\n`,\n\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t-1,\n\t\t\t\t`${name}_namespace_cache`\n\t\t\t),\n\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, map)\n\t\t];\n\t}\n\n\tgetConditionalReexportStatement(\n\t\tmodule,\n\t\tkey,\n\t\tname,\n\t\tvalueKey,\n\t\truntimeRequirements\n\t) {\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */\\n\";\n\t\t}\n\n\t\tconst exportsName = module.exportsArgument;\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\truntimeRequirements.add(RuntimeGlobals.definePropertyGetters);\n\t\truntimeRequirements.add(RuntimeGlobals.hasOwnProperty);\n\n\t\treturn `if(${RuntimeGlobals.hasOwnProperty}(${name}, ${JSON.stringify(\n\t\t\tvalueKey[0]\n\t\t)})) ${\n\t\t\tRuntimeGlobals.definePropertyGetters\n\t\t}(${exportsName}, { ${JSON.stringify(\n\t\t\tkey\n\t\t)}: function() { return ${returnValue}; } });\\n`;\n\t}\n\n\tgetReturnValue(name, valueKey) {\n\t\tif (valueKey === null) {\n\t\t\treturn `${name}_default.a`;\n\t\t}\n\n\t\tif (valueKey === \"\") {\n\t\t\treturn name;\n\t\t}\n\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */ undefined\";\n\t\t}\n\n\t\treturn `${name}${propertyAccess(valueKey)}`;\n\t}\n};\n\nclass HarmonyStarExportsList {\n\tconstructor() {\n\t\t/** @type {HarmonyExportImportedSpecifierDependency[]} */\n\t\tthis.dependencies = [];\n\t}\n\n\t/**\n\t * @param {HarmonyExportImportedSpecifierDependency} dep dependency\n\t * @returns {void}\n\t */\n\tpush(dep) {\n\t\tthis.dependencies.push(dep);\n\t}\n\n\tslice() {\n\t\treturn this.dependencies.slice();\n\t}\n\n\tserialize({ write, setCircularReference }) {\n\t\tsetCircularReference(this);\n\t\twrite(this.dependencies);\n\t}\n\n\tdeserialize({ read, setCircularReference }) {\n\t\tsetCircularReference(this);\n\t\tthis.dependencies = read();\n\t}\n}\n\nmakeSerializable(\n\tHarmonyStarExportsList,\n\t\"webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency\",\n\t\"HarmonyStarExportsList\"\n);\n\nmodule.exports.HarmonyStarExportsList = HarmonyStarExportsList;\n"]},"metadata":{},"sourceType":"script"}