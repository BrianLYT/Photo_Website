{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\n  constructor(asyncChunkLoading) {\n    super(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\n    this.asyncChunkLoading = asyncChunkLoading;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      chunkGraph,\n      chunk,\n      compilation\n    } = this;\n    const {\n      runtimeTemplate\n    } = compilation;\n    const chunkIds = Array.from(chunkGraph.getChunkEntryDependentChunksIterable(chunk)).map(chunk => {\n      return chunk.id;\n    });\n    return Template.asString([`var next = ${RuntimeGlobals.startup};`, `${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\"\", !this.asyncChunkLoading ? chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`).concat(\"return next();\") : chunkIds.length === 1 ? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunkIds[0])}).then(next);` : chunkIds.length > 2 ? [// using map is shorter for 3 or more chunks\n    `return Promise.all(${JSON.stringify(chunkIds)}.map(${RuntimeGlobals.ensureChunk}, __webpack_require__)).then(next);`] : [// calling ensureChunk directly is shorter for 0 - 2 chunks\n    \"return Promise.all([\", Template.indent(chunkIds.map(id => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`).join(\",\\n\")), \"]).then(next);\"])};`]);\n  }\n\n}\n\nmodule.exports = StartupChunkDependenciesRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/runtime/StartupChunkDependenciesRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","StartupChunkDependenciesRuntimeModule","constructor","asyncChunkLoading","STAGE_TRIGGER","generate","chunkGraph","chunk","compilation","runtimeTemplate","chunkIds","Array","from","getChunkEntryDependentChunksIterable","map","id","asString","startup","basicFunction","ensureChunk","JSON","stringify","concat","length","indent","join","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA7B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMG,qCAAN,SAAoDF,aAApD,CAAkE;AACjEG,EAAAA,WAAW,CAACC,iBAAD,EAAoB;AAC9B,UAAM,4BAAN,EAAoCJ,aAAa,CAACK,aAAlD;AACA,SAAKD,iBAAL,GAAyBA,iBAAzB;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAAqC,IAA3C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAsBD,WAA5B;AACA,UAAME,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAChBN,UAAU,CAACO,oCAAX,CAAgDN,KAAhD,CADgB,EAEfO,GAFe,CAEXP,KAAK,IAAI;AACd,aAAOA,KAAK,CAACQ,EAAb;AACA,KAJgB,CAAjB;AAKA,WAAOf,QAAQ,CAACgB,QAAT,CAAkB,CACvB,cAAanB,cAAc,CAACoB,OAAQ,GADb,EAEvB,GAAEpB,cAAc,CAACoB,OAAQ,MAAKR,eAAe,CAACS,aAAhB,CAC9B,EAD8B,EAE9B,CAAC,KAAKf,iBAAN,GACGO,QAAQ,CACPI,GADD,CAECC,EAAE,IAAK,GAAElB,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAL,CAAeN,EAAf,CAAmB,IAF3D,EAICO,MAJD,CAIQ,gBAJR,CADH,GAMGZ,QAAQ,CAACa,MAAT,KAAoB,CAApB,GACC,UAAS1B,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAL,CACxCX,QAAQ,CAAC,CAAD,CADgC,CAEtC,eAHF,GAIAA,QAAQ,CAACa,MAAT,GAAkB,CAAlB,GACA,CACA;AACC,0BAAqBH,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAyB,QAC9Cb,cAAc,CAACsB,WACf,qCAJD,CADA,GAOA,CACA;AACA,0BAFA,EAGAnB,QAAQ,CAACwB,MAAT,CACCd,QAAQ,CACNI,GADF,CAEEC,EAAE,IAAK,GAAElB,cAAc,CAACsB,WAAY,IAAGC,IAAI,CAACC,SAAL,CAAeN,EAAf,CAAmB,GAF5D,EAIEU,IAJF,CAIO,KAJP,CADD,CAHA,EAUA,gBAVA,CAnB2B,CA+B7B,GAjCsB,CAAlB,CAAP;AAmCA;;AApDgE;;AAuDlEC,MAAM,CAACC,OAAP,GAAiB1B,qCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\nclass StartupChunkDependenciesRuntimeModule extends RuntimeModule {\n\tconstructor(asyncChunkLoading) {\n\t\tsuper(\"startup chunk dependencies\", RuntimeModule.STAGE_TRIGGER);\n\t\tthis.asyncChunkLoading = asyncChunkLoading;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk, compilation } = this;\n\t\tconst { runtimeTemplate } = compilation;\n\t\tconst chunkIds = Array.from(\n\t\t\tchunkGraph.getChunkEntryDependentChunksIterable(chunk)\n\t\t).map(chunk => {\n\t\t\treturn chunk.id;\n\t\t});\n\t\treturn Template.asString([\n\t\t\t`var next = ${RuntimeGlobals.startup};`,\n\t\t\t`${RuntimeGlobals.startup} = ${runtimeTemplate.basicFunction(\n\t\t\t\t\"\",\n\t\t\t\t!this.asyncChunkLoading\n\t\t\t\t\t? chunkIds\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\tid => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)});`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.concat(\"return next();\")\n\t\t\t\t\t: chunkIds.length === 1\n\t\t\t\t\t? `return ${RuntimeGlobals.ensureChunk}(${JSON.stringify(\n\t\t\t\t\t\t\tchunkIds[0]\n\t\t\t\t\t  )}).then(next);`\n\t\t\t\t\t: chunkIds.length > 2\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t// using map is shorter for 3 or more chunks\n\t\t\t\t\t\t\t`return Promise.all(${JSON.stringify(chunkIds)}.map(${\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunk\n\t\t\t\t\t\t\t}, __webpack_require__)).then(next);`\n\t\t\t\t\t  ]\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t// calling ensureChunk directly is shorter for 0 - 2 chunks\n\t\t\t\t\t\t\t\"return Promise.all([\",\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\tchunkIds\n\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\tid => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(id)})`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.join(\",\\n\")\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"]).then(next);\"\n\t\t\t\t\t  ]\n\t\t\t)};`\n\t\t]);\n\t}\n}\n\nmodule.exports = StartupChunkDependenciesRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}