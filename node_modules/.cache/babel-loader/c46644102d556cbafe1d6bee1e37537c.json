{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nclass AMDDefineRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"amd define\");\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdDefine} = function () {`, Template.indent(\"throw new Error('define cannot be used indirect');\"), \"};\"]);\n  }\n\n}\n\nclass AMDOptionsRuntimeModule extends RuntimeModule {\n  /**\n   * @param {Record<string, boolean | number | string>} options the AMD options\n   */\n  constructor(options) {\n    super(\"amd options\");\n    this.options = options;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`]);\n  }\n\n}\n\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/AMDRuntimeModules.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","AMDDefineRuntimeModule","constructor","generate","asString","amdDefine","indent","AMDOptionsRuntimeModule","options","amdOptions","JSON","stringify","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA7B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMG,sBAAN,SAAqCF,aAArC,CAAmD;AAClDG,EAAAA,WAAW,GAAG;AACb,UAAM,YAAN;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,QAAQ,GAAG;AACV,WAAOH,QAAQ,CAACI,QAAT,CAAkB,CACvB,GAAEP,cAAc,CAACQ,SAAU,kBADJ,EAExBL,QAAQ,CAACM,MAAT,CAAgB,oDAAhB,CAFwB,EAGxB,IAHwB,CAAlB,CAAP;AAKA;;AAdiD;;AAiBnD,MAAMC,uBAAN,SAAsCR,aAAtC,CAAoD;AACnD;AACD;AACA;AACCG,EAAAA,WAAW,CAACM,OAAD,EAAU;AACpB,UAAM,aAAN;AACA,SAAKA,OAAL,GAAeA,OAAf;AACA;AAED;AACD;AACA;;;AACCL,EAAAA,QAAQ,GAAG;AACV,WAAOH,QAAQ,CAACI,QAAT,CAAkB,CACvB,GAAEP,cAAc,CAACY,UAAW,MAAKC,IAAI,CAACC,SAAL,CAAe,KAAKH,OAApB,CAA6B,GADvC,CAAlB,CAAP;AAGA;;AAhBkD;;AAmBpDI,OAAO,CAACX,sBAAR,GAAiCA,sBAAjC;AACAW,OAAO,CAACL,uBAAR,GAAkCA,uBAAlC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\nclass AMDDefineRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"amd define\");\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\treturn Template.asString([\n\t\t\t`${RuntimeGlobals.amdDefine} = function () {`,\n\t\t\tTemplate.indent(\"throw new Error('define cannot be used indirect');\"),\n\t\t\t\"};\"\n\t\t]);\n\t}\n}\n\nclass AMDOptionsRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Record<string, boolean | number | string>} options the AMD options\n\t */\n\tconstructor(options) {\n\t\tsuper(\"amd options\");\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\treturn Template.asString([\n\t\t\t`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`\n\t\t]);\n\t}\n}\n\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}