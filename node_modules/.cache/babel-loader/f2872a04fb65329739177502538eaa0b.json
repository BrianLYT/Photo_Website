{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Hash {\n  /* istanbul ignore next */\n\n  /**\n   * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n   * @abstract\n   * @param {string|Buffer} data data\n   * @param {string=} inputEncoding data encoding\n   * @returns {this} updated hash\n   */\n  update(data, inputEncoding) {\n    const AbstractMethodError = require(\"../AbstractMethodError\");\n\n    throw new AbstractMethodError();\n  }\n  /* istanbul ignore next */\n\n  /**\n   * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n   * @abstract\n   * @param {string=} encoding encoding of the return value\n   * @returns {string|Buffer} digest\n   */\n\n\n  digest(encoding) {\n    const AbstractMethodError = require(\"../AbstractMethodError\");\n\n    throw new AbstractMethodError();\n  }\n\n}\n\nmodule.exports = Hash;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/Hash.js"],"names":["Hash","update","data","inputEncoding","AbstractMethodError","require","digest","encoding","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,IAAN,CAAW;AACV;;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,MAAM,CAACC,IAAD,EAAOC,aAAP,EAAsB;AAC3B,UAAMC,mBAAmB,GAAGC,OAAO,CAAC,wBAAD,CAAnC;;AACA,UAAM,IAAID,mBAAJ,EAAN;AACA;AAED;;AACA;AACD;AACA;AACA;AACA;AACA;;;AACCE,EAAAA,MAAM,CAACC,QAAD,EAAW;AAChB,UAAMH,mBAAmB,GAAGC,OAAO,CAAC,wBAAD,CAAnC;;AACA,UAAM,IAAID,mBAAJ,EAAN;AACA;;AAxBS;;AA2BXI,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nclass Hash {\n\t/* istanbul ignore next */\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @abstract\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding\n\t * @returns {this} updated hash\n\t */\n\tupdate(data, inputEncoding) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n\t * @abstract\n\t * @param {string=} encoding encoding of the return value\n\t * @returns {string|Buffer} digest\n\t */\n\tdigest(encoding) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nmodule.exports = Hash;\n"]},"metadata":{},"sourceType":"script"}