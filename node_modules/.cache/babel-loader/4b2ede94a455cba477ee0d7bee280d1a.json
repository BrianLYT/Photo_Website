{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass CompatSource extends Source {\n  static from(sourceLike) {\n    return sourceLike instanceof Source ? sourceLike : new CompatSource(sourceLike);\n  }\n\n  constructor(sourceLike) {\n    super();\n    this._sourceLike = sourceLike;\n  }\n\n  source() {\n    return this._sourceLike.source();\n  }\n\n  buffer() {\n    if (typeof this._sourceLike.buffer === \"function\") {\n      return this._sourceLike.buffer();\n    }\n\n    return super.buffer();\n  }\n\n  size() {\n    if (typeof this._sourceLike.size === \"function\") {\n      return this._sourceLike.size();\n    }\n\n    return super.size();\n  }\n\n  map(options) {\n    if (typeof this._sourceLike.map === \"function\") {\n      return this._sourceLike.map(options);\n    }\n\n    return super.map(options);\n  }\n\n  sourceAndMap(options) {\n    if (typeof this._sourceLike.sourceAndMap === \"function\") {\n      return this._sourceLike.sourceAndMap(options);\n    }\n\n    return super.sourceAndMap(options);\n  }\n\n  updateHash(hash) {\n    if (typeof this._sourceLike.updateHash === \"function\") {\n      return this._sourceLike.updateHash(hash);\n    }\n\n    if (typeof this._sourceLike.map === \"function\") {\n      throw new Error(\"A Source-like object with a 'map' method must also provide an 'updateHash' method\");\n    }\n\n    hash.update(this.buffer());\n  }\n\n}\n\nmodule.exports = CompatSource;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack-sources/lib/CompatSource.js"],"names":["Source","require","CompatSource","from","sourceLike","constructor","_sourceLike","source","buffer","size","map","options","sourceAndMap","updateHash","hash","Error","update","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMC,YAAN,SAA2BF,MAA3B,CAAkC;AACtB,SAAJG,IAAI,CAACC,UAAD,EAAa;AACvB,WAAOA,UAAU,YAAYJ,MAAtB,GACJI,UADI,GAEJ,IAAIF,YAAJ,CAAiBE,UAAjB,CAFH;AAGA;;AAEDC,EAAAA,WAAW,CAACD,UAAD,EAAa;AACvB;AACA,SAAKE,WAAL,GAAmBF,UAAnB;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKD,WAAL,CAAiBC,MAAjB,EAAP;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,OAAO,KAAKF,WAAL,CAAiBE,MAAxB,KAAmC,UAAvC,EAAmD;AAClD,aAAO,KAAKF,WAAL,CAAiBE,MAAjB,EAAP;AACA;;AACD,WAAO,MAAMA,MAAN,EAAP;AACA;;AAEDC,EAAAA,IAAI,GAAG;AACN,QAAI,OAAO,KAAKH,WAAL,CAAiBG,IAAxB,KAAiC,UAArC,EAAiD;AAChD,aAAO,KAAKH,WAAL,CAAiBG,IAAjB,EAAP;AACA;;AACD,WAAO,MAAMA,IAAN,EAAP;AACA;;AAEDC,EAAAA,GAAG,CAACC,OAAD,EAAU;AACZ,QAAI,OAAO,KAAKL,WAAL,CAAiBI,GAAxB,KAAgC,UAApC,EAAgD;AAC/C,aAAO,KAAKJ,WAAL,CAAiBI,GAAjB,CAAqBC,OAArB,CAAP;AACA;;AACD,WAAO,MAAMD,GAAN,CAAUC,OAAV,CAAP;AACA;;AAEDC,EAAAA,YAAY,CAACD,OAAD,EAAU;AACrB,QAAI,OAAO,KAAKL,WAAL,CAAiBM,YAAxB,KAAyC,UAA7C,EAAyD;AACxD,aAAO,KAAKN,WAAL,CAAiBM,YAAjB,CAA8BD,OAA9B,CAAP;AACA;;AACD,WAAO,MAAMC,YAAN,CAAmBD,OAAnB,CAAP;AACA;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChB,QAAI,OAAO,KAAKR,WAAL,CAAiBO,UAAxB,KAAuC,UAA3C,EAAuD;AACtD,aAAO,KAAKP,WAAL,CAAiBO,UAAjB,CAA4BC,IAA5B,CAAP;AACA;;AACD,QAAI,OAAO,KAAKR,WAAL,CAAiBI,GAAxB,KAAgC,UAApC,EAAgD;AAC/C,YAAM,IAAIK,KAAJ,CACL,mFADK,CAAN;AAGA;;AACDD,IAAAA,IAAI,CAACE,MAAL,CAAY,KAAKR,MAAL,EAAZ;AACA;;AAtDgC;;AAyDlCS,MAAM,CAACC,OAAP,GAAiBhB,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass CompatSource extends Source {\n\tstatic from(sourceLike) {\n\t\treturn sourceLike instanceof Source\n\t\t\t? sourceLike\n\t\t\t: new CompatSource(sourceLike);\n\t}\n\n\tconstructor(sourceLike) {\n\t\tsuper();\n\t\tthis._sourceLike = sourceLike;\n\t}\n\n\tsource() {\n\t\treturn this._sourceLike.source();\n\t}\n\n\tbuffer() {\n\t\tif (typeof this._sourceLike.buffer === \"function\") {\n\t\t\treturn this._sourceLike.buffer();\n\t\t}\n\t\treturn super.buffer();\n\t}\n\n\tsize() {\n\t\tif (typeof this._sourceLike.size === \"function\") {\n\t\t\treturn this._sourceLike.size();\n\t\t}\n\t\treturn super.size();\n\t}\n\n\tmap(options) {\n\t\tif (typeof this._sourceLike.map === \"function\") {\n\t\t\treturn this._sourceLike.map(options);\n\t\t}\n\t\treturn super.map(options);\n\t}\n\n\tsourceAndMap(options) {\n\t\tif (typeof this._sourceLike.sourceAndMap === \"function\") {\n\t\t\treturn this._sourceLike.sourceAndMap(options);\n\t\t}\n\t\treturn super.sourceAndMap(options);\n\t}\n\n\tupdateHash(hash) {\n\t\tif (typeof this._sourceLike.updateHash === \"function\") {\n\t\t\treturn this._sourceLike.updateHash(hash);\n\t\t}\n\t\tif (typeof this._sourceLike.map === \"function\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"A Source-like object with a 'map' method must also provide an 'updateHash' method\"\n\t\t\t);\n\t\t}\n\t\thash.update(this.buffer());\n\t}\n}\n\nmodule.exports = CompatSource;\n"]},"metadata":{},"sourceType":"script"}