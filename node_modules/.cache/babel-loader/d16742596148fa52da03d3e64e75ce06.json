{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CommonJsChunkFormatPlugin = require(\"../javascript/CommonJsChunkFormatPlugin\");\n\nconst EnableChunkLoadingPlugin = require(\"../javascript/EnableChunkLoadingPlugin\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass NodeTemplatePlugin {\n  constructor(options) {\n    this._options = options || {};\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const chunkLoading = this._options.asyncChunkLoading ? \"async-node\" : \"require\";\n    compiler.options.output.chunkLoading = chunkLoading;\n    new CommonJsChunkFormatPlugin().apply(compiler);\n    new EnableChunkLoadingPlugin(chunkLoading).apply(compiler);\n  }\n\n}\n\nmodule.exports = NodeTemplatePlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/node/NodeTemplatePlugin.js"],"names":["CommonJsChunkFormatPlugin","require","EnableChunkLoadingPlugin","NodeTemplatePlugin","constructor","options","_options","apply","compiler","chunkLoading","asyncChunkLoading","output","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,yBAAyB,GAAGC,OAAO,CAAC,yCAAD,CAAzC;;AACA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,wCAAD,CAAxC;AAEA;;;AAEA,MAAME,kBAAN,CAAyB;AACxBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKC,QAAL,GAAgBD,OAAO,IAAI,EAA3B;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMC,YAAY,GAAG,KAAKH,QAAL,CAAcI,iBAAd,GAClB,YADkB,GAElB,SAFH;AAGAF,IAAAA,QAAQ,CAACH,OAAT,CAAiBM,MAAjB,CAAwBF,YAAxB,GAAuCA,YAAvC;AACA,QAAIT,yBAAJ,GAAgCO,KAAhC,CAAsCC,QAAtC;AACA,QAAIN,wBAAJ,CAA6BO,YAA7B,EAA2CF,KAA3C,CAAiDC,QAAjD;AACA;;AAjBuB;;AAoBzBI,MAAM,CAACC,OAAP,GAAiBV,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst CommonJsChunkFormatPlugin = require(\"../javascript/CommonJsChunkFormatPlugin\");\nconst EnableChunkLoadingPlugin = require(\"../javascript/EnableChunkLoadingPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass NodeTemplatePlugin {\n\tconstructor(options) {\n\t\tthis._options = options || {};\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst chunkLoading = this._options.asyncChunkLoading\n\t\t\t? \"async-node\"\n\t\t\t: \"require\";\n\t\tcompiler.options.output.chunkLoading = chunkLoading;\n\t\tnew CommonJsChunkFormatPlugin().apply(compiler);\n\t\tnew EnableChunkLoadingPlugin(chunkLoading).apply(compiler);\n\t}\n}\n\nmodule.exports = NodeTemplatePlugin;\n"]},"metadata":{},"sourceType":"script"}