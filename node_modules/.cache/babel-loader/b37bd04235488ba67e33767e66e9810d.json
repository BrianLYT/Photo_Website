{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Module = require(\"../Module\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst FallbackDependency = require(\"./FallbackDependency\");\n\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"remote\", \"share-init\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\n\nclass RemoteModule extends Module {\n  /**\n   * @param {string} request request string\n   * @param {string[]} externalRequests list of external requests to containers\n   * @param {string} internalRequest name of exposed module in container\n   * @param {string} shareScope the used share scope name\n   */\n  constructor(request, externalRequests, internalRequest, shareScope) {\n    super(\"remote-module\");\n    this.request = request;\n    this.externalRequests = externalRequests;\n    this.internalRequest = internalRequest;\n    this.shareScope = shareScope;\n    this._identifier = `remote (${shareScope}) ${this.externalRequests.join(\" \")} ${this.internalRequest}`;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return this._identifier;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `remote ${this.request}`;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/remote/${this.request}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      strict: true\n    };\n    this.clearDependenciesAndBlocks();\n\n    if (this.externalRequests.length === 1) {\n      this.addDependency(new RemoteToExternalDependency(this.externalRequests[0]));\n    } else {\n      this.addDependency(new FallbackDependency(this.externalRequests));\n    }\n\n    callback();\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 6;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n   */\n\n\n  nameForCondition() {\n    return this.request;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref;\n    const module = moduleGraph.getModule(this.dependencies[0]);\n    const id = module && chunkGraph.getModuleId(module);\n    const sources = new Map();\n    sources.set(\"remote\", new RawSource(\"\"));\n    const data = new Map();\n    data.set(\"share-init\", [{\n      shareScope: this.shareScope,\n      initStage: 20,\n      init: id === undefined ? \"\" : `initExternal(${JSON.stringify(id)});`\n    }]);\n    return {\n      sources,\n      data,\n      runtimeRequirements: RUNTIME_REQUIREMENTS\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.externalRequests);\n    write(this.internalRequest);\n    write(this.shareScope);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new RemoteModule(read(), read(), read(), read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(RemoteModule, \"webpack/lib/container/RemoteModule\");\nmodule.exports = RemoteModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/container/RemoteModule.js"],"names":["RawSource","require","Module","RuntimeGlobals","makeSerializable","FallbackDependency","RemoteToExternalDependency","TYPES","Set","RUNTIME_REQUIREMENTS","module","RemoteModule","constructor","request","externalRequests","internalRequest","shareScope","_identifier","join","identifier","readableIdentifier","requestShortener","libIdent","options","layer","needBuild","context","callback","buildInfo","build","compilation","resolver","fs","buildMeta","strict","clearDependenciesAndBlocks","length","addDependency","size","type","getSourceTypes","nameForCondition","codeGeneration","runtimeTemplate","moduleGraph","chunkGraph","getModule","dependencies","id","getModuleId","sources","Map","set","data","initStage","init","undefined","JSON","stringify","runtimeRequirements","serialize","write","deserialize","read","obj","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst FallbackDependency = require(\"./FallbackDependency\");\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"remote\", \"share-init\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\n\nclass RemoteModule extends Module {\n\t/**\n\t * @param {string} request request string\n\t * @param {string[]} externalRequests list of external requests to containers\n\t * @param {string} internalRequest name of exposed module in container\n\t * @param {string} shareScope the used share scope name\n\t */\n\tconstructor(request, externalRequests, internalRequest, shareScope) {\n\t\tsuper(\"remote-module\");\n\t\tthis.request = request;\n\t\tthis.externalRequests = externalRequests;\n\t\tthis.internalRequest = internalRequest;\n\t\tthis.shareScope = shareScope;\n\t\tthis._identifier = `remote (${shareScope}) ${this.externalRequests.join(\n\t\t\t\" \"\n\t\t)} ${this.internalRequest}`;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `remote ${this.request}`;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/remote/${\n\t\t\tthis.request\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true\n\t\t};\n\n\t\tthis.clearDependenciesAndBlocks();\n\t\tif (this.externalRequests.length === 1) {\n\t\t\tthis.addDependency(\n\t\t\t\tnew RemoteToExternalDependency(this.externalRequests[0])\n\t\t\t);\n\t\t} else {\n\t\t\tthis.addDependency(new FallbackDependency(this.externalRequests));\n\t\t}\n\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 6;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n\t */\n\tnameForCondition() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst module = moduleGraph.getModule(this.dependencies[0]);\n\t\tconst id = module && chunkGraph.getModuleId(module);\n\t\tconst sources = new Map();\n\t\tsources.set(\"remote\", new RawSource(\"\"));\n\t\tconst data = new Map();\n\t\tdata.set(\"share-init\", [\n\t\t\t{\n\t\t\t\tshareScope: this.shareScope,\n\t\t\t\tinitStage: 20,\n\t\t\t\tinit: id === undefined ? \"\" : `initExternal(${JSON.stringify(id)});`\n\t\t\t}\n\t\t]);\n\t\treturn { sources, data, runtimeRequirements: RUNTIME_REQUIREMENTS };\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.request);\n\t\twrite(this.externalRequests);\n\t\twrite(this.internalRequest);\n\t\twrite(this.shareScope);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new RemoteModule(read(), read(), read(), read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(RemoteModule, \"webpack/lib/container/RemoteModule\");\n\nmodule.exports = RemoteModule;\n"]},"metadata":{},"sourceType":"script"}