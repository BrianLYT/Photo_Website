{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst loaderFlag = \"LOADER_EXECUTION\";\nconst webpackOptionsFlag = \"WEBPACK_OPTIONS\";\n\nexports.cutOffByFlag = (stack, flag) => {\n  stack = stack.split(\"\\n\");\n\n  for (let i = 0; i < stack.length; i++) {\n    if (stack[i].includes(flag)) {\n      stack.length = i;\n    }\n  }\n\n  return stack.join(\"\\n\");\n};\n\nexports.cutOffLoaderExecution = stack => exports.cutOffByFlag(stack, loaderFlag);\n\nexports.cutOffWebpackOptions = stack => exports.cutOffByFlag(stack, webpackOptionsFlag);\n\nexports.cutOffMultilineMessage = (stack, message) => {\n  stack = stack.split(\"\\n\");\n  message = message.split(\"\\n\");\n  const result = [];\n  stack.forEach((line, idx) => {\n    if (!line.includes(message[idx])) result.push(line);\n  });\n  return result.join(\"\\n\");\n};\n\nexports.cutOffMessage = (stack, message) => {\n  const nextLine = stack.indexOf(\"\\n\");\n\n  if (nextLine === -1) {\n    return stack === message ? \"\" : stack;\n  } else {\n    const firstLine = stack.substr(0, nextLine);\n    return firstLine === message ? stack.substr(nextLine + 1) : stack;\n  }\n};\n\nexports.cleanUp = (stack, message) => {\n  stack = exports.cutOffLoaderExecution(stack);\n  stack = exports.cutOffMessage(stack, message);\n  return stack;\n};\n\nexports.cleanUpWebpackOptions = (stack, message) => {\n  stack = exports.cutOffWebpackOptions(stack);\n  stack = exports.cutOffMultilineMessage(stack, message);\n  return stack;\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/ErrorHelpers.js"],"names":["loaderFlag","webpackOptionsFlag","exports","cutOffByFlag","stack","flag","split","i","length","includes","join","cutOffLoaderExecution","cutOffWebpackOptions","cutOffMultilineMessage","message","result","forEach","line","idx","push","cutOffMessage","nextLine","indexOf","firstLine","substr","cleanUp","cleanUpWebpackOptions"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAG,kBAAnB;AAEA,MAAMC,kBAAkB,GAAG,iBAA3B;;AAEAC,OAAO,CAACC,YAAR,GAAuB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACvCD,EAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,IAAZ,CAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,QAAIH,KAAK,CAACG,CAAD,CAAL,CAASE,QAAT,CAAkBJ,IAAlB,CAAJ,EAA6B;AAC5BD,MAAAA,KAAK,CAACI,MAAN,GAAeD,CAAf;AACA;AACD;;AACD,SAAOH,KAAK,CAACM,IAAN,CAAW,IAAX,CAAP;AACA,CARD;;AAUAR,OAAO,CAACS,qBAAR,GAAgCP,KAAK,IACpCF,OAAO,CAACC,YAAR,CAAqBC,KAArB,EAA4BJ,UAA5B,CADD;;AAGAE,OAAO,CAACU,oBAAR,GAA+BR,KAAK,IACnCF,OAAO,CAACC,YAAR,CAAqBC,KAArB,EAA4BH,kBAA5B,CADD;;AAGAC,OAAO,CAACW,sBAAR,GAAiC,CAACT,KAAD,EAAQU,OAAR,KAAoB;AACpDV,EAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,IAAZ,CAAR;AACAQ,EAAAA,OAAO,GAAGA,OAAO,CAACR,KAAR,CAAc,IAAd,CAAV;AAEA,QAAMS,MAAM,GAAG,EAAf;AAEAX,EAAAA,KAAK,CAACY,OAAN,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,QAAI,CAACD,IAAI,CAACR,QAAL,CAAcK,OAAO,CAACI,GAAD,CAArB,CAAL,EAAkCH,MAAM,CAACI,IAAP,CAAYF,IAAZ;AAClC,GAFD;AAIA,SAAOF,MAAM,CAACL,IAAP,CAAY,IAAZ,CAAP;AACA,CAXD;;AAaAR,OAAO,CAACkB,aAAR,GAAwB,CAAChB,KAAD,EAAQU,OAAR,KAAoB;AAC3C,QAAMO,QAAQ,GAAGjB,KAAK,CAACkB,OAAN,CAAc,IAAd,CAAjB;;AACA,MAAID,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACpB,WAAOjB,KAAK,KAAKU,OAAV,GAAoB,EAApB,GAAyBV,KAAhC;AACA,GAFD,MAEO;AACN,UAAMmB,SAAS,GAAGnB,KAAK,CAACoB,MAAN,CAAa,CAAb,EAAgBH,QAAhB,CAAlB;AACA,WAAOE,SAAS,KAAKT,OAAd,GAAwBV,KAAK,CAACoB,MAAN,CAAaH,QAAQ,GAAG,CAAxB,CAAxB,GAAqDjB,KAA5D;AACA;AACD,CARD;;AAUAF,OAAO,CAACuB,OAAR,GAAkB,CAACrB,KAAD,EAAQU,OAAR,KAAoB;AACrCV,EAAAA,KAAK,GAAGF,OAAO,CAACS,qBAAR,CAA8BP,KAA9B,CAAR;AACAA,EAAAA,KAAK,GAAGF,OAAO,CAACkB,aAAR,CAAsBhB,KAAtB,EAA6BU,OAA7B,CAAR;AACA,SAAOV,KAAP;AACA,CAJD;;AAMAF,OAAO,CAACwB,qBAAR,GAAgC,CAACtB,KAAD,EAAQU,OAAR,KAAoB;AACnDV,EAAAA,KAAK,GAAGF,OAAO,CAACU,oBAAR,CAA6BR,KAA7B,CAAR;AACAA,EAAAA,KAAK,GAAGF,OAAO,CAACW,sBAAR,CAA+BT,KAA/B,EAAsCU,OAAtC,CAAR;AACA,SAAOV,KAAP;AACA,CAJD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst loaderFlag = \"LOADER_EXECUTION\";\n\nconst webpackOptionsFlag = \"WEBPACK_OPTIONS\";\n\nexports.cutOffByFlag = (stack, flag) => {\n\tstack = stack.split(\"\\n\");\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tif (stack[i].includes(flag)) {\n\t\t\tstack.length = i;\n\t\t}\n\t}\n\treturn stack.join(\"\\n\");\n};\n\nexports.cutOffLoaderExecution = stack =>\n\texports.cutOffByFlag(stack, loaderFlag);\n\nexports.cutOffWebpackOptions = stack =>\n\texports.cutOffByFlag(stack, webpackOptionsFlag);\n\nexports.cutOffMultilineMessage = (stack, message) => {\n\tstack = stack.split(\"\\n\");\n\tmessage = message.split(\"\\n\");\n\n\tconst result = [];\n\n\tstack.forEach((line, idx) => {\n\t\tif (!line.includes(message[idx])) result.push(line);\n\t});\n\n\treturn result.join(\"\\n\");\n};\n\nexports.cutOffMessage = (stack, message) => {\n\tconst nextLine = stack.indexOf(\"\\n\");\n\tif (nextLine === -1) {\n\t\treturn stack === message ? \"\" : stack;\n\t} else {\n\t\tconst firstLine = stack.substr(0, nextLine);\n\t\treturn firstLine === message ? stack.substr(nextLine + 1) : stack;\n\t}\n};\n\nexports.cleanUp = (stack, message) => {\n\tstack = exports.cutOffLoaderExecution(stack);\n\tstack = exports.cutOffMessage(stack, message);\n\treturn stack;\n};\n\nexports.cleanUpWebpackOptions = (stack, message) => {\n\tstack = exports.cutOffWebpackOptions(stack);\n\tstack = exports.cutOffMultilineMessage(stack, message);\n\treturn stack;\n};\n"]},"metadata":{},"sourceType":"script"}