{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\n\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\n\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\n\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\n\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\n\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\n\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\n\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\n\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\n\nconst HarmonyTopLevelThisParserPlugin = require(\"./HarmonyTopLevelThisParserPlugin\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass HarmonyModulesPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"HarmonyModulesPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyTemplates.set(HarmonyCompatibilityDependency, new HarmonyCompatibilityDependency.Template());\n      compilation.dependencyFactories.set(HarmonyImportSideEffectDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyImportSideEffectDependency, new HarmonyImportSideEffectDependency.Template());\n      compilation.dependencyFactories.set(HarmonyImportSpecifierDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyImportSpecifierDependency, new HarmonyImportSpecifierDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportHeaderDependency, new HarmonyExportHeaderDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportExpressionDependency, new HarmonyExportExpressionDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyExportSpecifierDependency, new HarmonyExportSpecifierDependency.Template());\n      compilation.dependencyFactories.set(HarmonyExportImportedSpecifierDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyExportImportedSpecifierDependency, new HarmonyExportImportedSpecifierDependency.Template());\n      compilation.dependencyTemplates.set(HarmonyAcceptDependency, new HarmonyAcceptDependency.Template());\n      compilation.dependencyFactories.set(HarmonyAcceptImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(HarmonyAcceptImportDependency, new HarmonyAcceptImportDependency.Template());\n\n      const handler = (parser, parserOptions) => {\n        // TODO webpack 6: rename harmony to esm or module\n        if (parserOptions.harmony !== undefined && !parserOptions.harmony) return;\n        new HarmonyDetectionParserPlugin(this.options).apply(parser);\n        new HarmonyImportDependencyParserPlugin(parserOptions).apply(parser);\n        new HarmonyExportDependencyParserPlugin(parserOptions).apply(parser);\n        new HarmonyTopLevelThisParserPlugin().apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"HarmonyModulesPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"HarmonyModulesPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = HarmonyModulesPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyModulesPlugin.js"],"names":["HarmonyAcceptDependency","require","HarmonyAcceptImportDependency","HarmonyCompatibilityDependency","HarmonyExportExpressionDependency","HarmonyExportHeaderDependency","HarmonyExportImportedSpecifierDependency","HarmonyExportSpecifierDependency","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","HarmonyDetectionParserPlugin","HarmonyExportDependencyParserPlugin","HarmonyImportDependencyParserPlugin","HarmonyTopLevelThisParserPlugin","HarmonyModulesPlugin","constructor","options","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","handler","parser","parserOptions","harmony","undefined","for","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMC,6BAA6B,GAAGD,OAAO,CAAC,iCAAD,CAA7C;;AACA,MAAME,8BAA8B,GAAGF,OAAO,CAAC,kCAAD,CAA9C;;AACA,MAAMG,iCAAiC,GAAGH,OAAO,CAAC,qCAAD,CAAjD;;AACA,MAAMI,6BAA6B,GAAGJ,OAAO,CAAC,iCAAD,CAA7C;;AACA,MAAMK,wCAAwC,GAAGL,OAAO,CAAC,4CAAD,CAAxD;;AACA,MAAMM,gCAAgC,GAAGN,OAAO,CAAC,oCAAD,CAAhD;;AACA,MAAMO,iCAAiC,GAAGP,OAAO,CAAC,qCAAD,CAAjD;;AACA,MAAMQ,gCAAgC,GAAGR,OAAO,CAAC,oCAAD,CAAhD;;AAEA,MAAMS,4BAA4B,GAAGT,OAAO,CAAC,gCAAD,CAA5C;;AACA,MAAMU,mCAAmC,GAAGV,OAAO,CAAC,uCAAD,CAAnD;;AACA,MAAMW,mCAAmC,GAAGX,OAAO,CAAC,uCAAD,CAAnD;;AACA,MAAMY,+BAA+B,GAAGZ,OAAO,CAAC,mCAAD,CAA/C;AAEA;;;AAEA,MAAMa,oBAAN,CAA2B;AAC1BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,sBADD,EAEC,CAACD,WAAD,WAA0C;AAAA,UAA5B;AAAEE,QAAAA;AAAF,OAA4B;AACzCF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCrB,8BADD,EAEC,IAAIA,8BAA8B,CAACsB,QAAnC,EAFD;AAKAL,MAAAA,WAAW,CAACM,mBAAZ,CAAgCF,GAAhC,CACChB,iCADD,EAECc,mBAFD;AAIAF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACChB,iCADD,EAEC,IAAIA,iCAAiC,CAACiB,QAAtC,EAFD;AAKAL,MAAAA,WAAW,CAACM,mBAAZ,CAAgCF,GAAhC,CACCf,gCADD,EAECa,mBAFD;AAIAF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCf,gCADD,EAEC,IAAIA,gCAAgC,CAACgB,QAArC,EAFD;AAKAL,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCnB,6BADD,EAEC,IAAIA,6BAA6B,CAACoB,QAAlC,EAFD;AAKAL,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCpB,iCADD,EAEC,IAAIA,iCAAiC,CAACqB,QAAtC,EAFD;AAKAL,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCjB,gCADD,EAEC,IAAIA,gCAAgC,CAACkB,QAArC,EAFD;AAKAL,MAAAA,WAAW,CAACM,mBAAZ,CAAgCF,GAAhC,CACClB,wCADD,EAECgB,mBAFD;AAIAF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACClB,wCADD,EAEC,IAAIA,wCAAwC,CAACmB,QAA7C,EAFD;AAKAL,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCxB,uBADD,EAEC,IAAIA,uBAAuB,CAACyB,QAA5B,EAFD;AAKAL,MAAAA,WAAW,CAACM,mBAAZ,CAAgCF,GAAhC,CACCtB,6BADD,EAECoB,mBAFD;AAIAF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCtB,6BADD,EAEC,IAAIA,6BAA6B,CAACuB,QAAlC,EAFD;;AAKA,YAAME,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C;AACA,YAAIA,aAAa,CAACC,OAAd,KAA0BC,SAA1B,IAAuC,CAACF,aAAa,CAACC,OAA1D,EACC;AAED,YAAIpB,4BAAJ,CAAiC,KAAKM,OAAtC,EAA+CC,KAA/C,CAAqDW,MAArD;AACA,YAAIhB,mCAAJ,CAAwCiB,aAAxC,EAAuDZ,KAAvD,CAA6DW,MAA7D;AACA,YAAIjB,mCAAJ,CAAwCkB,aAAxC,EAAuDZ,KAAvD,CAA6DW,MAA7D;AACA,YAAIf,+BAAJ,GAAsCI,KAAtC,CAA4CW,MAA5C;AACA,OATD;;AAWAN,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEI,GADF,CACM,iBADN,EAEEX,GAFF,CAEM,sBAFN,EAE8BM,OAF9B;AAGAL,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEI,GADF,CACM,gBADN,EAEEX,GAFF,CAEM,sBAFN,EAE8BM,OAF9B;AAGA,KAjFF;AAmFA;;AA9FyB;;AAgG3BM,MAAM,CAACC,OAAP,GAAiBpB,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\nconst HarmonyDetectionParserPlugin = require(\"./HarmonyDetectionParserPlugin\");\nconst HarmonyExportDependencyParserPlugin = require(\"./HarmonyExportDependencyParserPlugin\");\nconst HarmonyImportDependencyParserPlugin = require(\"./HarmonyImportDependencyParserPlugin\");\nconst HarmonyTopLevelThisParserPlugin = require(\"./HarmonyTopLevelThisParserPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass HarmonyModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HarmonyModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyCompatibilityDependency,\n\t\t\t\t\tnew HarmonyCompatibilityDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyImportSideEffectDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyImportSideEffectDependency,\n\t\t\t\t\tnew HarmonyImportSideEffectDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyImportSpecifierDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyImportSpecifierDependency,\n\t\t\t\t\tnew HarmonyImportSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportHeaderDependency,\n\t\t\t\t\tnew HarmonyExportHeaderDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportExpressionDependency,\n\t\t\t\t\tnew HarmonyExportExpressionDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportSpecifierDependency,\n\t\t\t\t\tnew HarmonyExportSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyExportImportedSpecifierDependency,\n\t\t\t\t\tnew HarmonyExportImportedSpecifierDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyAcceptDependency,\n\t\t\t\t\tnew HarmonyAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tHarmonyAcceptImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tHarmonyAcceptImportDependency,\n\t\t\t\t\tnew HarmonyAcceptImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\t// TODO webpack 6: rename harmony to esm or module\n\t\t\t\t\tif (parserOptions.harmony !== undefined && !parserOptions.harmony)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew HarmonyDetectionParserPlugin(this.options).apply(parser);\n\t\t\t\t\tnew HarmonyImportDependencyParserPlugin(parserOptions).apply(parser);\n\t\t\t\t\tnew HarmonyExportDependencyParserPlugin(parserOptions).apply(parser);\n\t\t\t\t\tnew HarmonyTopLevelThisParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"HarmonyModulesPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = HarmonyModulesPlugin;\n"]},"metadata":{},"sourceType":"script"}