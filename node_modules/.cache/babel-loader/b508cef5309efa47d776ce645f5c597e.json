{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  const data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // How long to wait for the child process to terminate\n// after CHILD_MESSAGE_END before sending force exiting.\n\n\nconst FORCE_EXIT_DELAY = 500;\n/* istanbul ignore next */\n\nconst emptyMethod = () => {};\n\nclass BaseWorkerPool {\n  constructor(workerPath, options) {\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_workers', void 0);\n\n    this._options = options;\n    this._workers = new Array(options.numWorkers);\n\n    if (!path().isAbsolute(workerPath)) {\n      workerPath = require.resolve(workerPath);\n    }\n\n    const stdout = (0, _mergeStream().default)();\n    const stderr = (0, _mergeStream().default)();\n    const {\n      forkOptions,\n      maxRetries,\n      resourceLimits,\n      setupArgs\n    } = options;\n\n    for (let i = 0; i < options.numWorkers; i++) {\n      const workerOptions = {\n        forkOptions,\n        maxRetries,\n        resourceLimits,\n        setupArgs,\n        workerId: i,\n        workerPath\n      };\n      const worker = this.createWorker(workerOptions);\n      const workerStdout = worker.getStdout();\n      const workerStderr = worker.getStderr();\n\n      if (workerStdout) {\n        stdout.add(workerStdout);\n      }\n\n      if (workerStderr) {\n        stderr.add(workerStderr);\n      }\n\n      this._workers[i] = worker;\n    }\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n  }\n\n  getStderr() {\n    return this._stderr;\n  }\n\n  getStdout() {\n    return this._stdout;\n  }\n\n  getWorkers() {\n    return this._workers;\n  }\n\n  getWorkerById(workerId) {\n    return this._workers[workerId];\n  }\n\n  createWorker(_workerOptions) {\n    throw Error('Missing method createWorker in WorkerPool');\n  }\n\n  async end() {\n    // We do not cache the request object here. If so, it would only be only\n    // processed by one of the workers, and we want them all to close.\n    const workerExitPromises = this._workers.map(async worker => {\n      worker.send([_types.CHILD_MESSAGE_END, false], emptyMethod, emptyMethod, emptyMethod); // Schedule a force exit in case worker fails to exit gracefully so\n      // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\n\n      let forceExited = false;\n      const forceExitTimeout = setTimeout(() => {\n        worker.forceExit();\n        forceExited = true;\n      }, FORCE_EXIT_DELAY);\n      await worker.waitForExit(); // Worker ideally exited gracefully, don't send force exit then\n\n      clearTimeout(forceExitTimeout);\n      return forceExited;\n    });\n\n    const workerExits = await Promise.all(workerExitPromises);\n    return workerExits.reduce((result, forceExited) => ({\n      forceExited: result.forceExited || forceExited\n    }), {\n      forceExited: false\n    });\n  }\n\n}\n\nexports.default = BaseWorkerPool;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/jest-worker/build/base/BaseWorkerPool.js"],"names":["Object","defineProperty","exports","value","default","path","data","_interopRequireWildcard","require","_mergeStream","_interopRequireDefault","_types","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","FORCE_EXIT_DELAY","emptyMethod","BaseWorkerPool","constructor","workerPath","options","_options","_workers","Array","numWorkers","isAbsolute","resolve","stdout","stderr","forkOptions","maxRetries","resourceLimits","setupArgs","i","workerOptions","workerId","worker","createWorker","workerStdout","getStdout","workerStderr","getStderr","add","_stdout","_stderr","getWorkers","getWorkerById","_workerOptions","Error","end","workerExitPromises","map","send","CHILD_MESSAGE_END","forceExited","forceExitTimeout","setTimeout","forceExit","waitForExit","clearTimeout","workerExits","Promise","all","reduce","result"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _mergeStream() {\n  const data = _interopRequireDefault(require('merge-stream'));\n\n  _mergeStream = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// How long to wait for the child process to terminate\n// after CHILD_MESSAGE_END before sending force exiting.\nconst FORCE_EXIT_DELAY = 500;\n/* istanbul ignore next */\n\nconst emptyMethod = () => {};\n\nclass BaseWorkerPool {\n  constructor(workerPath, options) {\n    _defineProperty(this, '_stderr', void 0);\n\n    _defineProperty(this, '_stdout', void 0);\n\n    _defineProperty(this, '_options', void 0);\n\n    _defineProperty(this, '_workers', void 0);\n\n    this._options = options;\n    this._workers = new Array(options.numWorkers);\n\n    if (!path().isAbsolute(workerPath)) {\n      workerPath = require.resolve(workerPath);\n    }\n\n    const stdout = (0, _mergeStream().default)();\n    const stderr = (0, _mergeStream().default)();\n    const {forkOptions, maxRetries, resourceLimits, setupArgs} = options;\n\n    for (let i = 0; i < options.numWorkers; i++) {\n      const workerOptions = {\n        forkOptions,\n        maxRetries,\n        resourceLimits,\n        setupArgs,\n        workerId: i,\n        workerPath\n      };\n      const worker = this.createWorker(workerOptions);\n      const workerStdout = worker.getStdout();\n      const workerStderr = worker.getStderr();\n\n      if (workerStdout) {\n        stdout.add(workerStdout);\n      }\n\n      if (workerStderr) {\n        stderr.add(workerStderr);\n      }\n\n      this._workers[i] = worker;\n    }\n\n    this._stdout = stdout;\n    this._stderr = stderr;\n  }\n\n  getStderr() {\n    return this._stderr;\n  }\n\n  getStdout() {\n    return this._stdout;\n  }\n\n  getWorkers() {\n    return this._workers;\n  }\n\n  getWorkerById(workerId) {\n    return this._workers[workerId];\n  }\n\n  createWorker(_workerOptions) {\n    throw Error('Missing method createWorker in WorkerPool');\n  }\n\n  async end() {\n    // We do not cache the request object here. If so, it would only be only\n    // processed by one of the workers, and we want them all to close.\n    const workerExitPromises = this._workers.map(async worker => {\n      worker.send(\n        [_types.CHILD_MESSAGE_END, false],\n        emptyMethod,\n        emptyMethod,\n        emptyMethod\n      ); // Schedule a force exit in case worker fails to exit gracefully so\n      // await worker.waitForExit() never takes longer than FORCE_EXIT_DELAY\n\n      let forceExited = false;\n      const forceExitTimeout = setTimeout(() => {\n        worker.forceExit();\n        forceExited = true;\n      }, FORCE_EXIT_DELAY);\n      await worker.waitForExit(); // Worker ideally exited gracefully, don't send force exit then\n\n      clearTimeout(forceExitTimeout);\n      return forceExited;\n    });\n\n    const workerExits = await Promise.all(workerExitPromises);\n    return workerExits.reduce(\n      (result, forceExited) => ({\n        forceExited: result.forceExited || forceExited\n      }),\n      {\n        forceExited: false\n      }\n    );\n  }\n}\n\nexports.default = BaseWorkerPool;\n"]},"metadata":{},"sourceType":"script"}