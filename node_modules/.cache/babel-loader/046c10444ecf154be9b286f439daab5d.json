{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\n\nconst FallbackDependency = require(\"./FallbackDependency\");\n\nconst FallbackItemDependency = require(\"./FallbackItemDependency\");\n\nconst FallbackModuleFactory = require(\"./FallbackModuleFactory\");\n\nconst RemoteModule = require(\"./RemoteModule\");\n\nconst RemoteRuntimeModule = require(\"./RemoteRuntimeModule\");\n\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\n\nconst {\n  parseOptions\n} = require(\"./options\");\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").ContainerReferencePluginOptions} ContainerReferencePluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").RemotesConfig} RemotesConfig */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/container/ContainerReferencePlugin.check.js\"), () => require(\"../../schemas/plugins/container/ContainerReferencePlugin.json\"), {\n  name: \"Container Reference Plugin\",\n  baseDataPath: \"options\"\n});\nconst slashCode = \"/\".charCodeAt(0);\n\nclass ContainerReferencePlugin {\n  /**\n   * @param {ContainerReferencePluginOptions} options options\n   */\n  constructor(options) {\n    validate(options);\n    this._remoteType = options.remoteType;\n    this._remotes = parseOptions(options.remotes, item => ({\n      external: Array.isArray(item) ? item : [item],\n      shareScope: options.shareScope || \"default\"\n    }), item => ({\n      external: Array.isArray(item.external) ? item.external : [item.external],\n      shareScope: item.shareScope || options.shareScope || \"default\"\n    }));\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const {\n      _remotes: remotes,\n      _remoteType: remoteType\n    } = this;\n    /** @type {Record<string, string>} */\n\n    const remoteExternals = {};\n\n    for (const [key, config] of remotes) {\n      let i = 0;\n\n      for (const external of config.external) {\n        if (external.startsWith(\"internal \")) continue;\n        remoteExternals[`webpack/container/reference/${key}${i ? `/fallback-${i}` : \"\"}`] = external;\n        i++;\n      }\n    }\n\n    new ExternalsPlugin(remoteType, remoteExternals).apply(compiler);\n    compiler.hooks.compilation.tap(\"ContainerReferencePlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RemoteToExternalDependency, normalModuleFactory);\n      compilation.dependencyFactories.set(FallbackItemDependency, normalModuleFactory);\n      compilation.dependencyFactories.set(FallbackDependency, new FallbackModuleFactory());\n      normalModuleFactory.hooks.factorize.tap(\"ContainerReferencePlugin\", data => {\n        if (!data.request.includes(\"!\")) {\n          for (const [key, config] of remotes) {\n            if (data.request.startsWith(`${key}`) && (data.request.length === key.length || data.request.charCodeAt(key.length) === slashCode)) {\n              return new RemoteModule(data.request, config.external.map((external, i) => external.startsWith(\"internal \") ? external.slice(9) : `webpack/container/reference/${key}${i ? `/fallback-${i}` : \"\"}`), `.${data.request.slice(key.length)}`, config.shareScope);\n            }\n          }\n        }\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(\"ContainerReferencePlugin\", (chunk, set) => {\n        set.add(RuntimeGlobals.module);\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n        set.add(RuntimeGlobals.hasOwnProperty);\n        set.add(RuntimeGlobals.initializeSharing);\n        set.add(RuntimeGlobals.shareScopeMap);\n        compilation.addRuntimeModule(chunk, new RemoteRuntimeModule());\n      });\n    });\n  }\n\n}\n\nmodule.exports = ContainerReferencePlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/container/ContainerReferencePlugin.js"],"names":["ExternalsPlugin","require","RuntimeGlobals","createSchemaValidation","FallbackDependency","FallbackItemDependency","FallbackModuleFactory","RemoteModule","RemoteRuntimeModule","RemoteToExternalDependency","parseOptions","validate","name","baseDataPath","slashCode","charCodeAt","ContainerReferencePlugin","constructor","options","_remoteType","remoteType","_remotes","remotes","item","external","Array","isArray","shareScope","apply","compiler","remoteExternals","key","config","i","startsWith","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","factorize","data","request","includes","length","map","slice","runtimeRequirementInTree","for","ensureChunkHandlers","chunk","add","module","moduleFactoriesAddOnly","hasOwnProperty","initializeSharing","shareScopeMap","addRuntimeModule","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst FallbackDependency = require(\"./FallbackDependency\");\nconst FallbackItemDependency = require(\"./FallbackItemDependency\");\nconst FallbackModuleFactory = require(\"./FallbackModuleFactory\");\nconst RemoteModule = require(\"./RemoteModule\");\nconst RemoteRuntimeModule = require(\"./RemoteRuntimeModule\");\nconst RemoteToExternalDependency = require(\"./RemoteToExternalDependency\");\nconst { parseOptions } = require(\"./options\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").ContainerReferencePluginOptions} ContainerReferencePluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ContainerReferencePlugin\").RemotesConfig} RemotesConfig */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/container/ContainerReferencePlugin.check.js\"),\n\t() =>\n\t\trequire(\"../../schemas/plugins/container/ContainerReferencePlugin.json\"),\n\t{\n\t\tname: \"Container Reference Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nconst slashCode = \"/\".charCodeAt(0);\n\nclass ContainerReferencePlugin {\n\t/**\n\t * @param {ContainerReferencePluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\tthis._remoteType = options.remoteType;\n\t\tthis._remotes = parseOptions(\n\t\t\toptions.remotes,\n\t\t\titem => ({\n\t\t\t\texternal: Array.isArray(item) ? item : [item],\n\t\t\t\tshareScope: options.shareScope || \"default\"\n\t\t\t}),\n\t\t\titem => ({\n\t\t\t\texternal: Array.isArray(item.external)\n\t\t\t\t\t? item.external\n\t\t\t\t\t: [item.external],\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\"\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _remotes: remotes, _remoteType: remoteType } = this;\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst remoteExternals = {};\n\t\tfor (const [key, config] of remotes) {\n\t\t\tlet i = 0;\n\t\t\tfor (const external of config.external) {\n\t\t\t\tif (external.startsWith(\"internal \")) continue;\n\t\t\t\tremoteExternals[\n\t\t\t\t\t`webpack/container/reference/${key}${i ? `/fallback-${i}` : \"\"}`\n\t\t\t\t] = external;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tnew ExternalsPlugin(remoteType, remoteExternals).apply(compiler);\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ContainerReferencePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRemoteToExternalDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackDependency,\n\t\t\t\t\tnew FallbackModuleFactory()\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.factorize.tap(\n\t\t\t\t\t\"ContainerReferencePlugin\",\n\t\t\t\t\tdata => {\n\t\t\t\t\t\tif (!data.request.includes(\"!\")) {\n\t\t\t\t\t\t\tfor (const [key, config] of remotes) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tdata.request.startsWith(`${key}`) &&\n\t\t\t\t\t\t\t\t\t(data.request.length === key.length ||\n\t\t\t\t\t\t\t\t\t\tdata.request.charCodeAt(key.length) === slashCode)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn new RemoteModule(\n\t\t\t\t\t\t\t\t\t\tdata.request,\n\t\t\t\t\t\t\t\t\t\tconfig.external.map((external, i) =>\n\t\t\t\t\t\t\t\t\t\t\texternal.startsWith(\"internal \")\n\t\t\t\t\t\t\t\t\t\t\t\t? external.slice(9)\n\t\t\t\t\t\t\t\t\t\t\t\t: `webpack/container/reference/${key}${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti ? `/fallback-${i}` : \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t`.${data.request.slice(key.length)}`,\n\t\t\t\t\t\t\t\t\t\tconfig.shareScope\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(\"ContainerReferencePlugin\", (chunk, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\t\tset.add(RuntimeGlobals.initializeSharing);\n\t\t\t\t\t\tset.add(RuntimeGlobals.shareScopeMap);\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RemoteRuntimeModule());\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ContainerReferencePlugin;\n"]},"metadata":{},"sourceType":"script"}