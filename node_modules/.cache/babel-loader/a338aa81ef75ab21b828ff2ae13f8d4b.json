{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst {\n  evaluateToString,\n  expressionIsUnsupported,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst SystemRuntimeModule = require(\"./SystemRuntimeModule\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass SystemPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"SystemPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.hooks.runtimeRequirementInModule.for(RuntimeGlobals.system).tap(\"SystemPlugin\", (module, set) => {\n        set.add(RuntimeGlobals.requireScope);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.system).tap(\"SystemPlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new SystemRuntimeModule());\n      });\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.system === undefined || !parserOptions.system) {\n          return;\n        }\n\n        const setNotSupported = name => {\n          parser.hooks.evaluateTypeof.for(name).tap(\"SystemPlugin\", evaluateToString(\"undefined\"));\n          parser.hooks.expression.for(name).tap(\"SystemPlugin\", expressionIsUnsupported(parser, name + \" is not supported by webpack.\"));\n        };\n\n        parser.hooks.typeof.for(\"System.import\").tap(\"SystemPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"System.import\").tap(\"SystemPlugin\", evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"System\").tap(\"SystemPlugin\", toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.evaluateTypeof.for(\"System\").tap(\"SystemPlugin\", evaluateToString(\"object\"));\n        setNotSupported(\"System.set\");\n        setNotSupported(\"System.get\");\n        setNotSupported(\"System.register\");\n        parser.hooks.expression.for(\"System\").tap(\"SystemPlugin\", expr => {\n          const dep = new ConstDependency(RuntimeGlobals.system, expr.range, [RuntimeGlobals.system]);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.call.for(\"System.import\").tap(\"SystemPlugin\", expr => {\n          parser.state.module.addWarning(new SystemImportDeprecationWarning(expr.loc));\n          return parser.hooks.importCall.call({\n            type: \"ImportExpression\",\n            source: expr.arguments[0],\n            loc: expr.loc,\n            range: expr.range\n          });\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"SystemPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"SystemPlugin\", handler);\n    });\n  }\n\n}\n\nclass SystemImportDeprecationWarning extends WebpackError {\n  constructor(loc) {\n    super(\"System.import() is deprecated and will be removed soon. Use import() instead.\\n\" + \"For more info visit https://webpack.js.org/guides/code-splitting/\");\n    this.name = \"SystemImportDeprecationWarning\";\n    this.loc = loc;\n  }\n\n}\n\nmakeSerializable(SystemImportDeprecationWarning, \"webpack/lib/dependencies/SystemPlugin\", \"SystemImportDeprecationWarning\");\nmodule.exports = SystemPlugin;\nmodule.exports.SystemImportDeprecationWarning = SystemImportDeprecationWarning;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/SystemPlugin.js"],"names":["RuntimeGlobals","require","WebpackError","evaluateToString","expressionIsUnsupported","toConstantDependency","makeSerializable","ConstDependency","SystemRuntimeModule","SystemPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","runtimeRequirementInModule","for","system","module","set","add","requireScope","runtimeRequirementInTree","chunk","addRuntimeModule","handler","parser","parserOptions","undefined","setNotSupported","name","evaluateTypeof","expression","typeof","JSON","stringify","expr","dep","range","loc","state","addPresentationalDependency","call","addWarning","SystemImportDeprecationWarning","importCall","type","source","arguments","constructor","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;AACLE,EAAAA,gBADK;AAELC,EAAAA,uBAFK;AAGLC,EAAAA;AAHK,IAIFJ,OAAO,CAAC,uCAAD,CAJX;;AAKA,MAAMK,gBAAgB,GAAGL,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMM,eAAe,GAAGN,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAMO,mBAAmB,GAAGP,OAAO,CAAC,uBAAD,CAAnC;AAEA;;;AAEA,MAAMQ,YAAN,CAAmB;AAClB;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,cADD,EAEC,CAACD,WAAD,WAA0C;AAAA,UAA5B;AAAEE,QAAAA;AAAF,OAA4B;AACzCF,MAAAA,WAAW,CAACD,KAAZ,CAAkBI,0BAAlB,CACEC,GADF,CACMjB,cAAc,CAACkB,MADrB,EAEEJ,GAFF,CAEM,cAFN,EAEsB,CAACK,MAAD,EAASC,GAAT,KAAiB;AACrCA,QAAAA,GAAG,CAACC,GAAJ,CAAQrB,cAAc,CAACsB,YAAvB;AACA,OAJF;AAMAT,MAAAA,WAAW,CAACD,KAAZ,CAAkBW,wBAAlB,CACEN,GADF,CACMjB,cAAc,CAACkB,MADrB,EAEEJ,GAFF,CAEM,cAFN,EAEsB,CAACU,KAAD,EAAQJ,GAAR,KAAgB;AACpCP,QAAAA,WAAW,CAACY,gBAAZ,CAA6BD,KAA7B,EAAoC,IAAIhB,mBAAJ,EAApC;AACA,OAJF;;AAMA,YAAMkB,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C,YAAIA,aAAa,CAACV,MAAd,KAAyBW,SAAzB,IAAsC,CAACD,aAAa,CAACV,MAAzD,EAAiE;AAChE;AACA;;AAED,cAAMY,eAAe,GAAGC,IAAI,IAAI;AAC/BJ,UAAAA,MAAM,CAACf,KAAP,CAAaoB,cAAb,CACEf,GADF,CACMc,IADN,EAEEjB,GAFF,CAEM,cAFN,EAEsBX,gBAAgB,CAAC,WAAD,CAFtC;AAGAwB,UAAAA,MAAM,CAACf,KAAP,CAAaqB,UAAb,CACEhB,GADF,CACMc,IADN,EAEEjB,GAFF,CAGE,cAHF,EAIEV,uBAAuB,CACtBuB,MADsB,EAEtBI,IAAI,GAAG,+BAFe,CAJzB;AASA,SAbD;;AAeAJ,QAAAA,MAAM,CAACf,KAAP,CAAasB,MAAb,CACEjB,GADF,CACM,eADN,EAEEH,GAFF,CAGE,cAHF,EAIET,oBAAoB,CAACsB,MAAD,EAASQ,IAAI,CAACC,SAAL,CAAe,UAAf,CAAT,CAJtB;AAMAT,QAAAA,MAAM,CAACf,KAAP,CAAaoB,cAAb,CACEf,GADF,CACM,eADN,EAEEH,GAFF,CAEM,cAFN,EAEsBX,gBAAgB,CAAC,UAAD,CAFtC;AAGAwB,QAAAA,MAAM,CAACf,KAAP,CAAasB,MAAb,CACEjB,GADF,CACM,QADN,EAEEH,GAFF,CAGE,cAHF,EAIET,oBAAoB,CAACsB,MAAD,EAASQ,IAAI,CAACC,SAAL,CAAe,QAAf,CAAT,CAJtB;AAMAT,QAAAA,MAAM,CAACf,KAAP,CAAaoB,cAAb,CACEf,GADF,CACM,QADN,EAEEH,GAFF,CAEM,cAFN,EAEsBX,gBAAgB,CAAC,QAAD,CAFtC;AAIA2B,QAAAA,eAAe,CAAC,YAAD,CAAf;AACAA,QAAAA,eAAe,CAAC,YAAD,CAAf;AACAA,QAAAA,eAAe,CAAC,iBAAD,CAAf;AAEAH,QAAAA,MAAM,CAACf,KAAP,CAAaqB,UAAb,CAAwBhB,GAAxB,CAA4B,QAA5B,EAAsCH,GAAtC,CAA0C,cAA1C,EAA0DuB,IAAI,IAAI;AACjE,gBAAMC,GAAG,GAAG,IAAI/B,eAAJ,CAAoBP,cAAc,CAACkB,MAAnC,EAA2CmB,IAAI,CAACE,KAAhD,EAAuD,CAClEvC,cAAc,CAACkB,MADmD,CAAvD,CAAZ;AAGAoB,UAAAA,GAAG,CAACE,GAAJ,GAAUH,IAAI,CAACG,GAAf;AACAb,UAAAA,MAAM,CAACc,KAAP,CAAatB,MAAb,CAAoBuB,2BAApB,CAAgDJ,GAAhD;AACA,iBAAO,IAAP;AACA,SAPD;AASAX,QAAAA,MAAM,CAACf,KAAP,CAAa+B,IAAb,CAAkB1B,GAAlB,CAAsB,eAAtB,EAAuCH,GAAvC,CAA2C,cAA3C,EAA2DuB,IAAI,IAAI;AAClEV,UAAAA,MAAM,CAACc,KAAP,CAAatB,MAAb,CAAoByB,UAApB,CACC,IAAIC,8BAAJ,CAAmCR,IAAI,CAACG,GAAxC,CADD;AAIA,iBAAOb,MAAM,CAACf,KAAP,CAAakC,UAAb,CAAwBH,IAAxB,CAA6B;AACnCI,YAAAA,IAAI,EAAE,kBAD6B;AAEnCC,YAAAA,MAAM,EAAEX,IAAI,CAACY,SAAL,CAAe,CAAf,CAF2B;AAGnCT,YAAAA,GAAG,EAAEH,IAAI,CAACG,GAHyB;AAInCD,YAAAA,KAAK,EAAEF,IAAI,CAACE;AAJuB,WAA7B,CAAP;AAMA,SAXD;AAYA,OAhED;;AAkEAxB,MAAAA,mBAAmB,CAACH,KAApB,CAA0Be,MAA1B,CACEV,GADF,CACM,iBADN,EAEEH,GAFF,CAEM,cAFN,EAEsBY,OAFtB;AAGAX,MAAAA,mBAAmB,CAACH,KAApB,CAA0Be,MAA1B,CACEV,GADF,CACM,oBADN,EAEEH,GAFF,CAEM,cAFN,EAEsBY,OAFtB;AAGA,KAvFF;AAyFA;;AAhGiB;;AAmGnB,MAAMmB,8BAAN,SAA6C3C,YAA7C,CAA0D;AACzDgD,EAAAA,WAAW,CAACV,GAAD,EAAM;AAChB,UACC,oFACC,mEAFF;AAKA,SAAKT,IAAL,GAAY,gCAAZ;AAEA,SAAKS,GAAL,GAAWA,GAAX;AACA;;AAVwD;;AAa1DlC,gBAAgB,CACfuC,8BADe,EAEf,uCAFe,EAGf,gCAHe,CAAhB;AAMA1B,MAAM,CAACgC,OAAP,GAAiB1C,YAAjB;AACAU,MAAM,CAACgC,OAAP,CAAeN,8BAAf,GAAgDA,8BAAhD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst WebpackError = require(\"../WebpackError\");\nconst {\n\tevaluateToString,\n\texpressionIsUnsupported,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst SystemRuntimeModule = require(\"./SystemRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass SystemPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SystemPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(RuntimeGlobals.system)\n\t\t\t\t\t.tap(\"SystemPlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.system)\n\t\t\t\t\t.tap(\"SystemPlugin\", (chunk, set) => {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new SystemRuntimeModule());\n\t\t\t\t\t});\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.system === undefined || !parserOptions.system) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst setNotSupported = name => {\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\"SystemPlugin\", evaluateToString(\"undefined\"));\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tname + \" is not supported by webpack.\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System.import\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"SystemPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"System\")\n\t\t\t\t\t\t.tap(\"SystemPlugin\", evaluateToString(\"object\"));\n\n\t\t\t\t\tsetNotSupported(\"System.set\");\n\t\t\t\t\tsetNotSupported(\"System.get\");\n\t\t\t\t\tsetNotSupported(\"System.register\");\n\n\t\t\t\t\tparser.hooks.expression.for(\"System\").tap(\"SystemPlugin\", expr => {\n\t\t\t\t\t\tconst dep = new ConstDependency(RuntimeGlobals.system, expr.range, [\n\t\t\t\t\t\t\tRuntimeGlobals.system\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\n\t\t\t\t\tparser.hooks.call.for(\"System.import\").tap(\"SystemPlugin\", expr => {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew SystemImportDeprecationWarning(expr.loc)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn parser.hooks.importCall.call({\n\t\t\t\t\t\t\ttype: \"ImportExpression\",\n\t\t\t\t\t\t\tsource: expr.arguments[0],\n\t\t\t\t\t\t\tloc: expr.loc,\n\t\t\t\t\t\t\trange: expr.range\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"SystemPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass SystemImportDeprecationWarning extends WebpackError {\n\tconstructor(loc) {\n\t\tsuper(\n\t\t\t\"System.import() is deprecated and will be removed soon. Use import() instead.\\n\" +\n\t\t\t\t\"For more info visit https://webpack.js.org/guides/code-splitting/\"\n\t\t);\n\n\t\tthis.name = \"SystemImportDeprecationWarning\";\n\n\t\tthis.loc = loc;\n\t}\n}\n\nmakeSerializable(\n\tSystemImportDeprecationWarning,\n\t\"webpack/lib/dependencies/SystemPlugin\",\n\t\"SystemImportDeprecationWarning\"\n);\n\nmodule.exports = SystemPlugin;\nmodule.exports.SystemImportDeprecationWarning = SystemImportDeprecationWarning;\n"]},"metadata":{},"sourceType":"script"}