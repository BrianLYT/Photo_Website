{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst InitFragment = require(\"../InitFragment\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass ModuleDecoratorDependency extends NullDependency {\n  /**\n   * @param {string} decorator the decorator requirement\n   * @param {boolean} allowExportsAccess allow to access exports from module\n   */\n  constructor(decorator, allowExportsAccess) {\n    super();\n    this.decorator = decorator;\n    this.allowExportsAccess = allowExportsAccess;\n    this._hashUpdate = undefined;\n  }\n  /**\n   * @returns {string} a display name for the type of dependency\n   */\n\n\n  get type() {\n    return \"module decorator\";\n  }\n\n  get category() {\n    return \"self\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `self`;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    return this.allowExportsAccess ? Dependency.EXPORTS_OBJECT_REFERENCED : Dependency.NO_EXPORTS_REFERENCED;\n  }\n  /**\n   * Update the hash\n   * @param {Hash} hash hash to be updated\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    if (this._hashUpdate === undefined) {\n      this._hashUpdate = `${this.decorator}${this.allowExportsAccess}`;\n    }\n\n    hash.update(this._hashUpdate);\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.decorator);\n    write(this.allowExportsAccess);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.decorator = read();\n    this.allowExportsAccess = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ModuleDecoratorDependency, \"webpack/lib/dependencies/ModuleDecoratorDependency\");\nModuleDecoratorDependency.Template = class ModuleDecoratorDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      chunkGraph,\n      initFragments,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {ModuleDecoratorDependency} */\n    dependency;\n    runtimeRequirements.add(RuntimeGlobals.moduleLoaded);\n    runtimeRequirements.add(RuntimeGlobals.moduleId);\n    runtimeRequirements.add(RuntimeGlobals.module);\n    runtimeRequirements.add(dep.decorator);\n    initFragments.push(new InitFragment(`/* module decorator */ ${module.moduleArgument} = ${dep.decorator}(${module.moduleArgument});\\n`, InitFragment.STAGE_PROVIDES, 0, `module decorator ${chunkGraph.getModuleId(module)}`));\n  }\n\n};\nmodule.exports = ModuleDecoratorDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ModuleDecoratorDependency.js"],"names":["Dependency","require","InitFragment","RuntimeGlobals","makeSerializable","NullDependency","ModuleDecoratorDependency","constructor","decorator","allowExportsAccess","_hashUpdate","undefined","type","category","getResourceIdentifier","getReferencedExports","moduleGraph","runtime","EXPORTS_OBJECT_REFERENCED","NO_EXPORTS_REFERENCED","updateHash","hash","context","update","serialize","write","deserialize","read","Template","ModuleDecoratorDependencyTemplate","apply","dependency","source","module","chunkGraph","initFragments","runtimeRequirements","dep","add","moduleLoaded","moduleId","push","moduleArgument","STAGE_PROVIDES","getModuleId","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass ModuleDecoratorDependency extends NullDependency {\n\t/**\n\t * @param {string} decorator the decorator requirement\n\t * @param {boolean} allowExportsAccess allow to access exports from module\n\t */\n\tconstructor(decorator, allowExportsAccess) {\n\t\tsuper();\n\t\tthis.decorator = decorator;\n\t\tthis.allowExportsAccess = allowExportsAccess;\n\t\tthis._hashUpdate = undefined;\n\t}\n\n\t/**\n\t * @returns {string} a display name for the type of dependency\n\t */\n\tget type() {\n\t\treturn \"module decorator\";\n\t}\n\n\tget category() {\n\t\treturn \"self\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `self`;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn this.allowExportsAccess\n\t\t\t? Dependency.EXPORTS_OBJECT_REFERENCED\n\t\t\t: Dependency.NO_EXPORTS_REFERENCED;\n\t}\n\n\t/**\n\t * Update the hash\n\t * @param {Hash} hash hash to be updated\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tif (this._hashUpdate === undefined) {\n\t\t\tthis._hashUpdate = `${this.decorator}${this.allowExportsAccess}`;\n\t\t}\n\t\thash.update(this._hashUpdate);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.decorator);\n\t\twrite(this.allowExportsAccess);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.decorator = read();\n\t\tthis.allowExportsAccess = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tModuleDecoratorDependency,\n\t\"webpack/lib/dependencies/ModuleDecoratorDependency\"\n);\n\nModuleDecoratorDependency.Template = class ModuleDecoratorDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ module, chunkGraph, initFragments, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {ModuleDecoratorDependency} */ (dependency);\n\t\truntimeRequirements.add(RuntimeGlobals.moduleLoaded);\n\t\truntimeRequirements.add(RuntimeGlobals.moduleId);\n\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\truntimeRequirements.add(dep.decorator);\n\t\tinitFragments.push(\n\t\t\tnew InitFragment(\n\t\t\t\t`/* module decorator */ ${module.moduleArgument} = ${dep.decorator}(${module.moduleArgument});\\n`,\n\t\t\t\tInitFragment.STAGE_PROVIDES,\n\t\t\t\t0,\n\t\t\t\t`module decorator ${chunkGraph.getModuleId(module)}`\n\t\t\t)\n\t\t);\n\t}\n};\n\nmodule.exports = ModuleDecoratorDependency;\n"]},"metadata":{},"sourceType":"script"}