{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/** @typedef {import(\"ajv\").Ajv} Ajv */\n\n/** @typedef {import(\"ajv\").ValidateFunction} ValidateFunction */\n\n/** @typedef {import(\"../validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */\n\n/**\n * @param {string} message\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\n\nfunction errorMessage(message, schema, data) {\n  return {\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    dataPath: undefined,\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    schemaPath: undefined,\n    keyword: \"absolutePath\",\n    params: {\n      absolutePath: data\n    },\n    message,\n    parentSchema: schema\n  };\n}\n/**\n * @param {boolean} shouldBeAbsolute\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\n\n\nfunction getErrorFor(shouldBeAbsolute, schema, data) {\n  const message = shouldBeAbsolute ? `The provided value ${JSON.stringify(data)} is not an absolute path!` : `A relative path is expected. However, the provided value ${JSON.stringify(data)} is an absolute path!`;\n  return errorMessage(message, schema, data);\n}\n/**\n *\n * @param {Ajv} ajv\n * @returns {Ajv}\n */\n\n\nfunction addAbsolutePathKeyword(ajv) {\n  ajv.addKeyword(\"absolutePath\", {\n    errors: true,\n    type: \"string\",\n\n    compile(schema, parentSchema) {\n      /** @type {ValidateFunction} */\n      const callback = data => {\n        let passes = true;\n        const isExclamationMarkPresent = data.includes(\"!\");\n\n        if (isExclamationMarkPresent) {\n          callback.errors = [errorMessage(`The provided value ${JSON.stringify(data)} contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.`, parentSchema, data)];\n          passes = false;\n        } // ?:[A-Za-z]:\\\\ - Windows absolute path\n        // \\\\\\\\ - Windows network absolute path\n        // \\/ - Unix-like OS absolute path\n\n\n        const isCorrectAbsolutePath = schema === /^(?:[A-Za-z]:(\\\\|\\/)|\\\\\\\\|\\/)/.test(data);\n\n        if (!isCorrectAbsolutePath) {\n          callback.errors = [getErrorFor(schema, parentSchema, data)];\n          passes = false;\n        }\n\n        return passes;\n      };\n\n      callback.errors = [];\n      return callback;\n    }\n\n  });\n  return ajv;\n}\n\nvar _default = addAbsolutePathKeyword;\nexports.default = _default;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/schema-utils/dist/keywords/absolutePath.js"],"names":["Object","defineProperty","exports","value","default","errorMessage","message","schema","data","dataPath","undefined","schemaPath","keyword","params","absolutePath","parentSchema","getErrorFor","shouldBeAbsolute","JSON","stringify","addAbsolutePathKeyword","ajv","addKeyword","errors","type","compile","callback","passes","isExclamationMarkPresent","includes","isCorrectAbsolutePath","test","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6C;AAC3C,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAEC,SAHL;AAIL;AACA;AACAC,IAAAA,UAAU,EAAED,SANP;AAOLE,IAAAA,OAAO,EAAE,cAPJ;AAQLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,YAAY,EAAEN;AADR,KARH;AAWLF,IAAAA,OAXK;AAYLS,IAAAA,YAAY,EAAER;AAZT,GAAP;AAcD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASS,WAAT,CAAqBC,gBAArB,EAAuCV,MAAvC,EAA+CC,IAA/C,EAAqD;AACnD,QAAMF,OAAO,GAAGW,gBAAgB,GAAI,sBAAqBC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAqB,2BAA9C,GAA4E,4DAA2DU,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAqB,uBAA5L;AACA,SAAOH,YAAY,CAACC,OAAD,EAAUC,MAAV,EAAkBC,IAAlB,CAAnB;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASY,sBAAT,CAAgCC,GAAhC,EAAqC;AACnCA,EAAAA,GAAG,CAACC,UAAJ,CAAe,cAAf,EAA+B;AAC7BC,IAAAA,MAAM,EAAE,IADqB;AAE7BC,IAAAA,IAAI,EAAE,QAFuB;;AAI7BC,IAAAA,OAAO,CAAClB,MAAD,EAASQ,YAAT,EAAuB;AAC5B;AACA,YAAMW,QAAQ,GAAGlB,IAAI,IAAI;AACvB,YAAImB,MAAM,GAAG,IAAb;AACA,cAAMC,wBAAwB,GAAGpB,IAAI,CAACqB,QAAL,CAAc,GAAd,CAAjC;;AAEA,YAAID,wBAAJ,EAA8B;AAC5BF,UAAAA,QAAQ,CAACH,MAAT,GAAkB,CAAClB,YAAY,CAAE,sBAAqBa,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAqB,8FAA5C,EAA2IO,YAA3I,EAAyJP,IAAzJ,CAAb,CAAlB;AACAmB,UAAAA,MAAM,GAAG,KAAT;AACD,SAPsB,CAOrB;AACF;AACA;;;AAGA,cAAMG,qBAAqB,GAAGvB,MAAM,KAAK,gCAAgCwB,IAAhC,CAAqCvB,IAArC,CAAzC;;AAEA,YAAI,CAACsB,qBAAL,EAA4B;AAC1BJ,UAAAA,QAAQ,CAACH,MAAT,GAAkB,CAACP,WAAW,CAACT,MAAD,EAASQ,YAAT,EAAuBP,IAAvB,CAAZ,CAAlB;AACAmB,UAAAA,MAAM,GAAG,KAAT;AACD;;AAED,eAAOA,MAAP;AACD,OApBD;;AAsBAD,MAAAA,QAAQ,CAACH,MAAT,GAAkB,EAAlB;AACA,aAAOG,QAAP;AACD;;AA9B4B,GAA/B;AAiCA,SAAOL,GAAP;AACD;;AAED,IAAIW,QAAQ,GAAGZ,sBAAf;AACAlB,OAAO,CAACE,OAAR,GAAkB4B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/** @typedef {import(\"ajv\").Ajv} Ajv */\n\n/** @typedef {import(\"ajv\").ValidateFunction} ValidateFunction */\n\n/** @typedef {import(\"../validate\").SchemaUtilErrorObject} SchemaUtilErrorObject */\n\n/**\n * @param {string} message\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\nfunction errorMessage(message, schema, data) {\n  return {\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    dataPath: undefined,\n    // @ts-ignore\n    // eslint-disable-next-line no-undefined\n    schemaPath: undefined,\n    keyword: \"absolutePath\",\n    params: {\n      absolutePath: data\n    },\n    message,\n    parentSchema: schema\n  };\n}\n/**\n * @param {boolean} shouldBeAbsolute\n * @param {object} schema\n * @param {string} data\n * @returns {SchemaUtilErrorObject}\n */\n\n\nfunction getErrorFor(shouldBeAbsolute, schema, data) {\n  const message = shouldBeAbsolute ? `The provided value ${JSON.stringify(data)} is not an absolute path!` : `A relative path is expected. However, the provided value ${JSON.stringify(data)} is an absolute path!`;\n  return errorMessage(message, schema, data);\n}\n/**\n *\n * @param {Ajv} ajv\n * @returns {Ajv}\n */\n\n\nfunction addAbsolutePathKeyword(ajv) {\n  ajv.addKeyword(\"absolutePath\", {\n    errors: true,\n    type: \"string\",\n\n    compile(schema, parentSchema) {\n      /** @type {ValidateFunction} */\n      const callback = data => {\n        let passes = true;\n        const isExclamationMarkPresent = data.includes(\"!\");\n\n        if (isExclamationMarkPresent) {\n          callback.errors = [errorMessage(`The provided value ${JSON.stringify(data)} contains exclamation mark (!) which is not allowed because it's reserved for loader syntax.`, parentSchema, data)];\n          passes = false;\n        } // ?:[A-Za-z]:\\\\ - Windows absolute path\n        // \\\\\\\\ - Windows network absolute path\n        // \\/ - Unix-like OS absolute path\n\n\n        const isCorrectAbsolutePath = schema === /^(?:[A-Za-z]:(\\\\|\\/)|\\\\\\\\|\\/)/.test(data);\n\n        if (!isCorrectAbsolutePath) {\n          callback.errors = [getErrorFor(schema, parentSchema, data)];\n          passes = false;\n        }\n\n        return passes;\n      };\n\n      callback.errors = [];\n      return callback;\n    }\n\n  });\n  return ajv;\n}\n\nvar _default = addAbsolutePathKeyword;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}