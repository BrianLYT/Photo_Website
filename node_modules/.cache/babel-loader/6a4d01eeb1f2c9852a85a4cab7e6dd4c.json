{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {RuntimeSpec} runtime the runtime\n * @param {string[][]} referencedExports list of referenced exports, will be added to\n * @param {string[]} prefix export prefix\n * @param {ExportInfo=} exportInfo the export info\n * @param {boolean} defaultPointsToSelf when true, using default will reference itself\n * @param {Set<ExportInfo>} alreadyVisited already visited export info (to handle circular reexports)\n */\n\n\nconst processExportInfo = function (runtime, referencedExports, prefix, exportInfo) {\n  let defaultPointsToSelf = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let alreadyVisited = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Set();\n\n  if (!exportInfo) {\n    referencedExports.push(prefix);\n    return;\n  }\n\n  const used = exportInfo.getUsed(runtime);\n  if (used === UsageState.Unused) return;\n\n  if (alreadyVisited.has(exportInfo)) {\n    referencedExports.push(prefix);\n    return;\n  }\n\n  alreadyVisited.add(exportInfo);\n\n  if (used !== UsageState.OnlyPropertiesUsed || !exportInfo.exportsInfo || exportInfo.exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n    alreadyVisited.delete(exportInfo);\n    referencedExports.push(prefix);\n    return;\n  }\n\n  const exportsInfo = exportInfo.exportsInfo;\n\n  for (const exportInfo of exportsInfo.orderedExports) {\n    processExportInfo(runtime, referencedExports, defaultPointsToSelf && exportInfo.name === \"default\" ? prefix : prefix.concat(exportInfo.name), exportInfo, false, alreadyVisited);\n  }\n\n  alreadyVisited.delete(exportInfo);\n};\n\nmodule.exports = processExportInfo;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/processExportInfo.js"],"names":["UsageState","require","processExportInfo","runtime","referencedExports","prefix","exportInfo","defaultPointsToSelf","alreadyVisited","Set","push","used","getUsed","Unused","has","add","OnlyPropertiesUsed","exportsInfo","otherExportsInfo","delete","orderedExports","name","concat","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,OAAO,CAAC,gBAAD,CAA9B;AAEA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,iBAAiB,GAAG,UACzBC,OADyB,EAEzBC,iBAFyB,EAGzBC,MAHyB,EAIzBC,UAJyB,EAOrB;AAAA,MAFJC,mBAEI,uEAFkB,KAElB;AAAA,MADJC,cACI,uEADa,IAAIC,GAAJ,EACb;;AACJ,MAAI,CAACH,UAAL,EAAiB;AAChBF,IAAAA,iBAAiB,CAACM,IAAlB,CAAuBL,MAAvB;AACA;AACA;;AACD,QAAMM,IAAI,GAAGL,UAAU,CAACM,OAAX,CAAmBT,OAAnB,CAAb;AACA,MAAIQ,IAAI,KAAKX,UAAU,CAACa,MAAxB,EAAgC;;AAChC,MAAIL,cAAc,CAACM,GAAf,CAAmBR,UAAnB,CAAJ,EAAoC;AACnCF,IAAAA,iBAAiB,CAACM,IAAlB,CAAuBL,MAAvB;AACA;AACA;;AACDG,EAAAA,cAAc,CAACO,GAAf,CAAmBT,UAAnB;;AACA,MACCK,IAAI,KAAKX,UAAU,CAACgB,kBAApB,IACA,CAACV,UAAU,CAACW,WADZ,IAEAX,UAAU,CAACW,WAAX,CAAuBC,gBAAvB,CAAwCN,OAAxC,CAAgDT,OAAhD,MACCH,UAAU,CAACa,MAJb,EAKE;AACDL,IAAAA,cAAc,CAACW,MAAf,CAAsBb,UAAtB;AACAF,IAAAA,iBAAiB,CAACM,IAAlB,CAAuBL,MAAvB;AACA;AACA;;AACD,QAAMY,WAAW,GAAGX,UAAU,CAACW,WAA/B;;AACA,OAAK,MAAMX,UAAX,IAAyBW,WAAW,CAACG,cAArC,EAAqD;AACpDlB,IAAAA,iBAAiB,CAChBC,OADgB,EAEhBC,iBAFgB,EAGhBG,mBAAmB,IAAID,UAAU,CAACe,IAAX,KAAoB,SAA3C,GACGhB,MADH,GAEGA,MAAM,CAACiB,MAAP,CAAchB,UAAU,CAACe,IAAzB,CALa,EAMhBf,UANgB,EAOhB,KAPgB,EAQhBE,cARgB,CAAjB;AAUA;;AACDA,EAAAA,cAAc,CAACW,MAAf,CAAsBb,UAAtB;AACA,CA3CD;;AA4CAiB,MAAM,CAACC,OAAP,GAAiBtB,iBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { UsageState } = require(\"../ExportsInfo\");\n\n/** @typedef {import(\"../ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {RuntimeSpec} runtime the runtime\n * @param {string[][]} referencedExports list of referenced exports, will be added to\n * @param {string[]} prefix export prefix\n * @param {ExportInfo=} exportInfo the export info\n * @param {boolean} defaultPointsToSelf when true, using default will reference itself\n * @param {Set<ExportInfo>} alreadyVisited already visited export info (to handle circular reexports)\n */\nconst processExportInfo = (\n\truntime,\n\treferencedExports,\n\tprefix,\n\texportInfo,\n\tdefaultPointsToSelf = false,\n\talreadyVisited = new Set()\n) => {\n\tif (!exportInfo) {\n\t\treferencedExports.push(prefix);\n\t\treturn;\n\t}\n\tconst used = exportInfo.getUsed(runtime);\n\tif (used === UsageState.Unused) return;\n\tif (alreadyVisited.has(exportInfo)) {\n\t\treferencedExports.push(prefix);\n\t\treturn;\n\t}\n\talreadyVisited.add(exportInfo);\n\tif (\n\t\tused !== UsageState.OnlyPropertiesUsed ||\n\t\t!exportInfo.exportsInfo ||\n\t\texportInfo.exportsInfo.otherExportsInfo.getUsed(runtime) !==\n\t\t\tUsageState.Unused\n\t) {\n\t\talreadyVisited.delete(exportInfo);\n\t\treferencedExports.push(prefix);\n\t\treturn;\n\t}\n\tconst exportsInfo = exportInfo.exportsInfo;\n\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\tprocessExportInfo(\n\t\t\truntime,\n\t\t\treferencedExports,\n\t\t\tdefaultPointsToSelf && exportInfo.name === \"default\"\n\t\t\t\t? prefix\n\t\t\t\t: prefix.concat(exportInfo.name),\n\t\t\texportInfo,\n\t\t\tfalse,\n\t\t\talreadyVisited\n\t\t);\n\t}\n\talreadyVisited.delete(exportInfo);\n};\nmodule.exports = processExportInfo;\n"]},"metadata":{},"sourceType":"script"}