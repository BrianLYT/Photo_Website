{"ast":null,"code":"function sign(input, output) {\n  return [input, output];\n}\n\nvar u32 = \"u32\";\nvar i32 = \"i32\";\nvar i64 = \"i64\";\nvar f32 = \"f32\";\nvar f64 = \"f64\";\n\nvar vector = function vector(t) {\n  var vecType = [t]; // $FlowIgnore\n\n  vecType.vector = true;\n  return vecType;\n};\n\nvar controlInstructions = {\n  unreachable: sign([], []),\n  nop: sign([], []),\n  // block ?\n  // loop ?\n  // if ?\n  // if else ?\n  br: sign([u32], []),\n  br_if: sign([u32], []),\n  br_table: sign(vector(u32), []),\n  return: sign([], []),\n  call: sign([u32], []),\n  call_indirect: sign([u32], [])\n};\nvar parametricInstructions = {\n  drop: sign([], []),\n  select: sign([], [])\n};\nvar variableInstructions = {\n  get_local: sign([u32], []),\n  set_local: sign([u32], []),\n  tee_local: sign([u32], []),\n  get_global: sign([u32], []),\n  set_global: sign([u32], [])\n};\nvar memoryInstructions = {\n  \"i32.load\": sign([u32, u32], [i32]),\n  \"i64.load\": sign([u32, u32], []),\n  \"f32.load\": sign([u32, u32], []),\n  \"f64.load\": sign([u32, u32], []),\n  \"i32.load8_s\": sign([u32, u32], [i32]),\n  \"i32.load8_u\": sign([u32, u32], [i32]),\n  \"i32.load16_s\": sign([u32, u32], [i32]),\n  \"i32.load16_u\": sign([u32, u32], [i32]),\n  \"i64.load8_s\": sign([u32, u32], [i64]),\n  \"i64.load8_u\": sign([u32, u32], [i64]),\n  \"i64.load16_s\": sign([u32, u32], [i64]),\n  \"i64.load16_u\": sign([u32, u32], [i64]),\n  \"i64.load32_s\": sign([u32, u32], [i64]),\n  \"i64.load32_u\": sign([u32, u32], [i64]),\n  \"i32.store\": sign([u32, u32], []),\n  \"i64.store\": sign([u32, u32], []),\n  \"f32.store\": sign([u32, u32], []),\n  \"f64.store\": sign([u32, u32], []),\n  \"i32.store8\": sign([u32, u32], []),\n  \"i32.store16\": sign([u32, u32], []),\n  \"i64.store8\": sign([u32, u32], []),\n  \"i64.store16\": sign([u32, u32], []),\n  \"i64.store32\": sign([u32, u32], []),\n  current_memory: sign([], []),\n  grow_memory: sign([], [])\n};\nvar numericInstructions = {\n  \"i32.const\": sign([i32], [i32]),\n  \"i64.const\": sign([i64], [i64]),\n  \"f32.const\": sign([f32], [f32]),\n  \"f64.const\": sign([f64], [f64]),\n  \"i32.eqz\": sign([i32], [i32]),\n  \"i32.eq\": sign([i32, i32], [i32]),\n  \"i32.ne\": sign([i32, i32], [i32]),\n  \"i32.lt_s\": sign([i32, i32], [i32]),\n  \"i32.lt_u\": sign([i32, i32], [i32]),\n  \"i32.gt_s\": sign([i32, i32], [i32]),\n  \"i32.gt_u\": sign([i32, i32], [i32]),\n  \"i32.le_s\": sign([i32, i32], [i32]),\n  \"i32.le_u\": sign([i32, i32], [i32]),\n  \"i32.ge_s\": sign([i32, i32], [i32]),\n  \"i32.ge_u\": sign([i32, i32], [i32]),\n  \"i64.eqz\": sign([i64], [i64]),\n  \"i64.eq\": sign([i64, i64], [i32]),\n  \"i64.ne\": sign([i64, i64], [i32]),\n  \"i64.lt_s\": sign([i64, i64], [i32]),\n  \"i64.lt_u\": sign([i64, i64], [i32]),\n  \"i64.gt_s\": sign([i64, i64], [i32]),\n  \"i64.gt_u\": sign([i64, i64], [i32]),\n  \"i64.le_s\": sign([i64, i64], [i32]),\n  \"i64.le_u\": sign([i64, i64], [i32]),\n  \"i64.ge_s\": sign([i64, i64], [i32]),\n  \"i64.ge_u\": sign([i64, i64], [i32]),\n  \"f32.eq\": sign([f32, f32], [i32]),\n  \"f32.ne\": sign([f32, f32], [i32]),\n  \"f32.lt\": sign([f32, f32], [i32]),\n  \"f32.gt\": sign([f32, f32], [i32]),\n  \"f32.le\": sign([f32, f32], [i32]),\n  \"f32.ge\": sign([f32, f32], [i32]),\n  \"f64.eq\": sign([f64, f64], [i32]),\n  \"f64.ne\": sign([f64, f64], [i32]),\n  \"f64.lt\": sign([f64, f64], [i32]),\n  \"f64.gt\": sign([f64, f64], [i32]),\n  \"f64.le\": sign([f64, f64], [i32]),\n  \"f64.ge\": sign([f64, f64], [i32]),\n  \"i32.clz\": sign([i32], [i32]),\n  \"i32.ctz\": sign([i32], [i32]),\n  \"i32.popcnt\": sign([i32], [i32]),\n  \"i32.add\": sign([i32, i32], [i32]),\n  \"i32.sub\": sign([i32, i32], [i32]),\n  \"i32.mul\": sign([i32, i32], [i32]),\n  \"i32.div_s\": sign([i32, i32], [i32]),\n  \"i32.div_u\": sign([i32, i32], [i32]),\n  \"i32.rem_s\": sign([i32, i32], [i32]),\n  \"i32.rem_u\": sign([i32, i32], [i32]),\n  \"i32.and\": sign([i32, i32], [i32]),\n  \"i32.or\": sign([i32, i32], [i32]),\n  \"i32.xor\": sign([i32, i32], [i32]),\n  \"i32.shl\": sign([i32, i32], [i32]),\n  \"i32.shr_s\": sign([i32, i32], [i32]),\n  \"i32.shr_u\": sign([i32, i32], [i32]),\n  \"i32.rotl\": sign([i32, i32], [i32]),\n  \"i32.rotr\": sign([i32, i32], [i32]),\n  \"i64.clz\": sign([i64], [i64]),\n  \"i64.ctz\": sign([i64], [i64]),\n  \"i64.popcnt\": sign([i64], [i64]),\n  \"i64.add\": sign([i64, i64], [i64]),\n  \"i64.sub\": sign([i64, i64], [i64]),\n  \"i64.mul\": sign([i64, i64], [i64]),\n  \"i64.div_s\": sign([i64, i64], [i64]),\n  \"i64.div_u\": sign([i64, i64], [i64]),\n  \"i64.rem_s\": sign([i64, i64], [i64]),\n  \"i64.rem_u\": sign([i64, i64], [i64]),\n  \"i64.and\": sign([i64, i64], [i64]),\n  \"i64.or\": sign([i64, i64], [i64]),\n  \"i64.xor\": sign([i64, i64], [i64]),\n  \"i64.shl\": sign([i64, i64], [i64]),\n  \"i64.shr_s\": sign([i64, i64], [i64]),\n  \"i64.shr_u\": sign([i64, i64], [i64]),\n  \"i64.rotl\": sign([i64, i64], [i64]),\n  \"i64.rotr\": sign([i64, i64], [i64]),\n  \"f32.abs\": sign([f32], [f32]),\n  \"f32.neg\": sign([f32], [f32]),\n  \"f32.ceil\": sign([f32], [f32]),\n  \"f32.floor\": sign([f32], [f32]),\n  \"f32.trunc\": sign([f32], [f32]),\n  \"f32.nearest\": sign([f32], [f32]),\n  \"f32.sqrt\": sign([f32], [f32]),\n  \"f32.add\": sign([f32, f32], [f32]),\n  \"f32.sub\": sign([f32, f32], [f32]),\n  \"f32.mul\": sign([f32, f32], [f32]),\n  \"f32.div\": sign([f32, f32], [f32]),\n  \"f32.min\": sign([f32, f32], [f32]),\n  \"f32.max\": sign([f32, f32], [f32]),\n  \"f32.copysign\": sign([f32, f32], [f32]),\n  \"f64.abs\": sign([f64], [f64]),\n  \"f64.neg\": sign([f64], [f64]),\n  \"f64.ceil\": sign([f64], [f64]),\n  \"f64.floor\": sign([f64], [f64]),\n  \"f64.trunc\": sign([f64], [f64]),\n  \"f64.nearest\": sign([f64], [f64]),\n  \"f64.sqrt\": sign([f64], [f64]),\n  \"f64.add\": sign([f64, f64], [f64]),\n  \"f64.sub\": sign([f64, f64], [f64]),\n  \"f64.mul\": sign([f64, f64], [f64]),\n  \"f64.div\": sign([f64, f64], [f64]),\n  \"f64.min\": sign([f64, f64], [f64]),\n  \"f64.max\": sign([f64, f64], [f64]),\n  \"f64.copysign\": sign([f64, f64], [f64]),\n  \"i32.wrap/i64\": sign([i64], [i32]),\n  \"i32.trunc_s/f32\": sign([f32], [i32]),\n  \"i32.trunc_u/f32\": sign([f32], [i32]),\n  \"i32.trunc_s/f64\": sign([f32], [i32]),\n  \"i32.trunc_u/f64\": sign([f64], [i32]),\n  \"i64.extend_s/i32\": sign([i32], [i64]),\n  \"i64.extend_u/i32\": sign([i32], [i64]),\n  \"i64.trunc_s/f32\": sign([f32], [i64]),\n  \"i64.trunc_u/f32\": sign([f32], [i64]),\n  \"i64.trunc_s/f64\": sign([f64], [i64]),\n  \"i64.trunc_u/f64\": sign([f64], [i64]),\n  \"f32.convert_s/i32\": sign([i32], [f32]),\n  \"f32.convert_u/i32\": sign([i32], [f32]),\n  \"f32.convert_s/i64\": sign([i64], [f32]),\n  \"f32.convert_u/i64\": sign([i64], [f32]),\n  \"f32.demote/f64\": sign([f64], [f32]),\n  \"f64.convert_s/i32\": sign([i32], [f64]),\n  \"f64.convert_u/i32\": sign([i32], [f64]),\n  \"f64.convert_s/i64\": sign([i64], [f64]),\n  \"f64.convert_u/i64\": sign([i64], [f64]),\n  \"f64.promote/f32\": sign([f32], [f64]),\n  \"i32.reinterpret/f32\": sign([f32], [i32]),\n  \"i64.reinterpret/f64\": sign([f64], [i64]),\n  \"f32.reinterpret/i32\": sign([i32], [f32]),\n  \"f64.reinterpret/i64\": sign([i64], [f64])\n};\nexport var signatures = Object.assign({}, controlInstructions, parametricInstructions, variableInstructions, memoryInstructions, numericInstructions);","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/@webassemblyjs/ast/esm/signatures.js"],"names":["sign","input","output","u32","i32","i64","f32","f64","vector","t","vecType","controlInstructions","unreachable","nop","br","br_if","br_table","return","call","call_indirect","parametricInstructions","drop","select","variableInstructions","get_local","set_local","tee_local","get_global","set_global","memoryInstructions","current_memory","grow_memory","numericInstructions","signatures","Object","assign"],"mappings":"AAAA,SAASA,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AAC3B,SAAO,CAACD,KAAD,EAAQC,MAAR,CAAP;AACD;;AAED,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,GAAG,GAAG,KAAV;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAC9B,MAAIC,OAAO,GAAG,CAACD,CAAD,CAAd,CAD8B,CACX;;AAEnBC,EAAAA,OAAO,CAACF,MAAR,GAAiB,IAAjB;AACA,SAAOE,OAAP;AACD,CALD;;AAOA,IAAIC,mBAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAEZ,IAAI,CAAC,EAAD,EAAK,EAAL,CADO;AAExBa,EAAAA,GAAG,EAAEb,IAAI,CAAC,EAAD,EAAK,EAAL,CAFe;AAGxB;AACA;AACA;AACA;AACAc,EAAAA,EAAE,EAAEd,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CAPgB;AAQxBY,EAAAA,KAAK,EAAEf,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CARa;AASxBa,EAAAA,QAAQ,EAAEhB,IAAI,CAACQ,MAAM,CAACL,GAAD,CAAP,EAAc,EAAd,CATU;AAUxBc,EAAAA,MAAM,EAAEjB,IAAI,CAAC,EAAD,EAAK,EAAL,CAVY;AAWxBkB,EAAAA,IAAI,EAAElB,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CAXc;AAYxBgB,EAAAA,aAAa,EAAEnB,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR;AAZK,CAA1B;AAcA,IAAIiB,sBAAsB,GAAG;AAC3BC,EAAAA,IAAI,EAAErB,IAAI,CAAC,EAAD,EAAK,EAAL,CADiB;AAE3BsB,EAAAA,MAAM,EAAEtB,IAAI,CAAC,EAAD,EAAK,EAAL;AAFe,CAA7B;AAIA,IAAIuB,oBAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAExB,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CADU;AAEzBsB,EAAAA,SAAS,EAAEzB,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CAFU;AAGzBuB,EAAAA,SAAS,EAAE1B,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CAHU;AAIzBwB,EAAAA,UAAU,EAAE3B,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR,CAJS;AAKzByB,EAAAA,UAAU,EAAE5B,IAAI,CAAC,CAACG,GAAD,CAAD,EAAQ,EAAR;AALS,CAA3B;AAOA,IAAI0B,kBAAkB,GAAG;AACvB,cAAY7B,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACC,GAAD,CAAb,CADO;AAEvB,cAAYJ,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAFO;AAGvB,cAAYH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAHO;AAIvB,cAAYH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAJO;AAKvB,iBAAeH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACC,GAAD,CAAb,CALI;AAMvB,iBAAeJ,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACC,GAAD,CAAb,CANI;AAOvB,kBAAgBJ,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACC,GAAD,CAAb,CAPG;AAQvB,kBAAgBJ,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACC,GAAD,CAAb,CARG;AASvB,iBAAeJ,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CATI;AAUvB,iBAAeL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CAVI;AAWvB,kBAAgBL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CAXG;AAYvB,kBAAgBL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CAZG;AAavB,kBAAgBL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CAbG;AAcvB,kBAAgBL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACE,GAAD,CAAb,CAdG;AAevB,eAAaL,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAfM;AAgBvB,eAAaH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAhBM;AAiBvB,eAAaH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAjBM;AAkBvB,eAAaH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAlBM;AAmBvB,gBAAcH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAnBK;AAoBvB,iBAAeH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CApBI;AAqBvB,gBAAcH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CArBK;AAsBvB,iBAAeH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAtBI;AAuBvB,iBAAeH,IAAI,CAAC,CAACG,GAAD,EAAMA,GAAN,CAAD,EAAa,EAAb,CAvBI;AAwBvB2B,EAAAA,cAAc,EAAE9B,IAAI,CAAC,EAAD,EAAK,EAAL,CAxBG;AAyBvB+B,EAAAA,WAAW,EAAE/B,IAAI,CAAC,EAAD,EAAK,EAAL;AAzBM,CAAzB;AA2BA,IAAIgC,mBAAmB,GAAG;AACxB,eAAahC,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CADO;AAExB,eAAaJ,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAFO;AAGxB,eAAaL,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAHO;AAIxB,eAAaN,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAJO;AAKxB,aAAWP,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CALS;AAMxB,YAAUJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CANU;AAOxB,YAAUJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAPU;AAQxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CARQ;AASxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CATQ;AAUxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAVQ;AAWxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAXQ;AAYxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAZQ;AAaxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAbQ;AAcxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAdQ;AAexB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAfQ;AAgBxB,aAAWJ,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAhBS;AAiBxB,YAAUL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAjBU;AAkBxB,YAAUJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAlBU;AAmBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAnBQ;AAoBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CApBQ;AAqBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CArBQ;AAsBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAtBQ;AAuBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAvBQ;AAwBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAxBQ;AAyBxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CAzBQ;AA0BxB,cAAYJ,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACD,GAAD,CAAb,CA1BQ;AA2BxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CA3BU;AA4BxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CA5BU;AA6BxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CA7BU;AA8BxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CA9BU;AA+BxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CA/BU;AAgCxB,YAAUJ,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACF,GAAD,CAAb,CAhCU;AAiCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CAjCU;AAkCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CAlCU;AAmCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CAnCU;AAoCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CApCU;AAqCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CArCU;AAsCxB,YAAUJ,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACH,GAAD,CAAb,CAtCU;AAuCxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAvCS;AAwCxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAxCS;AAyCxB,gBAAcJ,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAzCM;AA0CxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA1CS;AA2CxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA3CS;AA4CxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA5CS;AA6CxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA7CO;AA8CxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA9CO;AA+CxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA/CO;AAgDxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAhDO;AAiDxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAjDS;AAkDxB,YAAUJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAlDU;AAmDxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAnDS;AAoDxB,aAAWJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CApDS;AAqDxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CArDO;AAsDxB,eAAaJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAtDO;AAuDxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAvDQ;AAwDxB,cAAYJ,IAAI,CAAC,CAACI,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAxDQ;AAyDxB,aAAWJ,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAzDS;AA0DxB,aAAWL,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA1DS;AA2DxB,gBAAcL,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA3DM;AA4DxB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA5DS;AA6DxB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA7DS;AA8DxB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA9DS;AA+DxB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA/DO;AAgExB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAhEO;AAiExB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAjEO;AAkExB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAlEO;AAmExB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAnES;AAoExB,YAAUL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CApEU;AAqExB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CArES;AAsExB,aAAWL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAtES;AAuExB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAvEO;AAwExB,eAAaL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAxEO;AAyExB,cAAYL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAzEQ;AA0ExB,cAAYL,IAAI,CAAC,CAACK,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CA1EQ;AA2ExB,aAAWL,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA3ES;AA4ExB,aAAWN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA5ES;AA6ExB,cAAYN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA7EQ;AA8ExB,eAAaN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA9EO;AA+ExB,eAAaN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA/EO;AAgFxB,iBAAeN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAhFK;AAiFxB,cAAYN,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAjFQ;AAkFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAlFS;AAmFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAnFS;AAoFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CApFS;AAqFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CArFS;AAsFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAtFS;AAuFxB,aAAWN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAvFS;AAwFxB,kBAAgBN,IAAI,CAAC,CAACM,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAxFI;AAyFxB,aAAWN,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CAzFS;AA0FxB,aAAWP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA1FS;AA2FxB,cAAYP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA3FQ;AA4FxB,eAAaP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA5FO;AA6FxB,eAAaP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA7FO;AA8FxB,iBAAeP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA9FK;AA+FxB,cAAYP,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACA,GAAD,CAAR,CA/FQ;AAgGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAhGS;AAiGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAjGS;AAkGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAlGS;AAmGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAnGS;AAoGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CApGS;AAqGxB,aAAWP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CArGS;AAsGxB,kBAAgBP,IAAI,CAAC,CAACO,GAAD,EAAMA,GAAN,CAAD,EAAa,CAACA,GAAD,CAAb,CAtGI;AAuGxB,kBAAgBP,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACD,GAAD,CAAR,CAvGI;AAwGxB,qBAAmBJ,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CAxGC;AAyGxB,qBAAmBJ,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CAzGC;AA0GxB,qBAAmBJ,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CA1GC;AA2GxB,qBAAmBJ,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACH,GAAD,CAAR,CA3GC;AA4GxB,sBAAoBJ,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACC,GAAD,CAAR,CA5GA;AA6GxB,sBAAoBL,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACC,GAAD,CAAR,CA7GA;AA8GxB,qBAAmBL,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACD,GAAD,CAAR,CA9GC;AA+GxB,qBAAmBL,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACD,GAAD,CAAR,CA/GC;AAgHxB,qBAAmBL,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CAhHC;AAiHxB,qBAAmBL,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CAjHC;AAkHxB,uBAAqBL,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR,CAlHD;AAmHxB,uBAAqBN,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR,CAnHD;AAoHxB,uBAAqBN,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACC,GAAD,CAAR,CApHD;AAqHxB,uBAAqBN,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACC,GAAD,CAAR,CArHD;AAsHxB,oBAAkBN,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACD,GAAD,CAAR,CAtHE;AAuHxB,uBAAqBN,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACG,GAAD,CAAR,CAvHD;AAwHxB,uBAAqBP,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACG,GAAD,CAAR,CAxHD;AAyHxB,uBAAqBP,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR,CAzHD;AA0HxB,uBAAqBP,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR,CA1HD;AA2HxB,qBAAmBP,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACC,GAAD,CAAR,CA3HC;AA4HxB,yBAAuBP,IAAI,CAAC,CAACM,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CA5HH;AA6HxB,yBAAuBJ,IAAI,CAAC,CAACO,GAAD,CAAD,EAAQ,CAACF,GAAD,CAAR,CA7HH;AA8HxB,yBAAuBL,IAAI,CAAC,CAACI,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR,CA9HH;AA+HxB,yBAAuBN,IAAI,CAAC,CAACK,GAAD,CAAD,EAAQ,CAACE,GAAD,CAAR;AA/HH,CAA1B;AAiIA,OAAO,IAAI0B,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBxB,mBAAlB,EAAuCS,sBAAvC,EAA+DG,oBAA/D,EAAqFM,kBAArF,EAAyGG,mBAAzG,CAAjB","sourcesContent":["function sign(input, output) {\n  return [input, output];\n}\n\nvar u32 = \"u32\";\nvar i32 = \"i32\";\nvar i64 = \"i64\";\nvar f32 = \"f32\";\nvar f64 = \"f64\";\n\nvar vector = function vector(t) {\n  var vecType = [t]; // $FlowIgnore\n\n  vecType.vector = true;\n  return vecType;\n};\n\nvar controlInstructions = {\n  unreachable: sign([], []),\n  nop: sign([], []),\n  // block ?\n  // loop ?\n  // if ?\n  // if else ?\n  br: sign([u32], []),\n  br_if: sign([u32], []),\n  br_table: sign(vector(u32), []),\n  return: sign([], []),\n  call: sign([u32], []),\n  call_indirect: sign([u32], [])\n};\nvar parametricInstructions = {\n  drop: sign([], []),\n  select: sign([], [])\n};\nvar variableInstructions = {\n  get_local: sign([u32], []),\n  set_local: sign([u32], []),\n  tee_local: sign([u32], []),\n  get_global: sign([u32], []),\n  set_global: sign([u32], [])\n};\nvar memoryInstructions = {\n  \"i32.load\": sign([u32, u32], [i32]),\n  \"i64.load\": sign([u32, u32], []),\n  \"f32.load\": sign([u32, u32], []),\n  \"f64.load\": sign([u32, u32], []),\n  \"i32.load8_s\": sign([u32, u32], [i32]),\n  \"i32.load8_u\": sign([u32, u32], [i32]),\n  \"i32.load16_s\": sign([u32, u32], [i32]),\n  \"i32.load16_u\": sign([u32, u32], [i32]),\n  \"i64.load8_s\": sign([u32, u32], [i64]),\n  \"i64.load8_u\": sign([u32, u32], [i64]),\n  \"i64.load16_s\": sign([u32, u32], [i64]),\n  \"i64.load16_u\": sign([u32, u32], [i64]),\n  \"i64.load32_s\": sign([u32, u32], [i64]),\n  \"i64.load32_u\": sign([u32, u32], [i64]),\n  \"i32.store\": sign([u32, u32], []),\n  \"i64.store\": sign([u32, u32], []),\n  \"f32.store\": sign([u32, u32], []),\n  \"f64.store\": sign([u32, u32], []),\n  \"i32.store8\": sign([u32, u32], []),\n  \"i32.store16\": sign([u32, u32], []),\n  \"i64.store8\": sign([u32, u32], []),\n  \"i64.store16\": sign([u32, u32], []),\n  \"i64.store32\": sign([u32, u32], []),\n  current_memory: sign([], []),\n  grow_memory: sign([], [])\n};\nvar numericInstructions = {\n  \"i32.const\": sign([i32], [i32]),\n  \"i64.const\": sign([i64], [i64]),\n  \"f32.const\": sign([f32], [f32]),\n  \"f64.const\": sign([f64], [f64]),\n  \"i32.eqz\": sign([i32], [i32]),\n  \"i32.eq\": sign([i32, i32], [i32]),\n  \"i32.ne\": sign([i32, i32], [i32]),\n  \"i32.lt_s\": sign([i32, i32], [i32]),\n  \"i32.lt_u\": sign([i32, i32], [i32]),\n  \"i32.gt_s\": sign([i32, i32], [i32]),\n  \"i32.gt_u\": sign([i32, i32], [i32]),\n  \"i32.le_s\": sign([i32, i32], [i32]),\n  \"i32.le_u\": sign([i32, i32], [i32]),\n  \"i32.ge_s\": sign([i32, i32], [i32]),\n  \"i32.ge_u\": sign([i32, i32], [i32]),\n  \"i64.eqz\": sign([i64], [i64]),\n  \"i64.eq\": sign([i64, i64], [i32]),\n  \"i64.ne\": sign([i64, i64], [i32]),\n  \"i64.lt_s\": sign([i64, i64], [i32]),\n  \"i64.lt_u\": sign([i64, i64], [i32]),\n  \"i64.gt_s\": sign([i64, i64], [i32]),\n  \"i64.gt_u\": sign([i64, i64], [i32]),\n  \"i64.le_s\": sign([i64, i64], [i32]),\n  \"i64.le_u\": sign([i64, i64], [i32]),\n  \"i64.ge_s\": sign([i64, i64], [i32]),\n  \"i64.ge_u\": sign([i64, i64], [i32]),\n  \"f32.eq\": sign([f32, f32], [i32]),\n  \"f32.ne\": sign([f32, f32], [i32]),\n  \"f32.lt\": sign([f32, f32], [i32]),\n  \"f32.gt\": sign([f32, f32], [i32]),\n  \"f32.le\": sign([f32, f32], [i32]),\n  \"f32.ge\": sign([f32, f32], [i32]),\n  \"f64.eq\": sign([f64, f64], [i32]),\n  \"f64.ne\": sign([f64, f64], [i32]),\n  \"f64.lt\": sign([f64, f64], [i32]),\n  \"f64.gt\": sign([f64, f64], [i32]),\n  \"f64.le\": sign([f64, f64], [i32]),\n  \"f64.ge\": sign([f64, f64], [i32]),\n  \"i32.clz\": sign([i32], [i32]),\n  \"i32.ctz\": sign([i32], [i32]),\n  \"i32.popcnt\": sign([i32], [i32]),\n  \"i32.add\": sign([i32, i32], [i32]),\n  \"i32.sub\": sign([i32, i32], [i32]),\n  \"i32.mul\": sign([i32, i32], [i32]),\n  \"i32.div_s\": sign([i32, i32], [i32]),\n  \"i32.div_u\": sign([i32, i32], [i32]),\n  \"i32.rem_s\": sign([i32, i32], [i32]),\n  \"i32.rem_u\": sign([i32, i32], [i32]),\n  \"i32.and\": sign([i32, i32], [i32]),\n  \"i32.or\": sign([i32, i32], [i32]),\n  \"i32.xor\": sign([i32, i32], [i32]),\n  \"i32.shl\": sign([i32, i32], [i32]),\n  \"i32.shr_s\": sign([i32, i32], [i32]),\n  \"i32.shr_u\": sign([i32, i32], [i32]),\n  \"i32.rotl\": sign([i32, i32], [i32]),\n  \"i32.rotr\": sign([i32, i32], [i32]),\n  \"i64.clz\": sign([i64], [i64]),\n  \"i64.ctz\": sign([i64], [i64]),\n  \"i64.popcnt\": sign([i64], [i64]),\n  \"i64.add\": sign([i64, i64], [i64]),\n  \"i64.sub\": sign([i64, i64], [i64]),\n  \"i64.mul\": sign([i64, i64], [i64]),\n  \"i64.div_s\": sign([i64, i64], [i64]),\n  \"i64.div_u\": sign([i64, i64], [i64]),\n  \"i64.rem_s\": sign([i64, i64], [i64]),\n  \"i64.rem_u\": sign([i64, i64], [i64]),\n  \"i64.and\": sign([i64, i64], [i64]),\n  \"i64.or\": sign([i64, i64], [i64]),\n  \"i64.xor\": sign([i64, i64], [i64]),\n  \"i64.shl\": sign([i64, i64], [i64]),\n  \"i64.shr_s\": sign([i64, i64], [i64]),\n  \"i64.shr_u\": sign([i64, i64], [i64]),\n  \"i64.rotl\": sign([i64, i64], [i64]),\n  \"i64.rotr\": sign([i64, i64], [i64]),\n  \"f32.abs\": sign([f32], [f32]),\n  \"f32.neg\": sign([f32], [f32]),\n  \"f32.ceil\": sign([f32], [f32]),\n  \"f32.floor\": sign([f32], [f32]),\n  \"f32.trunc\": sign([f32], [f32]),\n  \"f32.nearest\": sign([f32], [f32]),\n  \"f32.sqrt\": sign([f32], [f32]),\n  \"f32.add\": sign([f32, f32], [f32]),\n  \"f32.sub\": sign([f32, f32], [f32]),\n  \"f32.mul\": sign([f32, f32], [f32]),\n  \"f32.div\": sign([f32, f32], [f32]),\n  \"f32.min\": sign([f32, f32], [f32]),\n  \"f32.max\": sign([f32, f32], [f32]),\n  \"f32.copysign\": sign([f32, f32], [f32]),\n  \"f64.abs\": sign([f64], [f64]),\n  \"f64.neg\": sign([f64], [f64]),\n  \"f64.ceil\": sign([f64], [f64]),\n  \"f64.floor\": sign([f64], [f64]),\n  \"f64.trunc\": sign([f64], [f64]),\n  \"f64.nearest\": sign([f64], [f64]),\n  \"f64.sqrt\": sign([f64], [f64]),\n  \"f64.add\": sign([f64, f64], [f64]),\n  \"f64.sub\": sign([f64, f64], [f64]),\n  \"f64.mul\": sign([f64, f64], [f64]),\n  \"f64.div\": sign([f64, f64], [f64]),\n  \"f64.min\": sign([f64, f64], [f64]),\n  \"f64.max\": sign([f64, f64], [f64]),\n  \"f64.copysign\": sign([f64, f64], [f64]),\n  \"i32.wrap/i64\": sign([i64], [i32]),\n  \"i32.trunc_s/f32\": sign([f32], [i32]),\n  \"i32.trunc_u/f32\": sign([f32], [i32]),\n  \"i32.trunc_s/f64\": sign([f32], [i32]),\n  \"i32.trunc_u/f64\": sign([f64], [i32]),\n  \"i64.extend_s/i32\": sign([i32], [i64]),\n  \"i64.extend_u/i32\": sign([i32], [i64]),\n  \"i64.trunc_s/f32\": sign([f32], [i64]),\n  \"i64.trunc_u/f32\": sign([f32], [i64]),\n  \"i64.trunc_s/f64\": sign([f64], [i64]),\n  \"i64.trunc_u/f64\": sign([f64], [i64]),\n  \"f32.convert_s/i32\": sign([i32], [f32]),\n  \"f32.convert_u/i32\": sign([i32], [f32]),\n  \"f32.convert_s/i64\": sign([i64], [f32]),\n  \"f32.convert_u/i64\": sign([i64], [f32]),\n  \"f32.demote/f64\": sign([f64], [f32]),\n  \"f64.convert_s/i32\": sign([i32], [f64]),\n  \"f64.convert_u/i32\": sign([i32], [f64]),\n  \"f64.convert_s/i64\": sign([i64], [f64]),\n  \"f64.convert_u/i64\": sign([i64], [f64]),\n  \"f64.promote/f32\": sign([f32], [f64]),\n  \"i32.reinterpret/f32\": sign([f32], [i32]),\n  \"i64.reinterpret/f64\": sign([f64], [i64]),\n  \"f32.reinterpret/i32\": sign([i32], [f32]),\n  \"f64.reinterpret/i64\": sign([i64], [f64])\n};\nexport var signatures = Object.assign({}, controlInstructions, parametricInstructions, variableInstructions, memoryInstructions, numericInstructions);"]},"metadata":{},"sourceType":"module"}