{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n\nclass HarmonyExportSpecifierDependency extends NullDependency {\n  constructor(id, name) {\n    super();\n    this.id = id;\n    this.name = name;\n  }\n\n  get type() {\n    return \"harmony export specifier\";\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    return {\n      exports: [this.name],\n      priority: 1,\n      terminalBinding: true,\n      dependencies: undefined\n    };\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n\n\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.id);\n    write(this.name);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.id = read();\n    this.name = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyExportSpecifierDependency, \"webpack/lib/dependencies/HarmonyExportSpecifierDependency\");\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      moduleGraph,\n      initFragments,\n      runtime,\n      concatenationScope\n    } = _ref;\n    const dep =\n    /** @type {HarmonyExportSpecifierDependency} */\n    dependency;\n\n    if (concatenationScope) {\n      concatenationScope.registerExport(dep.name, dep.id);\n      return;\n    }\n\n    const used = moduleGraph.getExportsInfo(module).getUsedName(dep.name, runtime);\n\n    if (!used) {\n      const set = new Set();\n      set.add(dep.name || \"namespace\");\n      initFragments.push(new HarmonyExportInitFragment(module.exportsArgument, undefined, set));\n      return;\n    }\n\n    const map = new Map();\n    map.set(used, `/* binding */ ${dep.id}`);\n    initFragments.push(new HarmonyExportInitFragment(module.exportsArgument, map, undefined));\n  }\n\n};\nmodule.exports = HarmonyExportSpecifierDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyExportSpecifierDependency.js"],"names":["makeSerializable","require","HarmonyExportInitFragment","NullDependency","HarmonyExportSpecifierDependency","constructor","id","name","type","getExports","moduleGraph","exports","priority","terminalBinding","dependencies","undefined","getModuleEvaluationSideEffectsState","serialize","context","write","deserialize","read","Template","HarmonyExportSpecifierDependencyTemplate","apply","dependency","source","module","initFragments","runtime","concatenationScope","dep","registerExport","used","getExportsInfo","getUsedName","set","Set","add","push","exportsArgument","map","Map"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\nclass HarmonyExportSpecifierDependency extends NullDependency {\n\tconstructor(id, name) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export specifier\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\treturn {\n\t\t\texports: [this.name],\n\t\t\tpriority: 1,\n\t\t\tterminalBinding: true,\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\treturn false;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.id);\n\t\twrite(this.name);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.id = read();\n\t\tthis.name = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyExportSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyExportSpecifierDependency\"\n);\n\nHarmonyExportSpecifierDependency.Template = class HarmonyExportSpecifierDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ module, moduleGraph, initFragments, runtime, concatenationScope }\n\t) {\n\t\tconst dep = /** @type {HarmonyExportSpecifierDependency} */ (dependency);\n\t\tif (concatenationScope) {\n\t\t\tconcatenationScope.registerExport(dep.name, dep.id);\n\t\t\treturn;\n\t\t}\n\t\tconst used = moduleGraph\n\t\t\t.getExportsInfo(module)\n\t\t\t.getUsedName(dep.name, runtime);\n\t\tif (!used) {\n\t\t\tconst set = new Set();\n\t\t\tset.add(dep.name || \"namespace\");\n\t\t\tinitFragments.push(\n\t\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, undefined, set)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst map = new Map();\n\t\tmap.set(used, `/* binding */ ${dep.id}`);\n\t\tinitFragments.push(\n\t\t\tnew HarmonyExportInitFragment(module.exportsArgument, map, undefined)\n\t\t);\n\t}\n};\n\nmodule.exports = HarmonyExportSpecifierDependency;\n"]},"metadata":{},"sourceType":"script"}