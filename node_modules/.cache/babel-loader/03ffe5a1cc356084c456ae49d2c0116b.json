{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass SizeOnlySource extends Source {\n  constructor(size) {\n    super();\n    this._size = size;\n  }\n\n  _error() {\n    return new Error(\"Content and Map of this Source is not available (only size() is supported)\");\n  }\n\n  size() {\n    return this._size;\n  }\n\n  source() {\n    throw this._error();\n  }\n\n  buffer() {\n    throw this._error();\n  }\n\n  map(options) {\n    throw this._error();\n  }\n\n  updateHash() {\n    throw this._error();\n  }\n\n}\n\nmodule.exports = SizeOnlySource;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack-sources/lib/SizeOnlySource.js"],"names":["Source","require","SizeOnlySource","constructor","size","_size","_error","Error","source","buffer","map","options","updateHash","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMC,cAAN,SAA6BF,MAA7B,CAAoC;AACnCG,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB;AACA,SAAKC,KAAL,GAAaD,IAAb;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WAAO,IAAIC,KAAJ,CACN,4EADM,CAAP;AAGA;;AAEDH,EAAAA,IAAI,GAAG;AACN,WAAO,KAAKC,KAAZ;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,UAAM,KAAKF,MAAL,EAAN;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,UAAM,KAAKH,MAAL,EAAN;AACA;;AAEDI,EAAAA,GAAG,CAACC,OAAD,EAAU;AACZ,UAAM,KAAKL,MAAL,EAAN;AACA;;AAEDM,EAAAA,UAAU,GAAG;AACZ,UAAM,KAAKN,MAAL,EAAN;AACA;;AA9BkC;;AAiCpCO,MAAM,CAACC,OAAP,GAAiBZ,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass SizeOnlySource extends Source {\n\tconstructor(size) {\n\t\tsuper();\n\t\tthis._size = size;\n\t}\n\n\t_error() {\n\t\treturn new Error(\n\t\t\t\"Content and Map of this Source is not available (only size() is supported)\"\n\t\t);\n\t}\n\n\tsize() {\n\t\treturn this._size;\n\t}\n\n\tsource() {\n\t\tthrow this._error();\n\t}\n\n\tbuffer() {\n\t\tthrow this._error();\n\t}\n\n\tmap(options) {\n\t\tthrow this._error();\n\t}\n\n\tupdateHash() {\n\t\tthrow this._error();\n\t}\n}\n\nmodule.exports = SizeOnlySource;\n"]},"metadata":{},"sourceType":"script"}