{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ElectronTargetPlugin {\n  /**\n   * @param {\"main\" | \"preload\" | \"renderer\"=} context in main, preload or renderer context?\n   */\n  constructor(context) {\n    this._context = context;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    new ExternalsPlugin(\"node-commonjs\", [\"clipboard\", \"crash-reporter\", \"electron\", \"ipc\", \"native-image\", \"original-fs\", \"screen\", \"shell\"]).apply(compiler);\n\n    switch (this._context) {\n      case \"main\":\n        new ExternalsPlugin(\"node-commonjs\", [\"app\", \"auto-updater\", \"browser-window\", \"content-tracing\", \"dialog\", \"global-shortcut\", \"ipc-main\", \"menu\", \"menu-item\", \"power-monitor\", \"power-save-blocker\", \"protocol\", \"session\", \"tray\", \"web-contents\"]).apply(compiler);\n        break;\n\n      case \"preload\":\n      case \"renderer\":\n        new ExternalsPlugin(\"node-commonjs\", [\"desktop-capturer\", \"ipc-renderer\", \"remote\", \"web-frame\"]).apply(compiler);\n        break;\n    }\n  }\n\n}\n\nmodule.exports = ElectronTargetPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/electron/ElectronTargetPlugin.js"],"names":["ExternalsPlugin","require","ElectronTargetPlugin","constructor","context","_context","apply","compiler","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA/B;AAEA;;;AAEA,MAAMC,oBAAN,CAA2B;AAC1B;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKC,QAAL,GAAgBD,OAAhB;AACA;AACD;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,QAAIP,eAAJ,CAAoB,eAApB,EAAqC,CACpC,WADoC,EAEpC,gBAFoC,EAGpC,UAHoC,EAIpC,KAJoC,EAKpC,cALoC,EAMpC,aANoC,EAOpC,QAPoC,EAQpC,OARoC,CAArC,EASGM,KATH,CASSC,QATT;;AAUA,YAAQ,KAAKF,QAAb;AACC,WAAK,MAAL;AACC,YAAIL,eAAJ,CAAoB,eAApB,EAAqC,CACpC,KADoC,EAEpC,cAFoC,EAGpC,gBAHoC,EAIpC,iBAJoC,EAKpC,QALoC,EAMpC,iBANoC,EAOpC,UAPoC,EAQpC,MARoC,EASpC,WAToC,EAUpC,eAVoC,EAWpC,oBAXoC,EAYpC,UAZoC,EAapC,SAboC,EAcpC,MAdoC,EAepC,cAfoC,CAArC,EAgBGM,KAhBH,CAgBSC,QAhBT;AAiBA;;AACD,WAAK,SAAL;AACA,WAAK,UAAL;AACC,YAAIP,eAAJ,CAAoB,eAApB,EAAqC,CACpC,kBADoC,EAEpC,cAFoC,EAGpC,QAHoC,EAIpC,WAJoC,CAArC,EAKGM,KALH,CAKSC,QALT;AAMA;AA5BF;AA8BA;;AArDyB;;AAwD3BC,MAAM,CAACC,OAAP,GAAiBP,oBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ExternalsPlugin = require(\"../ExternalsPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ElectronTargetPlugin {\n\t/**\n\t * @param {\"main\" | \"preload\" | \"renderer\"=} context in main, preload or renderer context?\n\t */\n\tconstructor(context) {\n\t\tthis._context = context;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tnew ExternalsPlugin(\"node-commonjs\", [\n\t\t\t\"clipboard\",\n\t\t\t\"crash-reporter\",\n\t\t\t\"electron\",\n\t\t\t\"ipc\",\n\t\t\t\"native-image\",\n\t\t\t\"original-fs\",\n\t\t\t\"screen\",\n\t\t\t\"shell\"\n\t\t]).apply(compiler);\n\t\tswitch (this._context) {\n\t\t\tcase \"main\":\n\t\t\t\tnew ExternalsPlugin(\"node-commonjs\", [\n\t\t\t\t\t\"app\",\n\t\t\t\t\t\"auto-updater\",\n\t\t\t\t\t\"browser-window\",\n\t\t\t\t\t\"content-tracing\",\n\t\t\t\t\t\"dialog\",\n\t\t\t\t\t\"global-shortcut\",\n\t\t\t\t\t\"ipc-main\",\n\t\t\t\t\t\"menu\",\n\t\t\t\t\t\"menu-item\",\n\t\t\t\t\t\"power-monitor\",\n\t\t\t\t\t\"power-save-blocker\",\n\t\t\t\t\t\"protocol\",\n\t\t\t\t\t\"session\",\n\t\t\t\t\t\"tray\",\n\t\t\t\t\t\"web-contents\"\n\t\t\t\t]).apply(compiler);\n\t\t\t\tbreak;\n\t\t\tcase \"preload\":\n\t\t\tcase \"renderer\":\n\t\t\t\tnew ExternalsPlugin(\"node-commonjs\", [\n\t\t\t\t\t\"desktop-capturer\",\n\t\t\t\t\t\"ipc-renderer\",\n\t\t\t\t\t\"remote\",\n\t\t\t\t\t\"web-frame\"\n\t\t\t\t]).apply(compiler);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nmodule.exports = ElectronTargetPlugin;\n"]},"metadata":{},"sourceType":"script"}