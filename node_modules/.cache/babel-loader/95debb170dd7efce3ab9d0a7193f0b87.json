{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst Module = require(\"../Module\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst Template = require(\"../Template\");\n\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ContainerExposedDependency = require(\"./ContainerExposedDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"./ContainerEntryDependency\")} ContainerEntryDependency */\n\n/**\n * @typedef {Object} ExposeOptions\n * @property {string[]} import requests to exposed modules (last one is exported)\n * @property {string} name custom chunk name for the exposed module\n */\n\n\nconst SOURCE_TYPES = new Set([\"javascript\"]);\n\nclass ContainerEntryModule extends Module {\n  /**\n   * @param {string} name container entry name\n   * @param {[string, ExposeOptions][]} exposes list of exposed modules\n   * @param {string} shareScope name of the share scope\n   */\n  constructor(name, exposes, shareScope) {\n    super(\"javascript/dynamic\", null);\n    this._name = name;\n    this._exposes = exposes;\n    this._shareScope = shareScope;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return SOURCE_TYPES;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `container entry (${this._shareScope}) ${JSON.stringify(this._exposes)}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return `container entry`;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/entry/${this._name}`;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      strict: true,\n      topLevelDeclarations: new Set([\"moduleMap\", \"get\", \"init\"])\n    };\n    this.buildMeta.exportsType = \"namespace\";\n    this.clearDependenciesAndBlocks();\n\n    for (const [name, options] of this._exposes) {\n      const block = new AsyncDependenciesBlock({\n        name: options.name\n      }, {\n        name\n      }, options.import[options.import.length - 1]);\n      let idx = 0;\n\n      for (const request of options.import) {\n        const dep = new ContainerExposedDependency(name, request);\n        dep.loc = {\n          name,\n          index: idx++\n        };\n        block.addDependency(dep);\n      }\n\n      this.addBlock(block);\n    }\n\n    this.addDependency(new StaticExportsDependency([\"get\", \"init\"], false));\n    callback();\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref) {\n    let {\n      moduleGraph,\n      chunkGraph,\n      runtimeTemplate\n    } = _ref;\n    const sources = new Map();\n    const runtimeRequirements = new Set([RuntimeGlobals.definePropertyGetters, RuntimeGlobals.hasOwnProperty, RuntimeGlobals.exports]);\n    const getters = [];\n\n    for (const block of this.blocks) {\n      const {\n        dependencies\n      } = block;\n      const modules = dependencies.map(dependency => {\n        const dep =\n        /** @type {ContainerExposedDependency} */\n        dependency;\n        return {\n          name: dep.exposedName,\n          module: moduleGraph.getModule(dep),\n          request: dep.userRequest\n        };\n      });\n      let str;\n\n      if (modules.some(m => !m.module)) {\n        str = runtimeTemplate.throwMissingModuleErrorBlock({\n          request: modules.map(m => m.request).join(\", \")\n        });\n      } else {\n        str = `return ${runtimeTemplate.blockPromise({\n          block,\n          message: \"\",\n          chunkGraph,\n          runtimeRequirements\n        })}.then(${runtimeTemplate.returningFunction(runtimeTemplate.returningFunction(`(${modules.map(_ref2 => {\n          let {\n            module,\n            request\n          } = _ref2;\n          return runtimeTemplate.moduleRaw({\n            module,\n            chunkGraph,\n            request,\n            weak: false,\n            runtimeRequirements\n          });\n        }).join(\", \")})`))});`;\n      }\n\n      getters.push(`${JSON.stringify(modules[0].name)}: ${runtimeTemplate.basicFunction(\"\", str)}`);\n    }\n\n    const source = Template.asString([`var moduleMap = {`, Template.indent(getters.join(\",\\n\")), \"};\", `var get = ${runtimeTemplate.basicFunction(\"module, getScope\", [`${RuntimeGlobals.currentRemoteGetScope} = getScope;`, // reusing the getScope variable to avoid creating a new var (and module is also used later)\n    \"getScope = (\", Template.indent([`${RuntimeGlobals.hasOwnProperty}(moduleMap, module)`, Template.indent([\"? moduleMap[module]()\", `: Promise.resolve().then(${runtimeTemplate.basicFunction(\"\", \"throw new Error('Module \\\"' + module + '\\\" does not exist in container.');\")})`])]), \");\", `${RuntimeGlobals.currentRemoteGetScope} = undefined;`, \"return getScope;\"])};`, `var init = ${runtimeTemplate.basicFunction(\"shareScope, initScope\", [`if (!${RuntimeGlobals.shareScopeMap}) return;`, `var name = ${JSON.stringify(this._shareScope)}`, `var oldScope = ${RuntimeGlobals.shareScopeMap}[name];`, `if(oldScope && oldScope !== shareScope) throw new Error(\"Container initialization failed as it has already been initialized with a different share scope\");`, `${RuntimeGlobals.shareScopeMap}[name] = shareScope;`, `return ${RuntimeGlobals.initializeSharing}(name, initScope);`])};`, \"\", \"// This exports getters to disallow modifications\", `${RuntimeGlobals.definePropertyGetters}(exports, {`, Template.indent([`get: ${runtimeTemplate.returningFunction(\"get\")},`, `init: ${runtimeTemplate.returningFunction(\"init\")}`]), \"});\"]);\n    sources.set(\"javascript\", this.useSourceMap || this.useSimpleSourceMap ? new OriginalSource(source, \"webpack/container-entry\") : new RawSource(source));\n    return {\n      sources,\n      runtimeRequirements\n    };\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 42;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this._name);\n    write(this._exposes);\n    write(this._shareScope);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new ContainerEntryModule(read(), read(), read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(ContainerEntryModule, \"webpack/lib/container/ContainerEntryModule\");\nmodule.exports = ContainerEntryModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/container/ContainerEntryModule.js"],"names":["OriginalSource","RawSource","require","AsyncDependenciesBlock","Module","RuntimeGlobals","Template","StaticExportsDependency","makeSerializable","ContainerExposedDependency","SOURCE_TYPES","Set","ContainerEntryModule","constructor","name","exposes","shareScope","_name","_exposes","_shareScope","getSourceTypes","identifier","JSON","stringify","readableIdentifier","requestShortener","libIdent","options","layer","needBuild","context","callback","buildMeta","build","compilation","resolver","fs","buildInfo","strict","topLevelDeclarations","exportsType","clearDependenciesAndBlocks","block","import","length","idx","request","dep","loc","index","addDependency","addBlock","codeGeneration","moduleGraph","chunkGraph","runtimeTemplate","sources","Map","runtimeRequirements","definePropertyGetters","hasOwnProperty","exports","getters","blocks","dependencies","modules","map","dependency","exposedName","module","getModule","userRequest","str","some","m","throwMissingModuleErrorBlock","join","blockPromise","message","returningFunction","moduleRaw","weak","push","basicFunction","source","asString","indent","currentRemoteGetScope","shareScopeMap","initializeSharing","set","useSourceMap","useSimpleSourceMap","size","type","serialize","write","deserialize","read","obj"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra, Zackary Jackson @ScriptedAlchemy, Marais Rossouw @maraisr\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ContainerExposedDependency = require(\"./ContainerExposedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./ContainerEntryDependency\")} ContainerEntryDependency */\n\n/**\n * @typedef {Object} ExposeOptions\n * @property {string[]} import requests to exposed modules (last one is exported)\n * @property {string} name custom chunk name for the exposed module\n */\n\nconst SOURCE_TYPES = new Set([\"javascript\"]);\n\nclass ContainerEntryModule extends Module {\n\t/**\n\t * @param {string} name container entry name\n\t * @param {[string, ExposeOptions][]} exposes list of exposed modules\n\t * @param {string} shareScope name of the share scope\n\t */\n\tconstructor(name, exposes, shareScope) {\n\t\tsuper(\"javascript/dynamic\", null);\n\t\tthis._name = name;\n\t\tthis._exposes = exposes;\n\t\tthis._shareScope = shareScope;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn SOURCE_TYPES;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `container entry (${this._shareScope}) ${JSON.stringify(\n\t\t\tthis._exposes\n\t\t)}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn `container entry`;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/entry/${\n\t\t\tthis._name\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\ttopLevelDeclarations: new Set([\"moduleMap\", \"get\", \"init\"])\n\t\t};\n\t\tthis.buildMeta.exportsType = \"namespace\";\n\n\t\tthis.clearDependenciesAndBlocks();\n\n\t\tfor (const [name, options] of this._exposes) {\n\t\t\tconst block = new AsyncDependenciesBlock(\n\t\t\t\t{\n\t\t\t\t\tname: options.name\n\t\t\t\t},\n\t\t\t\t{ name },\n\t\t\t\toptions.import[options.import.length - 1]\n\t\t\t);\n\t\t\tlet idx = 0;\n\t\t\tfor (const request of options.import) {\n\t\t\t\tconst dep = new ContainerExposedDependency(name, request);\n\t\t\t\tdep.loc = {\n\t\t\t\t\tname,\n\t\t\t\t\tindex: idx++\n\t\t\t\t};\n\n\t\t\t\tblock.addDependency(dep);\n\t\t\t}\n\t\t\tthis.addBlock(block);\n\t\t}\n\t\tthis.addDependency(new StaticExportsDependency([\"get\", \"init\"], false));\n\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ moduleGraph, chunkGraph, runtimeTemplate }) {\n\t\tconst sources = new Map();\n\t\tconst runtimeRequirements = new Set([\n\t\t\tRuntimeGlobals.definePropertyGetters,\n\t\t\tRuntimeGlobals.hasOwnProperty,\n\t\t\tRuntimeGlobals.exports\n\t\t]);\n\t\tconst getters = [];\n\n\t\tfor (const block of this.blocks) {\n\t\t\tconst { dependencies } = block;\n\n\t\t\tconst modules = dependencies.map(dependency => {\n\t\t\t\tconst dep = /** @type {ContainerExposedDependency} */ (dependency);\n\t\t\t\treturn {\n\t\t\t\t\tname: dep.exposedName,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\trequest: dep.userRequest\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tlet str;\n\n\t\t\tif (modules.some(m => !m.module)) {\n\t\t\t\tstr = runtimeTemplate.throwMissingModuleErrorBlock({\n\t\t\t\t\trequest: modules.map(m => m.request).join(\", \")\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tstr = `return ${runtimeTemplate.blockPromise({\n\t\t\t\t\tblock,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t})}.then(${runtimeTemplate.returningFunction(\n\t\t\t\t\truntimeTemplate.returningFunction(\n\t\t\t\t\t\t`(${modules\n\t\t\t\t\t\t\t.map(({ module, request }) =>\n\t\t\t\t\t\t\t\truntimeTemplate.moduleRaw({\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\t\tweak: false,\n\t\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(\", \")})`\n\t\t\t\t\t)\n\t\t\t\t)});`;\n\t\t\t}\n\n\t\t\tgetters.push(\n\t\t\t\t`${JSON.stringify(modules[0].name)}: ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\"\",\n\t\t\t\t\tstr\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\n\t\tconst source = Template.asString([\n\t\t\t`var moduleMap = {`,\n\t\t\tTemplate.indent(getters.join(\",\\n\")),\n\t\t\t\"};\",\n\t\t\t`var get = ${runtimeTemplate.basicFunction(\"module, getScope\", [\n\t\t\t\t`${RuntimeGlobals.currentRemoteGetScope} = getScope;`,\n\t\t\t\t// reusing the getScope variable to avoid creating a new var (and module is also used later)\n\t\t\t\t\"getScope = (\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t`${RuntimeGlobals.hasOwnProperty}(moduleMap, module)`,\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"? moduleMap[module]()\",\n\t\t\t\t\t\t`: Promise.resolve().then(${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\"throw new Error('Module \\\"' + module + '\\\" does not exist in container.');\"\n\t\t\t\t\t\t)})`\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\t\");\",\n\t\t\t\t`${RuntimeGlobals.currentRemoteGetScope} = undefined;`,\n\t\t\t\t\"return getScope;\"\n\t\t\t])};`,\n\t\t\t`var init = ${runtimeTemplate.basicFunction(\"shareScope, initScope\", [\n\t\t\t\t`if (!${RuntimeGlobals.shareScopeMap}) return;`,\n\t\t\t\t`var name = ${JSON.stringify(this._shareScope)}`,\n\t\t\t\t`var oldScope = ${RuntimeGlobals.shareScopeMap}[name];`,\n\t\t\t\t`if(oldScope && oldScope !== shareScope) throw new Error(\"Container initialization failed as it has already been initialized with a different share scope\");`,\n\t\t\t\t`${RuntimeGlobals.shareScopeMap}[name] = shareScope;`,\n\t\t\t\t`return ${RuntimeGlobals.initializeSharing}(name, initScope);`\n\t\t\t])};`,\n\t\t\t\"\",\n\t\t\t\"// This exports getters to disallow modifications\",\n\t\t\t`${RuntimeGlobals.definePropertyGetters}(exports, {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`get: ${runtimeTemplate.returningFunction(\"get\")},`,\n\t\t\t\t`init: ${runtimeTemplate.returningFunction(\"init\")}`\n\t\t\t]),\n\t\t\t\"});\"\n\t\t]);\n\n\t\tsources.set(\n\t\t\t\"javascript\",\n\t\t\tthis.useSourceMap || this.useSimpleSourceMap\n\t\t\t\t? new OriginalSource(source, \"webpack/container-entry\")\n\t\t\t\t: new RawSource(source)\n\t\t);\n\n\t\treturn {\n\t\t\tsources,\n\t\t\truntimeRequirements\n\t\t};\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this._name);\n\t\twrite(this._exposes);\n\t\twrite(this._shareScope);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new ContainerEntryModule(read(), read(), read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(\n\tContainerEntryModule,\n\t\"webpack/lib/container/ContainerEntryModule\"\n);\n\nmodule.exports = ContainerEntryModule;\n"]},"metadata":{},"sourceType":"script"}