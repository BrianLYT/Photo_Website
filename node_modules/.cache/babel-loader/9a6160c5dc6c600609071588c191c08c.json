{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ChunkGroup = require(\"./ChunkGroup\");\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {{ name?: string } & Omit<EntryDescription, \"import\">} EntryOptions */\n\n/**\n * Entrypoint serves as an encapsulation primitive for chunks that are\n * a part of a single ChunkGroup. They represent all bundles that need to be loaded for a\n * single instance of a page. Multi-page application architectures will typically yield multiple Entrypoint objects\n * inside of the compilation, whereas a Single Page App may only contain one with many lazy-loaded chunks.\n */\n\n\nclass Entrypoint extends ChunkGroup {\n  /**\n   * Creates an instance of Entrypoint.\n   * @param {EntryOptions | string} entryOptions the options for the entrypoint (or name)\n   * @param {boolean=} initial false, when the entrypoint is not initial loaded\n   */\n  constructor(entryOptions) {\n    let initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (typeof entryOptions === \"string\") {\n      entryOptions = {\n        name: entryOptions\n      };\n    }\n\n    super({\n      name: entryOptions.name\n    });\n    this.options = entryOptions;\n    /** @type {Chunk=} */\n\n    this._runtimeChunk = undefined;\n    /** @type {Chunk=} */\n\n    this._entrypointChunk = undefined;\n    /** @type {boolean} */\n\n    this._initial = initial;\n  }\n  /**\n   * @returns {boolean} true, when this chunk group will be loaded on initial page load\n   */\n\n\n  isInitial() {\n    return this._initial;\n  }\n  /**\n   * Sets the runtimeChunk for an entrypoint.\n   * @param {Chunk} chunk the chunk being set as the runtime chunk.\n   * @returns {void}\n   */\n\n\n  setRuntimeChunk(chunk) {\n    this._runtimeChunk = chunk;\n  }\n  /**\n   * Fetches the chunk reference containing the webpack bootstrap code\n   * @returns {Chunk | null} returns the runtime chunk or null if there is none\n   */\n\n\n  getRuntimeChunk() {\n    if (this._runtimeChunk) return this._runtimeChunk;\n\n    for (const parent of this.parentsIterable) {\n      if (parent instanceof Entrypoint) return parent.getRuntimeChunk();\n    }\n\n    return null;\n  }\n  /**\n   * Sets the chunk with the entrypoint modules for an entrypoint.\n   * @param {Chunk} chunk the chunk being set as the entrypoint chunk.\n   * @returns {void}\n   */\n\n\n  setEntrypointChunk(chunk) {\n    this._entrypointChunk = chunk;\n  }\n  /**\n   * Returns the chunk which contains the entrypoint modules\n   * (or at least the execution of them)\n   * @returns {Chunk} chunk\n   */\n\n\n  getEntrypointChunk() {\n    return this._entrypointChunk;\n  }\n  /**\n   * @param {Chunk} oldChunk chunk to be replaced\n   * @param {Chunk} newChunk New chunk that will be replaced with\n   * @returns {boolean} returns true if the replacement was successful\n   */\n\n\n  replaceChunk(oldChunk, newChunk) {\n    if (this._runtimeChunk === oldChunk) this._runtimeChunk = newChunk;\n    if (this._entrypointChunk === oldChunk) this._entrypointChunk = newChunk;\n    return super.replaceChunk(oldChunk, newChunk);\n  }\n\n}\n\nmodule.exports = Entrypoint;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/Entrypoint.js"],"names":["ChunkGroup","require","Entrypoint","constructor","entryOptions","initial","name","options","_runtimeChunk","undefined","_entrypointChunk","_initial","isInitial","setRuntimeChunk","chunk","getRuntimeChunk","parent","parentsIterable","setEntrypointChunk","getEntrypointChunk","replaceChunk","oldChunk","newChunk","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;AAEA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAN,SAAyBF,UAAzB,CAAoC;AACnC;AACD;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,YAAD,EAA+B;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AACzC,QAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACrCA,MAAAA,YAAY,GAAG;AAAEE,QAAAA,IAAI,EAAEF;AAAR,OAAf;AACA;;AACD,UAAM;AACLE,MAAAA,IAAI,EAAEF,YAAY,CAACE;AADd,KAAN;AAGA,SAAKC,OAAL,GAAeH,YAAf;AACA;;AACA,SAAKI,aAAL,GAAqBC,SAArB;AACA;;AACA,SAAKC,gBAAL,GAAwBD,SAAxB;AACA;;AACA,SAAKE,QAAL,GAAgBN,OAAhB;AACA;AAED;AACD;AACA;;;AACCO,EAAAA,SAAS,GAAG;AACX,WAAO,KAAKD,QAAZ;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACtB,SAAKN,aAAL,GAAqBM,KAArB;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKP,aAAT,EAAwB,OAAO,KAAKA,aAAZ;;AACxB,SAAK,MAAMQ,MAAX,IAAqB,KAAKC,eAA1B,EAA2C;AAC1C,UAAID,MAAM,YAAYd,UAAtB,EAAkC,OAAOc,MAAM,CAACD,eAAP,EAAP;AAClC;;AACD,WAAO,IAAP;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCG,EAAAA,kBAAkB,CAACJ,KAAD,EAAQ;AACzB,SAAKJ,gBAAL,GAAwBI,KAAxB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCK,EAAAA,kBAAkB,GAAG;AACpB,WAAO,KAAKT,gBAAZ;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCU,EAAAA,YAAY,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAChC,QAAI,KAAKd,aAAL,KAAuBa,QAA3B,EAAqC,KAAKb,aAAL,GAAqBc,QAArB;AACrC,QAAI,KAAKZ,gBAAL,KAA0BW,QAA9B,EAAwC,KAAKX,gBAAL,GAAwBY,QAAxB;AACxC,WAAO,MAAMF,YAAN,CAAmBC,QAAnB,EAA6BC,QAA7B,CAAP;AACA;;AA7EkC;;AAgFpCC,MAAM,CAACC,OAAP,GAAiBtB,UAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ChunkGroup = require(\"./ChunkGroup\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {{ name?: string } & Omit<EntryDescription, \"import\">} EntryOptions */\n\n/**\n * Entrypoint serves as an encapsulation primitive for chunks that are\n * a part of a single ChunkGroup. They represent all bundles that need to be loaded for a\n * single instance of a page. Multi-page application architectures will typically yield multiple Entrypoint objects\n * inside of the compilation, whereas a Single Page App may only contain one with many lazy-loaded chunks.\n */\nclass Entrypoint extends ChunkGroup {\n\t/**\n\t * Creates an instance of Entrypoint.\n\t * @param {EntryOptions | string} entryOptions the options for the entrypoint (or name)\n\t * @param {boolean=} initial false, when the entrypoint is not initial loaded\n\t */\n\tconstructor(entryOptions, initial = true) {\n\t\tif (typeof entryOptions === \"string\") {\n\t\t\tentryOptions = { name: entryOptions };\n\t\t}\n\t\tsuper({\n\t\t\tname: entryOptions.name\n\t\t});\n\t\tthis.options = entryOptions;\n\t\t/** @type {Chunk=} */\n\t\tthis._runtimeChunk = undefined;\n\t\t/** @type {Chunk=} */\n\t\tthis._entrypointChunk = undefined;\n\t\t/** @type {boolean} */\n\t\tthis._initial = initial;\n\t}\n\n\t/**\n\t * @returns {boolean} true, when this chunk group will be loaded on initial page load\n\t */\n\tisInitial() {\n\t\treturn this._initial;\n\t}\n\n\t/**\n\t * Sets the runtimeChunk for an entrypoint.\n\t * @param {Chunk} chunk the chunk being set as the runtime chunk.\n\t * @returns {void}\n\t */\n\tsetRuntimeChunk(chunk) {\n\t\tthis._runtimeChunk = chunk;\n\t}\n\n\t/**\n\t * Fetches the chunk reference containing the webpack bootstrap code\n\t * @returns {Chunk | null} returns the runtime chunk or null if there is none\n\t */\n\tgetRuntimeChunk() {\n\t\tif (this._runtimeChunk) return this._runtimeChunk;\n\t\tfor (const parent of this.parentsIterable) {\n\t\t\tif (parent instanceof Entrypoint) return parent.getRuntimeChunk();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the chunk with the entrypoint modules for an entrypoint.\n\t * @param {Chunk} chunk the chunk being set as the entrypoint chunk.\n\t * @returns {void}\n\t */\n\tsetEntrypointChunk(chunk) {\n\t\tthis._entrypointChunk = chunk;\n\t}\n\n\t/**\n\t * Returns the chunk which contains the entrypoint modules\n\t * (or at least the execution of them)\n\t * @returns {Chunk} chunk\n\t */\n\tgetEntrypointChunk() {\n\t\treturn this._entrypointChunk;\n\t}\n\n\t/**\n\t * @param {Chunk} oldChunk chunk to be replaced\n\t * @param {Chunk} newChunk New chunk that will be replaced with\n\t * @returns {boolean} returns true if the replacement was successful\n\t */\n\treplaceChunk(oldChunk, newChunk) {\n\t\tif (this._runtimeChunk === oldChunk) this._runtimeChunk = newChunk;\n\t\tif (this._entrypointChunk === oldChunk) this._entrypointChunk = newChunk;\n\t\treturn super.replaceChunk(oldChunk, newChunk);\n\t}\n}\n\nmodule.exports = Entrypoint;\n"]},"metadata":{},"sourceType":"script"}