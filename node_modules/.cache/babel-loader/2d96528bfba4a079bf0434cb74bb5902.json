{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\n\n\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\n\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\n\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n\n  if (nan === true) {\n    node.nan = true;\n  }\n\n  if (inf === true) {\n    node.inf = true;\n  }\n\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max, shared) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n\n  if (shared !== null && shared !== undefined) {\n    if (!(typeof shared === \"boolean\")) {\n      throw new Error('typeof shared === \"boolean\"' + \" error: \" + (\"Argument shared must be of type boolean, given: \" + _typeof(shared) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n\n  if (shared === true) {\n    node.shared = true;\n  }\n\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/@webassemblyjs/ast/esm/nodes.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isTypeOf","t","n","type","assertTypeOf","Error","undefined","module","id","fields","metadata","length","node","moduleMetadata","sections","functionNames","localNames","producers","moduleNameMetadata","value","functionNameMetadata","index","localNameMetadata","localIndex","functionIndex","binaryModule","blob","quoteModule","string","sectionMetadata","section","startOffset","size","vectorOfSize","producersSectionMetadata","producerMetadata","language","processedBy","sdk","producerMetadataVersionedName","name","version","loopInstruction","label","resulttype","instr","object","args","namedArgs","Object","keys","ifInstruction","testLabel","test","result","consequent","alternate","stringLiteral","numberLiteral","raw","longNumberLiteral","floatLiteral","nan","inf","elem","table","offset","funcs","indexInFuncSection","valtypeLiteral","typeInstruction","functype","start","globalType","valtype","mutability","leadingComment","blockComment","data","memoryIndex","init","global","elementType","limits","elements","memory","funcImportDescr","signature","moduleImport","descr","moduleExportDescr","exportType","moduleExport","limit","min","max","shared","params","results","program","body","identifier","blockInstruction","callInstruction","instrArgs","numeric","callIndirectInstruction","intrs","byteArray","values","func","isExternal","internalBrUnless","target","internalGoto","internalCallExtern","internalEndAndReturn","isModule","isModuleMetadata","isModuleNameMetadata","isFunctionNameMetadata","isLocalNameMetadata","isBinaryModule","isQuoteModule","isSectionMetadata","isProducersSectionMetadata","isProducerMetadata","isProducerMetadataVersionedName","isLoopInstruction","isInstr","isIfInstruction","isStringLiteral","isNumberLiteral","isLongNumberLiteral","isFloatLiteral","isElem","isIndexInFuncSection","isValtypeLiteral","isTypeInstruction","isStart","isGlobalType","isLeadingComment","isBlockComment","isData","isGlobal","isTable","isMemory","isFuncImportDescr","isModuleImport","isModuleExportDescr","isModuleExport","isLimit","isSignature","isProgram","isIdentifier","isBlockInstruction","isCallInstruction","isCallIndirectInstruction","isByteArray","isFunc","isInternalBrUnless","isInternalGoto","isInternalCallExtern","isInternalEndAndReturn","isNode","isBlock","isInstruction","isExpression","isNumericLiteral","isImportDescr","isIntrinsic","assertModule","assertModuleMetadata","assertModuleNameMetadata","assertFunctionNameMetadata","assertLocalNameMetadata","assertBinaryModule","assertQuoteModule","assertSectionMetadata","assertProducersSectionMetadata","assertProducerMetadata","assertProducerMetadataVersionedName","assertLoopInstruction","assertInstr","assertIfInstruction","assertStringLiteral","assertNumberLiteral","assertLongNumberLiteral","assertFloatLiteral","assertElem","assertIndexInFuncSection","assertValtypeLiteral","assertTypeInstruction","assertStart","assertGlobalType","assertLeadingComment","assertBlockComment","assertData","assertGlobal","assertTable","assertMemory","assertFuncImportDescr","assertModuleImport","assertModuleExportDescr","assertModuleExport","assertLimit","assertSignature","assertProgram","assertIdentifier","assertBlockInstruction","assertCallInstruction","assertCallIndirectInstruction","assertByteArray","assertFunc","assertInternalBrUnless","assertInternalGoto","assertInternalCallExtern","assertInternalEndAndReturn","unionTypesMap","Module","ModuleMetadata","ModuleNameMetadata","FunctionNameMetadata","LocalNameMetadata","BinaryModule","QuoteModule","SectionMetadata","ProducersSectionMetadata","ProducerMetadata","ProducerMetadataVersionedName","LoopInstruction","Instr","IfInstruction","StringLiteral","NumberLiteral","LongNumberLiteral","FloatLiteral","Elem","IndexInFuncSection","ValtypeLiteral","TypeInstruction","Start","GlobalType","LeadingComment","BlockComment","Data","Global","Table","Memory","FuncImportDescr","ModuleImport","ModuleExportDescr","ModuleExport","Limit","Signature","Program","Identifier","BlockInstruction","CallInstruction","CallIndirectInstruction","ByteArray","Func","InternalBrUnless","InternalGoto","InternalCallExtern","InternalEndAndReturn","nodeAndUnionTypes"],"mappings":"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","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\n\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\n\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n\n  if (nan === true) {\n    node.nan = true;\n  }\n\n  if (inf === true) {\n    node.inf = true;\n  }\n\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max, shared) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n\n  if (shared !== null && shared !== undefined) {\n    if (!(typeof shared === \"boolean\")) {\n      throw new Error('typeof shared === \"boolean\"' + \" error: \" + (\"Argument shared must be of type boolean, given: \" + _typeof(shared) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n\n  if (shared === true) {\n    node.shared = true;\n  }\n\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];"]},"metadata":{},"sourceType":"module"}