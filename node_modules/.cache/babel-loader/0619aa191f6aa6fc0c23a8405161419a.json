{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = messageParent;\n\nvar _types = require('../types');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst isWorkerThread = (() => {\n  try {\n    // `Require` here to support Node v10\n    const {\n      isMainThread,\n      parentPort\n    } = require('worker_threads');\n\n    return !isMainThread && parentPort != null;\n  } catch {\n    return false;\n  }\n})();\n\nfunction messageParent(message) {\n  let parentProcess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n\n  if (isWorkerThread) {\n    // `Require` here to support Node v10\n    const {\n      parentPort\n    } = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\n\n\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else if (typeof parentProcess.send === 'function') {\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n}","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/jest-worker/build/workers/messageParent.js"],"names":["Object","defineProperty","exports","value","default","messageParent","_types","require","isWorkerThread","isMainThread","parentPort","message","parentProcess","process","postMessage","PARENT_MESSAGE_CUSTOM","send","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,CAAC,MAAM;AAC5B,MAAI;AACF;AACA,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAA6BH,OAAO,CAAC,gBAAD,CAA1C;;AAEA,WAAO,CAACE,YAAD,IAAiBC,UAAU,IAAI,IAAtC;AACD,GALD,CAKE,MAAM;AACN,WAAO,KAAP;AACD;AACF,CATsB,GAAvB;;AAWA,SAASL,aAAT,CAAuBM,OAAvB,EAAyD;AAAA,MAAzBC,aAAyB,uEAATC,OAAS;;AACvD,MAAIL,cAAJ,EAAoB;AAClB;AACA,UAAM;AAACE,MAAAA;AAAD,QAAeH,OAAO,CAAC,gBAAD,CAA5B,CAFkB,CAE8B;;;AAEhDG,IAAAA,UAAU,CAACI,WAAX,CAAuB,CAACR,MAAM,CAACS,qBAAR,EAA+BJ,OAA/B,CAAvB;AACD,GALD,MAKO,IAAI,OAAOC,aAAa,CAACI,IAArB,KAA8B,UAAlC,EAA8C;AACnDJ,IAAAA,aAAa,CAACI,IAAd,CAAmB,CAACV,MAAM,CAACS,qBAAR,EAA+BJ,OAA/B,CAAnB;AACD,GAFM,MAEA;AACL,UAAM,IAAIM,KAAJ,CAAU,kDAAV,CAAN;AACD;AACF","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = messageParent;\n\nvar _types = require('../types');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst isWorkerThread = (() => {\n  try {\n    // `Require` here to support Node v10\n    const {isMainThread, parentPort} = require('worker_threads');\n\n    return !isMainThread && parentPort != null;\n  } catch {\n    return false;\n  }\n})();\n\nfunction messageParent(message, parentProcess = process) {\n  if (isWorkerThread) {\n    // `Require` here to support Node v10\n    const {parentPort} = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\n\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else if (typeof parentProcess.send === 'function') {\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}