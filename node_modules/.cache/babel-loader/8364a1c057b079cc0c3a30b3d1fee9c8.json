{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeNode = encodeNode;\nexports.encodeU32 = void 0;\n\nvar encoder = _interopRequireWildcard(require(\"./encoder\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction encodeNode(n) {\n  switch (n.type) {\n    case \"ModuleImport\":\n      // $FlowIgnore: ModuleImport ensure that the node is well formated\n      return encoder.encodeModuleImport(n);\n\n    case \"SectionMetadata\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeSectionMetadata(n);\n\n    case \"CallInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallInstruction(n);\n\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallIndirectInstruction(n);\n\n    case \"TypeInstruction\":\n      return encoder.encodeTypeInstruction(n);\n\n    case \"Instr\":\n      // $FlowIgnore\n      return encoder.encodeInstr(n);\n\n    case \"ModuleExport\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeModuleExport(n);\n\n    case \"Global\":\n      // $FlowIgnore\n      return encoder.encodeGlobal(n);\n\n    case \"Func\":\n      return encoder.encodeFuncBody(n);\n\n    case \"IndexInFuncSection\":\n      return encoder.encodeIndexInFuncSection(n);\n\n    case \"StringLiteral\":\n      return encoder.encodeStringLiteral(n);\n\n    case \"Elem\":\n      return encoder.encodeElem(n);\n\n    default:\n      throw new Error(\"Unsupported encoding for node of type: \" + JSON.stringify(n.type));\n  }\n}\n\nvar encodeU32 = encoder.encodeU32;\nexports.encodeU32 = encodeU32;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/@webassemblyjs/wasm-gen/lib/index.js"],"names":["Object","defineProperty","exports","value","encodeNode","encodeU32","encoder","_interopRequireWildcard","require","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","default","n","type","encodeModuleImport","encodeSectionMetadata","encodeCallInstruction","encodeCallIndirectInstruction","encodeTypeInstruction","encodeInstr","encodeModuleExport","encodeGlobal","encodeFuncBody","encodeIndexInFuncSection","encodeStringLiteral","encodeElem","Error","JSON","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeNode = encodeNode;\nexports.encodeU32 = void 0;\n\nvar encoder = _interopRequireWildcard(require(\"./encoder\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction encodeNode(n) {\n  switch (n.type) {\n    case \"ModuleImport\":\n      // $FlowIgnore: ModuleImport ensure that the node is well formated\n      return encoder.encodeModuleImport(n);\n\n    case \"SectionMetadata\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeSectionMetadata(n);\n\n    case \"CallInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallInstruction(n);\n\n    case \"CallIndirectInstruction\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeCallIndirectInstruction(n);\n\n    case \"TypeInstruction\":\n      return encoder.encodeTypeInstruction(n);\n\n    case \"Instr\":\n      // $FlowIgnore\n      return encoder.encodeInstr(n);\n\n    case \"ModuleExport\":\n      // $FlowIgnore: SectionMetadata ensure that the node is well formated\n      return encoder.encodeModuleExport(n);\n\n    case \"Global\":\n      // $FlowIgnore\n      return encoder.encodeGlobal(n);\n\n    case \"Func\":\n      return encoder.encodeFuncBody(n);\n\n    case \"IndexInFuncSection\":\n      return encoder.encodeIndexInFuncSection(n);\n\n    case \"StringLiteral\":\n      return encoder.encodeStringLiteral(n);\n\n    case \"Elem\":\n      return encoder.encodeElem(n);\n\n    default:\n      throw new Error(\"Unsupported encoding for node of type: \" + JSON.stringify(n.type));\n  }\n}\n\nvar encodeU32 = encoder.encodeU32;\nexports.encodeU32 = encodeU32;"]},"metadata":{},"sourceType":"script"}