{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DelegatedModule = require(\"./DelegatedModule\"); // options.source\n// options.type\n// options.context\n// options.scope\n// options.content\n// options.associatedObjectForCache\n\n\nclass DelegatedModuleFactoryPlugin {\n  constructor(options) {\n    this.options = options;\n    options.type = options.type || \"require\";\n    options.extensions = options.extensions || [\"\", \".js\", \".json\", \".wasm\"];\n  }\n\n  apply(normalModuleFactory) {\n    const scope = this.options.scope;\n\n    if (scope) {\n      normalModuleFactory.hooks.factorize.tapAsync(\"DelegatedModuleFactoryPlugin\", (data, callback) => {\n        const [dependency] = data.dependencies;\n        const {\n          request\n        } = dependency;\n\n        if (request && request.startsWith(`${scope}/`)) {\n          const innerRequest = \".\" + request.substr(scope.length);\n          let resolved;\n\n          if (innerRequest in this.options.content) {\n            resolved = this.options.content[innerRequest];\n            return callback(null, new DelegatedModule(this.options.source, resolved, this.options.type, innerRequest, request));\n          }\n\n          for (let i = 0; i < this.options.extensions.length; i++) {\n            const extension = this.options.extensions[i];\n            const requestPlusExt = innerRequest + extension;\n\n            if (requestPlusExt in this.options.content) {\n              resolved = this.options.content[requestPlusExt];\n              return callback(null, new DelegatedModule(this.options.source, resolved, this.options.type, requestPlusExt, request + extension));\n            }\n          }\n        }\n\n        return callback();\n      });\n    } else {\n      normalModuleFactory.hooks.module.tap(\"DelegatedModuleFactoryPlugin\", module => {\n        const request = module.libIdent(this.options);\n\n        if (request) {\n          if (request in this.options.content) {\n            const resolved = this.options.content[request];\n            return new DelegatedModule(this.options.source, resolved, this.options.type, request, module);\n          }\n        }\n\n        return module;\n      });\n    }\n  }\n\n}\n\nmodule.exports = DelegatedModuleFactoryPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/DelegatedModuleFactoryPlugin.js"],"names":["DelegatedModule","require","DelegatedModuleFactoryPlugin","constructor","options","type","extensions","apply","normalModuleFactory","scope","hooks","factorize","tapAsync","data","callback","dependency","dependencies","request","startsWith","innerRequest","substr","length","resolved","content","source","i","extension","requestPlusExt","module","tap","libIdent","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DelegatedModule = require(\"./DelegatedModule\");\n\n// options.source\n// options.type\n// options.context\n// options.scope\n// options.content\n// options.associatedObjectForCache\nclass DelegatedModuleFactoryPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t\toptions.type = options.type || \"require\";\n\t\toptions.extensions = options.extensions || [\"\", \".js\", \".json\", \".wasm\"];\n\t}\n\n\tapply(normalModuleFactory) {\n\t\tconst scope = this.options.scope;\n\t\tif (scope) {\n\t\t\tnormalModuleFactory.hooks.factorize.tapAsync(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\t(data, callback) => {\n\t\t\t\t\tconst [dependency] = data.dependencies;\n\t\t\t\t\tconst { request } = dependency;\n\t\t\t\t\tif (request && request.startsWith(`${scope}/`)) {\n\t\t\t\t\t\tconst innerRequest = \".\" + request.substr(scope.length);\n\t\t\t\t\t\tlet resolved;\n\t\t\t\t\t\tif (innerRequest in this.options.content) {\n\t\t\t\t\t\t\tresolved = this.options.content[innerRequest];\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\tinnerRequest,\n\t\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < this.options.extensions.length; i++) {\n\t\t\t\t\t\t\tconst extension = this.options.extensions[i];\n\t\t\t\t\t\t\tconst requestPlusExt = innerRequest + extension;\n\t\t\t\t\t\t\tif (requestPlusExt in this.options.content) {\n\t\t\t\t\t\t\t\tresolved = this.options.content[requestPlusExt];\n\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tnew DelegatedModule(\n\t\t\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\t\t\trequestPlusExt,\n\t\t\t\t\t\t\t\t\t\trequest + extension\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\"DelegatedModuleFactoryPlugin\",\n\t\t\t\tmodule => {\n\t\t\t\t\tconst request = module.libIdent(this.options);\n\t\t\t\t\tif (request) {\n\t\t\t\t\t\tif (request in this.options.content) {\n\t\t\t\t\t\t\tconst resolved = this.options.content[request];\n\t\t\t\t\t\t\treturn new DelegatedModule(\n\t\t\t\t\t\t\t\tthis.options.source,\n\t\t\t\t\t\t\t\tresolved,\n\t\t\t\t\t\t\t\tthis.options.type,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn module;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = DelegatedModuleFactoryPlugin;\n"]},"metadata":{},"sourceType":"script"}