{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Module = require(\"../Module\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst Template = require(\"../Template\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst FallbackItemDependency = require(\"./FallbackItemDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"javascript\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\n\nclass FallbackModule extends Module {\n  /**\n   * @param {string[]} requests list of requests to choose one\n   */\n  constructor(requests) {\n    super(\"fallback-module\");\n    this.requests = requests;\n    this._identifier = `fallback ${this.requests.join(\" \")}`;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return this._identifier;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return this._identifier;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/fallback/${this.requests[0]}/and ${this.requests.length - 1} more`;\n  }\n  /**\n   * @param {Chunk} chunk the chunk which condition should be checked\n   * @param {Compilation} compilation the compilation\n   * @returns {boolean} true, if the chunk is ok for the module\n   */\n\n\n  chunkCondition(chunk, _ref) {\n    let {\n      chunkGraph\n    } = _ref;\n    return chunkGraph.getNumberOfEntryModules(chunk) > 0;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    callback(null, !this.buildInfo);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      strict: true\n    };\n    this.clearDependenciesAndBlocks();\n\n    for (const request of this.requests) this.addDependency(new FallbackItemDependency(request));\n\n    callback();\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return this.requests.length * 5 + 42;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref2) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph\n    } = _ref2;\n    const ids = this.dependencies.map(dep => chunkGraph.getModuleId(moduleGraph.getModule(dep)));\n    const code = Template.asString([`var ids = ${JSON.stringify(ids)};`, \"var error, result, i = 0;\", `var loop = ${runtimeTemplate.basicFunction(\"next\", [\"while(i < ids.length) {\", Template.indent([\"try { next = __webpack_require__(ids[i++]); } catch(e) { return handleError(e); }\", \"if(next) return next.then ? next.then(handleResult, handleError) : handleResult(next);\"]), \"}\", \"if(error) throw error;\"])}`, `var handleResult = ${runtimeTemplate.basicFunction(\"result\", [\"if(result) return result;\", \"return loop();\"])};`, `var handleError = ${runtimeTemplate.basicFunction(\"e\", [\"error = e;\", \"return loop();\"])};`, \"module.exports = loop();\"]);\n    const sources = new Map();\n    sources.set(\"javascript\", new RawSource(code));\n    return {\n      sources,\n      runtimeRequirements: RUNTIME_REQUIREMENTS\n    };\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.requests);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new FallbackModule(read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(FallbackModule, \"webpack/lib/container/FallbackModule\");\nmodule.exports = FallbackModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/container/FallbackModule.js"],"names":["RawSource","require","Module","RuntimeGlobals","Template","makeSerializable","FallbackItemDependency","TYPES","Set","RUNTIME_REQUIREMENTS","module","FallbackModule","constructor","requests","_identifier","join","identifier","readableIdentifier","requestShortener","libIdent","options","layer","length","chunkCondition","chunk","chunkGraph","getNumberOfEntryModules","needBuild","context","callback","buildInfo","build","compilation","resolver","fs","buildMeta","strict","clearDependenciesAndBlocks","request","addDependency","size","type","getSourceTypes","codeGeneration","runtimeTemplate","moduleGraph","ids","dependencies","map","dep","getModuleId","getModule","code","asString","JSON","stringify","basicFunction","indent","sources","Map","set","runtimeRequirements","serialize","write","deserialize","read","obj","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,iBAAD,CAA7B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMI,gBAAgB,GAAGJ,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMK,sBAAsB,GAAGL,OAAO,CAAC,0BAAD,CAAtC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMM,KAAK,GAAG,IAAIC,GAAJ,CAAQ,CAAC,YAAD,CAAR,CAAd;AACA,MAAMC,oBAAoB,GAAG,IAAID,GAAJ,CAAQ,CAACL,cAAc,CAACO,MAAhB,CAAR,CAA7B;;AAEA,MAAMC,cAAN,SAA6BT,MAA7B,CAAoC;AACnC;AACD;AACA;AACCU,EAAAA,WAAW,CAACC,QAAD,EAAW;AACrB,UAAM,iBAAN;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,WAAL,GAAoB,YAAW,KAAKD,QAAL,CAAcE,IAAd,CAAmB,GAAnB,CAAwB,EAAvD;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,UAAU,GAAG;AACZ,WAAO,KAAKF,WAAZ;AACA;AAED;AACD;AACA;AACA;;;AACCG,EAAAA,kBAAkB,CAACC,gBAAD,EAAmB;AACpC,WAAO,KAAKJ,WAAZ;AACA;AAED;AACD;AACA;AACA;;;AACCK,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACjB,WAAQ,GAAE,KAAKC,KAAL,GAAc,IAAG,KAAKA,KAAM,IAA5B,GAAkC,EAAG,8BAC9C,KAAKR,QAAL,CAAc,CAAd,CACA,QAAO,KAAKA,QAAL,CAAcS,MAAd,GAAuB,CAAE,OAFjC;AAGA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,cAAc,CAACC,KAAD,QAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AACrC,WAAOA,UAAU,CAACC,uBAAX,CAAmCF,KAAnC,IAA4C,CAAnD;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCG,EAAAA,SAAS,CAACC,OAAD,EAAUC,QAAV,EAAoB;AAC5BA,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAC,KAAKC,SAAb,CAAR;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACX,OAAD,EAAUY,WAAV,EAAuBC,QAAvB,EAAiCC,EAAjC,EAAqCL,QAArC,EAA+C;AACnD,SAAKM,SAAL,GAAiB,EAAjB;AACA,SAAKL,SAAL,GAAiB;AAChBM,MAAAA,MAAM,EAAE;AADQ,KAAjB;AAIA,SAAKC,0BAAL;;AACA,SAAK,MAAMC,OAAX,IAAsB,KAAKzB,QAA3B,EACC,KAAK0B,aAAL,CAAmB,IAAIjC,sBAAJ,CAA2BgC,OAA3B,CAAnB;;AAEDT,IAAAA,QAAQ;AACR;AAED;AACD;AACA;AACA;;;AACCW,EAAAA,IAAI,CAACC,IAAD,EAAO;AACV,WAAO,KAAK5B,QAAL,CAAcS,MAAd,GAAuB,CAAvB,GAA2B,EAAlC;AACA;AAED;AACD;AACA;;;AACCoB,EAAAA,cAAc,GAAG;AAChB,WAAOnC,KAAP;AACA;AAED;AACD;AACA;AACA;;;AACCoC,EAAAA,cAAc,QAA+C;AAAA,QAA9C;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,WAAnB;AAAgCpB,MAAAA;AAAhC,KAA8C;AAC5D,UAAMqB,GAAG,GAAG,KAAKC,YAAL,CAAkBC,GAAlB,CAAsBC,GAAG,IACpCxB,UAAU,CAACyB,WAAX,CAAuBL,WAAW,CAACM,SAAZ,CAAsBF,GAAtB,CAAvB,CADW,CAAZ;AAGA,UAAMG,IAAI,GAAGhD,QAAQ,CAACiD,QAAT,CAAkB,CAC7B,aAAYC,IAAI,CAACC,SAAL,CAAeT,GAAf,CAAoB,GADH,EAE9B,2BAF8B,EAG7B,cAAaF,eAAe,CAACY,aAAhB,CAA8B,MAA9B,EAAsC,CACnD,yBADmD,EAEnDpD,QAAQ,CAACqD,MAAT,CAAgB,CACf,mFADe,EAEf,wFAFe,CAAhB,CAFmD,EAMnD,GANmD,EAOnD,wBAPmD,CAAtC,CAQX,EAX2B,EAY7B,sBAAqBb,eAAe,CAACY,aAAhB,CAA8B,QAA9B,EAAwC,CAC7D,2BAD6D,EAE7D,gBAF6D,CAAxC,CAGnB,GAf2B,EAgB7B,qBAAoBZ,eAAe,CAACY,aAAhB,CAA8B,GAA9B,EAAmC,CACvD,YADuD,EAEvD,gBAFuD,CAAnC,CAGlB,GAnB2B,EAoB9B,0BApB8B,CAAlB,CAAb;AAsBA,UAAME,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0B,IAAI5D,SAAJ,CAAcoD,IAAd,CAA1B;AACA,WAAO;AAAEM,MAAAA,OAAF;AAAWG,MAAAA,mBAAmB,EAAEpD;AAAhC,KAAP;AACA;;AAEDqD,EAAAA,SAAS,CAAClC,OAAD,EAAU;AAClB,UAAM;AAAEmC,MAAAA;AAAF,QAAYnC,OAAlB;AACAmC,IAAAA,KAAK,CAAC,KAAKlD,QAAN,CAAL;AACA,UAAMiD,SAAN,CAAgBlC,OAAhB;AACA;;AAEiB,SAAXoC,WAAW,CAACpC,OAAD,EAAU;AAC3B,UAAM;AAAEqC,MAAAA;AAAF,QAAWrC,OAAjB;AACA,UAAMsC,GAAG,GAAG,IAAIvD,cAAJ,CAAmBsD,IAAI,EAAvB,CAAZ;AACAC,IAAAA,GAAG,CAACF,WAAJ,CAAgBpC,OAAhB;AACA,WAAOsC,GAAP;AACA;;AAvIkC;;AA0IpC7D,gBAAgB,CAACM,cAAD,EAAiB,sCAAjB,CAAhB;AAEAD,MAAM,CAACyD,OAAP,GAAiBxD,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst Module = require(\"../Module\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst FallbackItemDependency = require(\"./FallbackItemDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"../Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"../Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"../Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"javascript\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\n\nclass FallbackModule extends Module {\n\t/**\n\t * @param {string[]} requests list of requests to choose one\n\t */\n\tconstructor(requests) {\n\t\tsuper(\"fallback-module\");\n\t\tthis.requests = requests;\n\t\tthis._identifier = `fallback ${this.requests.join(\" \")}`;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn `${this.layer ? `(${this.layer})/` : \"\"}webpack/container/fallback/${\n\t\t\tthis.requests[0]\n\t\t}/and ${this.requests.length - 1} more`;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk which condition should be checked\n\t * @param {Compilation} compilation the compilation\n\t * @returns {boolean} true, if the chunk is ok for the module\n\t */\n\tchunkCondition(chunk, { chunkGraph }) {\n\t\treturn chunkGraph.getNumberOfEntryModules(chunk) > 0;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tcallback(null, !this.buildInfo);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true\n\t\t};\n\n\t\tthis.clearDependenciesAndBlocks();\n\t\tfor (const request of this.requests)\n\t\t\tthis.addDependency(new FallbackItemDependency(request));\n\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn this.requests.length * 5 + 42;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({ runtimeTemplate, moduleGraph, chunkGraph }) {\n\t\tconst ids = this.dependencies.map(dep =>\n\t\t\tchunkGraph.getModuleId(moduleGraph.getModule(dep))\n\t\t);\n\t\tconst code = Template.asString([\n\t\t\t`var ids = ${JSON.stringify(ids)};`,\n\t\t\t\"var error, result, i = 0;\",\n\t\t\t`var loop = ${runtimeTemplate.basicFunction(\"next\", [\n\t\t\t\t\"while(i < ids.length) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"try { next = __webpack_require__(ids[i++]); } catch(e) { return handleError(e); }\",\n\t\t\t\t\t\"if(next) return next.then ? next.then(handleResult, handleError) : handleResult(next);\"\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\t\"if(error) throw error;\"\n\t\t\t])}`,\n\t\t\t`var handleResult = ${runtimeTemplate.basicFunction(\"result\", [\n\t\t\t\t\"if(result) return result;\",\n\t\t\t\t\"return loop();\"\n\t\t\t])};`,\n\t\t\t`var handleError = ${runtimeTemplate.basicFunction(\"e\", [\n\t\t\t\t\"error = e;\",\n\t\t\t\t\"return loop();\"\n\t\t\t])};`,\n\t\t\t\"module.exports = loop();\"\n\t\t]);\n\t\tconst sources = new Map();\n\t\tsources.set(\"javascript\", new RawSource(code));\n\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS };\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.requests);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new FallbackModule(read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(FallbackModule, \"webpack/lib/container/FallbackModule\");\n\nmodule.exports = FallbackModule;\n"]},"metadata":{},"sourceType":"script"}