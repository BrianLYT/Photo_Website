{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\nconst DependencyTemplate = require(\"../DependencyTemplate\");\n\nconst InitFragment = require(\"../InitFragment\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n\nclass CachedConstDependency extends NullDependency {\n  constructor(expression, range, identifier) {\n    super();\n    this.expression = expression;\n    this.range = range;\n    this.identifier = identifier;\n    this._hashUpdate = undefined;\n  }\n  /**\n   * Update the hash\n   * @param {Hash} hash hash to be updated\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    if (this._hashUpdate === undefined) this._hashUpdate = \"\" + this.identifier + this.range + this.expression;\n    hash.update(this._hashUpdate);\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.expression);\n    write(this.range);\n    write(this.identifier);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.expression = read();\n    this.range = read();\n    this.identifier = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(CachedConstDependency, \"webpack/lib/dependencies/CachedConstDependency\");\nCachedConstDependency.Template = class CachedConstDependencyTemplate extends DependencyTemplate {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      dependencyTemplates,\n      initFragments\n    } = _ref;\n    const dep =\n    /** @type {CachedConstDependency} */\n    dependency;\n    initFragments.push(new InitFragment(`var ${dep.identifier} = ${dep.expression};\\n`, InitFragment.STAGE_CONSTANTS, 0, `const ${dep.identifier}`));\n\n    if (typeof dep.range === \"number\") {\n      source.insert(dep.range, dep.identifier);\n      return;\n    }\n\n    source.replace(dep.range[0], dep.range[1] - 1, dep.identifier);\n  }\n\n};\nmodule.exports = CachedConstDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/CachedConstDependency.js"],"names":["DependencyTemplate","require","InitFragment","makeSerializable","NullDependency","CachedConstDependency","constructor","expression","range","identifier","_hashUpdate","undefined","updateHash","hash","context","update","serialize","write","deserialize","read","Template","CachedConstDependencyTemplate","apply","dependency","source","runtimeTemplate","dependencyTemplates","initFragments","dep","push","STAGE_CONSTANTS","insert","replace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA9B;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMI,qBAAN,SAAoCD,cAApC,CAAmD;AAClDE,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,UAApB,EAAgC;AAC1C;AAEA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBC,SAAnB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,QAAI,KAAKJ,WAAL,KAAqBC,SAAzB,EACC,KAAKD,WAAL,GAAmB,KAAK,KAAKD,UAAV,GAAuB,KAAKD,KAA5B,GAAoC,KAAKD,UAA5D;AACDM,IAAAA,IAAI,CAACE,MAAL,CAAY,KAAKL,WAAjB;AACA;;AAEDM,EAAAA,SAAS,CAACF,OAAD,EAAU;AAClB,UAAM;AAAEG,MAAAA;AAAF,QAAYH,OAAlB;AAEAG,IAAAA,KAAK,CAAC,KAAKV,UAAN,CAAL;AACAU,IAAAA,KAAK,CAAC,KAAKT,KAAN,CAAL;AACAS,IAAAA,KAAK,CAAC,KAAKR,UAAN,CAAL;AAEA,UAAMO,SAAN,CAAgBF,OAAhB;AACA;;AAEDI,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB,UAAM;AAAEK,MAAAA;AAAF,QAAWL,OAAjB;AAEA,SAAKP,UAAL,GAAkBY,IAAI,EAAtB;AACA,SAAKX,KAAL,GAAaW,IAAI,EAAjB;AACA,SAAKV,UAAL,GAAkBU,IAAI,EAAtB;AAEA,UAAMD,WAAN,CAAkBJ,OAAlB;AACA;;AAxCiD;;AA2CnDX,gBAAgB,CACfE,qBADe,EAEf,gDAFe,CAAhB;AAKAA,qBAAqB,CAACe,QAAtB,GAAiC,MAAMC,6BAAN,SAChCrB,kBADgC,CAE/B;AACD;AACD;AACA;AACA;AACA;AACA;AACCsB,EAAAA,KAAK,CACJC,UADI,EAEJC,MAFI,QAIH;AAAA,QADD;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,mBAAnB;AAAwCC,MAAAA;AAAxC,KACC;AACD,UAAMC,GAAG;AAAG;AAAsCL,IAAAA,UAAlD;AAEAI,IAAAA,aAAa,CAACE,IAAd,CACC,IAAI3B,YAAJ,CACE,OAAM0B,GAAG,CAACnB,UAAW,MAAKmB,GAAG,CAACrB,UAAW,KAD3C,EAECL,YAAY,CAAC4B,eAFd,EAGC,CAHD,EAIE,SAAQF,GAAG,CAACnB,UAAW,EAJzB,CADD;;AASA,QAAI,OAAOmB,GAAG,CAACpB,KAAX,KAAqB,QAAzB,EAAmC;AAClCgB,MAAAA,MAAM,CAACO,MAAP,CAAcH,GAAG,CAACpB,KAAlB,EAAyBoB,GAAG,CAACnB,UAA7B;AAEA;AACA;;AAEDe,IAAAA,MAAM,CAACQ,OAAP,CAAeJ,GAAG,CAACpB,KAAJ,CAAU,CAAV,CAAf,EAA6BoB,GAAG,CAACpB,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CoB,GAAG,CAACnB,UAAnD;AACA;;AA9BA,CAFF;AAmCAwB,MAAM,CAACC,OAAP,GAAiB7B,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst DependencyTemplate = require(\"../DependencyTemplate\");\nconst InitFragment = require(\"../InitFragment\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nclass CachedConstDependency extends NullDependency {\n\tconstructor(expression, range, identifier) {\n\t\tsuper();\n\n\t\tthis.expression = expression;\n\t\tthis.range = range;\n\t\tthis.identifier = identifier;\n\t\tthis._hashUpdate = undefined;\n\t}\n\n\t/**\n\t * Update the hash\n\t * @param {Hash} hash hash to be updated\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tif (this._hashUpdate === undefined)\n\t\t\tthis._hashUpdate = \"\" + this.identifier + this.range + this.expression;\n\t\thash.update(this._hashUpdate);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.expression);\n\t\twrite(this.range);\n\t\twrite(this.identifier);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.expression = read();\n\t\tthis.range = read();\n\t\tthis.identifier = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tCachedConstDependency,\n\t\"webpack/lib/dependencies/CachedConstDependency\"\n);\n\nCachedConstDependency.Template = class CachedConstDependencyTemplate extends (\n\tDependencyTemplate\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtimeTemplate, dependencyTemplates, initFragments }\n\t) {\n\t\tconst dep = /** @type {CachedConstDependency} */ (dependency);\n\n\t\tinitFragments.push(\n\t\t\tnew InitFragment(\n\t\t\t\t`var ${dep.identifier} = ${dep.expression};\\n`,\n\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t0,\n\t\t\t\t`const ${dep.identifier}`\n\t\t\t)\n\t\t);\n\n\t\tif (typeof dep.range === \"number\") {\n\t\t\tsource.insert(dep.range, dep.identifier);\n\n\t\t\treturn;\n\t\t}\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, dep.identifier);\n\t}\n};\n\nmodule.exports = CachedConstDependency;\n"]},"metadata":{},"sourceType":"script"}