{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nclass ProvideSharedDependency extends Dependency {\n  constructor(shareScope, name, version, request, eager) {\n    super();\n    this.shareScope = shareScope;\n    this.name = name;\n    this.version = version;\n    this.request = request;\n    this.eager = eager;\n  }\n\n  get type() {\n    return \"provide shared module\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `provide module (${this.shareScope}) ${this.request} as ${this.name} @ ${this.version}${this.eager ? \" (eager)\" : \"\"}`;\n  }\n\n  serialize(context) {\n    context.write(this.shareScope);\n    context.write(this.name);\n    context.write(this.request);\n    context.write(this.version);\n    context.write(this.eager);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new ProvideSharedDependency(read(), read(), read(), read(), read());\n    this.shareScope = context.read();\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(ProvideSharedDependency, \"webpack/lib/sharing/ProvideSharedDependency\");\nmodule.exports = ProvideSharedDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/sharing/ProvideSharedDependency.js"],"names":["Dependency","require","makeSerializable","ProvideSharedDependency","constructor","shareScope","name","version","request","eager","type","getResourceIdentifier","serialize","context","write","deserialize","read","obj","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AAEA,MAAME,uBAAN,SAAsCH,UAAtC,CAAiD;AAChDI,EAAAA,WAAW,CAACC,UAAD,EAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4C;AACtD;AACA,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,uBAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,qBAAqB,GAAG;AACvB,WAAQ,mBAAkB,KAAKN,UAAW,KAAI,KAAKG,OAAQ,OAC1D,KAAKF,IACL,MAAK,KAAKC,OAAQ,GAAE,KAAKE,KAAL,GAAa,UAAb,GAA0B,EAAG,EAFlD;AAGA;;AAEDG,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClBA,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKT,UAAnB;AACAQ,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKR,IAAnB;AACAO,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKN,OAAnB;AACAK,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKP,OAAnB;AACAM,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKL,KAAnB;AACA,UAAMG,SAAN,CAAgBC,OAAhB;AACA;;AAEiB,SAAXE,WAAW,CAACF,OAAD,EAAU;AAC3B,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AACA,UAAMI,GAAG,GAAG,IAAId,uBAAJ,CACXa,IAAI,EADO,EAEXA,IAAI,EAFO,EAGXA,IAAI,EAHO,EAIXA,IAAI,EAJO,EAKXA,IAAI,EALO,CAAZ;AAOA,SAAKX,UAAL,GAAkBQ,OAAO,CAACG,IAAR,EAAlB;AACAC,IAAAA,GAAG,CAACF,WAAJ,CAAgBF,OAAhB;AACA,WAAOI,GAAP;AACA;;AA5C+C;;AA+CjDf,gBAAgB,CACfC,uBADe,EAEf,6CAFe,CAAhB;AAKAe,MAAM,CAACC,OAAP,GAAiBhB,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nclass ProvideSharedDependency extends Dependency {\n\tconstructor(shareScope, name, version, request, eager) {\n\t\tsuper();\n\t\tthis.shareScope = shareScope;\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.request = request;\n\t\tthis.eager = eager;\n\t}\n\n\tget type() {\n\t\treturn \"provide shared module\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `provide module (${this.shareScope}) ${this.request} as ${\n\t\t\tthis.name\n\t\t} @ ${this.version}${this.eager ? \" (eager)\" : \"\"}`;\n\t}\n\n\tserialize(context) {\n\t\tcontext.write(this.shareScope);\n\t\tcontext.write(this.name);\n\t\tcontext.write(this.request);\n\t\tcontext.write(this.version);\n\t\tcontext.write(this.eager);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new ProvideSharedDependency(\n\t\t\tread(),\n\t\t\tread(),\n\t\t\tread(),\n\t\t\tread(),\n\t\t\tread()\n\t\t);\n\t\tthis.shareScope = context.read();\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(\n\tProvideSharedDependency,\n\t\"webpack/lib/sharing/ProvideSharedDependency\"\n);\n\nmodule.exports = ProvideSharedDependency;\n"]},"metadata":{},"sourceType":"script"}