{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleNotFoundError = require(\"../ModuleNotFoundError\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst {\n  parseOptions\n} = require(\"../container/options\");\n\nconst LazySet = require(\"../util/LazySet\");\n\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\n\nconst {\n  parseRange\n} = require(\"../util/semver\");\n\nconst ConsumeSharedFallbackDependency = require(\"./ConsumeSharedFallbackDependency\");\n\nconst ConsumeSharedModule = require(\"./ConsumeSharedModule\");\n\nconst ConsumeSharedRuntimeModule = require(\"./ConsumeSharedRuntimeModule\");\n\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\n\nconst {\n  resolveMatchedConfigs\n} = require(\"./resolveMatchedConfigs\");\n\nconst {\n  isRequiredVersion,\n  getDescriptionFile,\n  getRequiredVersionFromDescriptionFile\n} = require(\"./utils\");\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../ResolverFactory\").ResolveOptionsWithDependencyType} ResolveOptionsWithDependencyType */\n\n/** @typedef {import(\"./ConsumeSharedModule\").ConsumeOptions} ConsumeOptions */\n\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/sharing/ConsumeSharedPlugin.check.js\"), () => require(\"../../schemas/plugins/sharing/ConsumeSharedPlugin.json\"), {\n  name: \"Consume Shared Plugin\",\n  baseDataPath: \"options\"\n});\n/** @type {ResolveOptionsWithDependencyType} */\n\nconst RESOLVE_OPTIONS = {\n  dependencyType: \"esm\"\n};\nconst PLUGIN_NAME = \"ConsumeSharedPlugin\";\n\nclass ConsumeSharedPlugin {\n  /**\n   * @param {ConsumeSharedPluginOptions} options options\n   */\n  constructor(options) {\n    if (typeof options !== \"string\") {\n      validate(options);\n    }\n    /** @type {[string, ConsumeOptions][]} */\n\n\n    this._consumes = parseOptions(options.consumes, (item, key) => {\n      if (Array.isArray(item)) throw new Error(\"Unexpected array in options\");\n      /** @type {ConsumeOptions} */\n\n      let result = item === key || !isRequiredVersion(item) ? // item is a request/key\n      {\n        import: key,\n        shareScope: options.shareScope || \"default\",\n        shareKey: key,\n        requiredVersion: undefined,\n        packageName: undefined,\n        strictVersion: false,\n        singleton: false,\n        eager: false\n      } : // key is a request/key\n      // item is a version\n      {\n        import: key,\n        shareScope: options.shareScope || \"default\",\n        shareKey: key,\n        requiredVersion: parseRange(item),\n        strictVersion: true,\n        packageName: undefined,\n        singleton: false,\n        eager: false\n      };\n      return result;\n    }, (item, key) => ({\n      import: item.import === false ? undefined : item.import || key,\n      shareScope: item.shareScope || options.shareScope || \"default\",\n      shareKey: item.shareKey || key,\n      requiredVersion: typeof item.requiredVersion === \"string\" ? parseRange(item.requiredVersion) : item.requiredVersion,\n      strictVersion: typeof item.strictVersion === \"boolean\" ? item.strictVersion : item.import !== false && !item.singleton,\n      packageName: item.packageName,\n      singleton: !!item.singleton,\n      eager: !!item.eager\n    }));\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ConsumeSharedFallbackDependency, normalModuleFactory);\n      let unresolvedConsumes, resolvedConsumes, prefixedConsumes;\n      const promise = resolveMatchedConfigs(compilation, this._consumes).then(_ref2 => {\n        let {\n          resolved,\n          unresolved,\n          prefixed\n        } = _ref2;\n        resolvedConsumes = resolved;\n        unresolvedConsumes = unresolved;\n        prefixedConsumes = prefixed;\n      });\n      const resolver = compilation.resolverFactory.get(\"normal\", RESOLVE_OPTIONS);\n      /**\n       * @param {string} context issuer directory\n       * @param {string} request request\n       * @param {ConsumeOptions} config options\n       * @returns {Promise<ConsumeSharedModule>} create module\n       */\n\n      const createConsumeSharedModule = (context, request, config) => {\n        const requiredVersionWarning = details => {\n          const error = new WebpackError(`No required version specified and unable to automatically determine one. ${details}`);\n          error.file = `shared module ${request}`;\n          compilation.warnings.push(error);\n        };\n\n        const directFallback = config.import && /^(\\.\\.?(\\/|$)|\\/|[A-Za-z]:|\\\\\\\\)/.test(config.import);\n        return Promise.all([new Promise(resolve => {\n          if (!config.import) return resolve();\n          const resolveContext = {\n            /** @type {LazySet<string>} */\n            fileDependencies: new LazySet(),\n\n            /** @type {LazySet<string>} */\n            contextDependencies: new LazySet(),\n\n            /** @type {LazySet<string>} */\n            missingDependencies: new LazySet()\n          };\n          resolver.resolve({}, directFallback ? compiler.context : context, config.import, resolveContext, (err, result) => {\n            compilation.contextDependencies.addAll(resolveContext.contextDependencies);\n            compilation.fileDependencies.addAll(resolveContext.fileDependencies);\n            compilation.missingDependencies.addAll(resolveContext.missingDependencies);\n\n            if (err) {\n              compilation.errors.push(new ModuleNotFoundError(null, err, {\n                name: `resolving fallback for shared module ${request}`\n              }));\n              return resolve();\n            }\n\n            resolve(result);\n          });\n        }), new Promise(resolve => {\n          if (config.requiredVersion !== undefined) return resolve(config.requiredVersion);\n          let packageName = config.packageName;\n\n          if (packageName === undefined) {\n            if (/^(\\/|[A-Za-z]:|\\\\\\\\)/.test(request)) {\n              // For relative or absolute requests we don't automatically use a packageName.\n              // If wished one can specify one with the packageName option.\n              return resolve();\n            }\n\n            const match = /^((?:@[^\\\\/]+[\\\\/])?[^\\\\/]+)/.exec(request);\n\n            if (!match) {\n              requiredVersionWarning(\"Unable to extract the package name from request.\");\n              return resolve();\n            }\n\n            packageName = match[0];\n          }\n\n          getDescriptionFile(compilation.inputFileSystem, context, [\"package.json\"], (err, result) => {\n            if (err) {\n              requiredVersionWarning(`Unable to read description file: ${err}`);\n              return resolve();\n            }\n\n            const {\n              data,\n              path: descriptionPath\n            } = result;\n\n            if (!data) {\n              requiredVersionWarning(`Unable to find description file in ${context}.`);\n              return resolve();\n            }\n\n            const requiredVersion = getRequiredVersionFromDescriptionFile(data, packageName);\n\n            if (typeof requiredVersion !== \"string\") {\n              requiredVersionWarning(`Unable to find required version for \"${packageName}\" in description file (${descriptionPath}). It need to be in dependencies, devDependencies or peerDependencies.`);\n              return resolve();\n            }\n\n            resolve(parseRange(requiredVersion));\n          });\n        })]).then(_ref3 => {\n          let [importResolved, requiredVersion] = _ref3;\n          return new ConsumeSharedModule(directFallback ? compiler.context : context, { ...config,\n            importResolved,\n            import: importResolved ? config.import : undefined,\n            requiredVersion\n          });\n        });\n      };\n\n      normalModuleFactory.hooks.factorize.tapPromise(PLUGIN_NAME, _ref4 => {\n        let {\n          context,\n          request,\n          dependencies\n        } = _ref4;\n        return (// wait for resolving to be complete\n          promise.then(() => {\n            if (dependencies[0] instanceof ConsumeSharedFallbackDependency || dependencies[0] instanceof ProvideForSharedDependency) {\n              return;\n            }\n\n            const match = unresolvedConsumes.get(request);\n\n            if (match !== undefined) {\n              return createConsumeSharedModule(context, request, match);\n            }\n\n            for (const [prefix, options] of prefixedConsumes) {\n              if (request.startsWith(prefix)) {\n                const remainder = request.slice(prefix.length);\n                return createConsumeSharedModule(context, request, { ...options,\n                  import: options.import ? options.import + remainder : undefined,\n                  shareKey: options.shareKey + remainder\n                });\n              }\n            }\n          })\n        );\n      });\n      normalModuleFactory.hooks.createModule.tapPromise(PLUGIN_NAME, (_ref5, _ref6) => {\n        let {\n          resource\n        } = _ref5;\n        let {\n          context,\n          dependencies\n        } = _ref6;\n\n        if (dependencies[0] instanceof ConsumeSharedFallbackDependency || dependencies[0] instanceof ProvideForSharedDependency) {\n          return Promise.resolve();\n        }\n\n        const options = resolvedConsumes.get(resource);\n\n        if (options !== undefined) {\n          return createConsumeSharedModule(context, resource, options);\n        }\n\n        return Promise.resolve();\n      });\n      compilation.hooks.additionalTreeRuntimeRequirements.tap(PLUGIN_NAME, (chunk, set) => {\n        set.add(RuntimeGlobals.module);\n        set.add(RuntimeGlobals.moduleCache);\n        set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n        set.add(RuntimeGlobals.shareScopeMap);\n        set.add(RuntimeGlobals.initializeSharing);\n        set.add(RuntimeGlobals.hasOwnProperty);\n        compilation.addRuntimeModule(chunk, new ConsumeSharedRuntimeModule(set));\n      });\n    });\n  }\n\n}\n\nmodule.exports = ConsumeSharedPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/sharing/ConsumeSharedPlugin.js"],"names":["ModuleNotFoundError","require","RuntimeGlobals","WebpackError","parseOptions","LazySet","createSchemaValidation","parseRange","ConsumeSharedFallbackDependency","ConsumeSharedModule","ConsumeSharedRuntimeModule","ProvideForSharedDependency","resolveMatchedConfigs","isRequiredVersion","getDescriptionFile","getRequiredVersionFromDescriptionFile","validate","name","baseDataPath","RESOLVE_OPTIONS","dependencyType","PLUGIN_NAME","ConsumeSharedPlugin","constructor","options","_consumes","consumes","item","key","Array","isArray","Error","result","import","shareScope","shareKey","requiredVersion","undefined","packageName","strictVersion","singleton","eager","apply","compiler","hooks","thisCompilation","tap","compilation","normalModuleFactory","dependencyFactories","set","unresolvedConsumes","resolvedConsumes","prefixedConsumes","promise","then","resolved","unresolved","prefixed","resolver","resolverFactory","get","createConsumeSharedModule","context","request","config","requiredVersionWarning","details","error","file","warnings","push","directFallback","test","Promise","all","resolve","resolveContext","fileDependencies","contextDependencies","missingDependencies","err","addAll","errors","match","exec","inputFileSystem","data","path","descriptionPath","importResolved","factorize","tapPromise","dependencies","prefix","startsWith","remainder","slice","length","createModule","resource","additionalTreeRuntimeRequirements","chunk","add","module","moduleCache","moduleFactoriesAddOnly","shareScopeMap","initializeSharing","hasOwnProperty","addRuntimeModule","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleNotFoundError = require(\"../ModuleNotFoundError\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst WebpackError = require(\"../WebpackError\");\nconst { parseOptions } = require(\"../container/options\");\nconst LazySet = require(\"../util/LazySet\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst { parseRange } = require(\"../util/semver\");\nconst ConsumeSharedFallbackDependency = require(\"./ConsumeSharedFallbackDependency\");\nconst ConsumeSharedModule = require(\"./ConsumeSharedModule\");\nconst ConsumeSharedRuntimeModule = require(\"./ConsumeSharedRuntimeModule\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\nconst { resolveMatchedConfigs } = require(\"./resolveMatchedConfigs\");\nconst {\n\tisRequiredVersion,\n\tgetDescriptionFile,\n\tgetRequiredVersionFromDescriptionFile\n} = require(\"./utils\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumeSharedPluginOptions} ConsumeSharedPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/sharing/ConsumeSharedPlugin\").ConsumesConfig} ConsumesConfig */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../ResolverFactory\").ResolveOptionsWithDependencyType} ResolveOptionsWithDependencyType */\n/** @typedef {import(\"./ConsumeSharedModule\").ConsumeOptions} ConsumeOptions */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/sharing/ConsumeSharedPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/sharing/ConsumeSharedPlugin.json\"),\n\t{\n\t\tname: \"Consume Shared Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\n/** @type {ResolveOptionsWithDependencyType} */\nconst RESOLVE_OPTIONS = { dependencyType: \"esm\" };\nconst PLUGIN_NAME = \"ConsumeSharedPlugin\";\n\nclass ConsumeSharedPlugin {\n\t/**\n\t * @param {ConsumeSharedPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tif (typeof options !== \"string\") {\n\t\t\tvalidate(options);\n\t\t}\n\n\t\t/** @type {[string, ConsumeOptions][]} */\n\t\tthis._consumes = parseOptions(\n\t\t\toptions.consumes,\n\t\t\t(item, key) => {\n\t\t\t\tif (Array.isArray(item)) throw new Error(\"Unexpected array in options\");\n\t\t\t\t/** @type {ConsumeOptions} */\n\t\t\t\tlet result =\n\t\t\t\t\titem === key || !isRequiredVersion(item)\n\t\t\t\t\t\t? // item is a request/key\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\timport: key,\n\t\t\t\t\t\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\t\t\t\t\t\tshareKey: key,\n\t\t\t\t\t\t\t\trequiredVersion: undefined,\n\t\t\t\t\t\t\t\tpackageName: undefined,\n\t\t\t\t\t\t\t\tstrictVersion: false,\n\t\t\t\t\t\t\t\tsingleton: false,\n\t\t\t\t\t\t\t\teager: false\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: // key is a request/key\n\t\t\t\t\t\t  // item is a version\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\timport: key,\n\t\t\t\t\t\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\t\t\t\t\t\tshareKey: key,\n\t\t\t\t\t\t\t\trequiredVersion: parseRange(item),\n\t\t\t\t\t\t\t\tstrictVersion: true,\n\t\t\t\t\t\t\t\tpackageName: undefined,\n\t\t\t\t\t\t\t\tsingleton: false,\n\t\t\t\t\t\t\t\teager: false\n\t\t\t\t\t\t  };\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t(item, key) => ({\n\t\t\t\timport: item.import === false ? undefined : item.import || key,\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\",\n\t\t\t\tshareKey: item.shareKey || key,\n\t\t\t\trequiredVersion:\n\t\t\t\t\ttypeof item.requiredVersion === \"string\"\n\t\t\t\t\t\t? parseRange(item.requiredVersion)\n\t\t\t\t\t\t: item.requiredVersion,\n\t\t\t\tstrictVersion:\n\t\t\t\t\ttypeof item.strictVersion === \"boolean\"\n\t\t\t\t\t\t? item.strictVersion\n\t\t\t\t\t\t: item.import !== false && !item.singleton,\n\t\t\t\tpackageName: item.packageName,\n\t\t\t\tsingleton: !!item.singleton,\n\t\t\t\teager: !!item.eager\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tConsumeSharedFallbackDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tlet unresolvedConsumes, resolvedConsumes, prefixedConsumes;\n\t\t\t\tconst promise = resolveMatchedConfigs(compilation, this._consumes).then(\n\t\t\t\t\t({ resolved, unresolved, prefixed }) => {\n\t\t\t\t\t\tresolvedConsumes = resolved;\n\t\t\t\t\t\tunresolvedConsumes = unresolved;\n\t\t\t\t\t\tprefixedConsumes = prefixed;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst resolver = compilation.resolverFactory.get(\n\t\t\t\t\t\"normal\",\n\t\t\t\t\tRESOLVE_OPTIONS\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {string} context issuer directory\n\t\t\t\t * @param {string} request request\n\t\t\t\t * @param {ConsumeOptions} config options\n\t\t\t\t * @returns {Promise<ConsumeSharedModule>} create module\n\t\t\t\t */\n\t\t\t\tconst createConsumeSharedModule = (context, request, config) => {\n\t\t\t\t\tconst requiredVersionWarning = details => {\n\t\t\t\t\t\tconst error = new WebpackError(\n\t\t\t\t\t\t\t`No required version specified and unable to automatically determine one. ${details}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\terror.file = `shared module ${request}`;\n\t\t\t\t\t\tcompilation.warnings.push(error);\n\t\t\t\t\t};\n\t\t\t\t\tconst directFallback =\n\t\t\t\t\t\tconfig.import &&\n\t\t\t\t\t\t/^(\\.\\.?(\\/|$)|\\/|[A-Za-z]:|\\\\\\\\)/.test(config.import);\n\t\t\t\t\treturn Promise.all([\n\t\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\t\tif (!config.import) return resolve();\n\t\t\t\t\t\t\tconst resolveContext = {\n\t\t\t\t\t\t\t\t/** @type {LazySet<string>} */\n\t\t\t\t\t\t\t\tfileDependencies: new LazySet(),\n\t\t\t\t\t\t\t\t/** @type {LazySet<string>} */\n\t\t\t\t\t\t\t\tcontextDependencies: new LazySet(),\n\t\t\t\t\t\t\t\t/** @type {LazySet<string>} */\n\t\t\t\t\t\t\t\tmissingDependencies: new LazySet()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresolver.resolve(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tdirectFallback ? compiler.context : context,\n\t\t\t\t\t\t\t\tconfig.import,\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tcompilation.contextDependencies.addAll(\n\t\t\t\t\t\t\t\t\t\tresolveContext.contextDependencies\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tcompilation.fileDependencies.addAll(\n\t\t\t\t\t\t\t\t\t\tresolveContext.fileDependencies\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tcompilation.missingDependencies.addAll(\n\t\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tcompilation.errors.push(\n\t\t\t\t\t\t\t\t\t\t\tnew ModuleNotFoundError(null, err, {\n\t\t\t\t\t\t\t\t\t\t\t\tname: `resolving fallback for shared module ${request}`\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\t\tif (config.requiredVersion !== undefined)\n\t\t\t\t\t\t\t\treturn resolve(config.requiredVersion);\n\t\t\t\t\t\t\tlet packageName = config.packageName;\n\t\t\t\t\t\t\tif (packageName === undefined) {\n\t\t\t\t\t\t\t\tif (/^(\\/|[A-Za-z]:|\\\\\\\\)/.test(request)) {\n\t\t\t\t\t\t\t\t\t// For relative or absolute requests we don't automatically use a packageName.\n\t\t\t\t\t\t\t\t\t// If wished one can specify one with the packageName option.\n\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst match = /^((?:@[^\\\\/]+[\\\\/])?[^\\\\/]+)/.exec(request);\n\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\trequiredVersionWarning(\n\t\t\t\t\t\t\t\t\t\t\"Unable to extract the package name from request.\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpackageName = match[0];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgetDescriptionFile(\n\t\t\t\t\t\t\t\tcompilation.inputFileSystem,\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t[\"package.json\"],\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\trequiredVersionWarning(\n\t\t\t\t\t\t\t\t\t\t\t`Unable to read description file: ${err}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst { data, path: descriptionPath } = result;\n\t\t\t\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\t\t\t\trequiredVersionWarning(\n\t\t\t\t\t\t\t\t\t\t\t`Unable to find description file in ${context}.`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst requiredVersion = getRequiredVersionFromDescriptionFile(\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\tpackageName\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (typeof requiredVersion !== \"string\") {\n\t\t\t\t\t\t\t\t\t\trequiredVersionWarning(\n\t\t\t\t\t\t\t\t\t\t\t`Unable to find required version for \"${packageName}\" in description file (${descriptionPath}). It need to be in dependencies, devDependencies or peerDependencies.`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresolve(parseRange(requiredVersion));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t]).then(([importResolved, requiredVersion]) => {\n\t\t\t\t\t\treturn new ConsumeSharedModule(\n\t\t\t\t\t\t\tdirectFallback ? compiler.context : context,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...config,\n\t\t\t\t\t\t\t\timportResolved,\n\t\t\t\t\t\t\t\timport: importResolved ? config.import : undefined,\n\t\t\t\t\t\t\t\trequiredVersion\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.factorize.tapPromise(\n\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t({ context, request, dependencies }) =>\n\t\t\t\t\t\t// wait for resolving to be complete\n\t\t\t\t\t\tpromise.then(() => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdependencies[0] instanceof ConsumeSharedFallbackDependency ||\n\t\t\t\t\t\t\t\tdependencies[0] instanceof ProvideForSharedDependency\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst match = unresolvedConsumes.get(request);\n\t\t\t\t\t\t\tif (match !== undefined) {\n\t\t\t\t\t\t\t\treturn createConsumeSharedModule(context, request, match);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const [prefix, options] of prefixedConsumes) {\n\t\t\t\t\t\t\t\tif (request.startsWith(prefix)) {\n\t\t\t\t\t\t\t\t\tconst remainder = request.slice(prefix.length);\n\t\t\t\t\t\t\t\t\treturn createConsumeSharedModule(context, request, {\n\t\t\t\t\t\t\t\t\t\t...options,\n\t\t\t\t\t\t\t\t\t\timport: options.import\n\t\t\t\t\t\t\t\t\t\t\t? options.import + remainder\n\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\t\tshareKey: options.shareKey + remainder\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tnormalModuleFactory.hooks.createModule.tapPromise(\n\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t({ resource }, { context, dependencies }) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdependencies[0] instanceof ConsumeSharedFallbackDependency ||\n\t\t\t\t\t\t\tdependencies[0] instanceof ProvideForSharedDependency\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst options = resolvedConsumes.get(resource);\n\t\t\t\t\t\tif (options !== undefined) {\n\t\t\t\t\t\t\treturn createConsumeSharedModule(context, resource, options);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.additionalTreeRuntimeRequirements.tap(\n\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t(chunk, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleCache);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t\tset.add(RuntimeGlobals.shareScopeMap);\n\t\t\t\t\t\tset.add(RuntimeGlobals.initializeSharing);\n\t\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew ConsumeSharedRuntimeModule(set)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ConsumeSharedPlugin;\n"]},"metadata":{},"sourceType":"script"}