{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\n\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n\n/** @typedef {import(\"estree\").Node} Node */\n\n/** @typedef {import(\"./JavascriptParser\")} JavascriptParser */\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {string} value the const value\n * @param {string[]=} runtimeRequirements runtime requirements\n * @returns {function(ExpressionNode): true} plugin function\n */\n\n\nexports.toConstantDependency = (parser, value, runtimeRequirements) => {\n  return function constDependency(expr) {\n    const dep = new ConstDependency(value, expr.range, runtimeRequirements);\n    dep.loc = expr.loc;\n    parser.state.module.addPresentationalDependency(dep);\n    return true;\n  };\n};\n/**\n * @param {string} value the string value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\n\n\nexports.evaluateToString = value => {\n  return function stringExpression(expr) {\n    return new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n  };\n};\n/**\n * @param {number} value the number value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\n\n\nexports.evaluateToNumber = value => {\n  return function stringExpression(expr) {\n    return new BasicEvaluatedExpression().setNumber(value).setRange(expr.range);\n  };\n};\n/**\n * @param {boolean} value the boolean value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\n\n\nexports.evaluateToBoolean = value => {\n  return function booleanExpression(expr) {\n    return new BasicEvaluatedExpression().setBoolean(value).setRange(expr.range);\n  };\n};\n/**\n * @param {string} identifier identifier\n * @param {string} rootInfo rootInfo\n * @param {function(): string[]} getMembers getMembers\n * @param {boolean|null=} truthy is truthy, null if nullish\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} callback\n */\n\n\nexports.evaluateToIdentifier = (identifier, rootInfo, getMembers, truthy) => {\n  return function identifierExpression(expr) {\n    let evaluatedExpression = new BasicEvaluatedExpression().setIdentifier(identifier, rootInfo, getMembers).setSideEffects(false).setRange(expr.range);\n\n    switch (truthy) {\n      case true:\n        evaluatedExpression.setTruthy();\n        break;\n\n      case null:\n        evaluatedExpression.setNullish(true);\n        break;\n\n      case false:\n        evaluatedExpression.setFalsy();\n        break;\n    }\n\n    return evaluatedExpression;\n  };\n};\n\nexports.expressionIsUnsupported = (parser, message) => {\n  return function unsupportedExpression(expr) {\n    const dep = new ConstDependency(\"(void 0)\", expr.range, null);\n    dep.loc = expr.loc;\n    parser.state.module.addPresentationalDependency(dep);\n    if (!parser.state.module) return;\n    parser.state.module.addWarning(new UnsupportedFeatureWarning(message, expr.loc));\n    return true;\n  };\n};\n\nexports.skipTraversal = () => true;\n\nexports.approve = () => true;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/javascript/JavascriptParserHelpers.js"],"names":["UnsupportedFeatureWarning","require","ConstDependency","BasicEvaluatedExpression","exports","toConstantDependency","parser","value","runtimeRequirements","constDependency","expr","dep","range","loc","state","module","addPresentationalDependency","evaluateToString","stringExpression","setString","setRange","evaluateToNumber","setNumber","evaluateToBoolean","booleanExpression","setBoolean","evaluateToIdentifier","identifier","rootInfo","getMembers","truthy","identifierExpression","evaluatedExpression","setIdentifier","setSideEffects","setTruthy","setNullish","setFalsy","expressionIsUnsupported","message","unsupportedExpression","addWarning","skipTraversal","approve"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\n\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n/** @typedef {import(\"estree\").Node} Node */\n/** @typedef {import(\"./JavascriptParser\")} JavascriptParser */\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {string} value the const value\n * @param {string[]=} runtimeRequirements runtime requirements\n * @returns {function(ExpressionNode): true} plugin function\n */\nexports.toConstantDependency = (parser, value, runtimeRequirements) => {\n\treturn function constDependency(expr) {\n\t\tconst dep = new ConstDependency(value, expr.range, runtimeRequirements);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.module.addPresentationalDependency(dep);\n\t\treturn true;\n\t};\n};\n\n/**\n * @param {string} value the string value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToString = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n\t};\n};\n\n/**\n * @param {number} value the number value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToNumber = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setNumber(value).setRange(expr.range);\n\t};\n};\n\n/**\n * @param {boolean} value the boolean value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToBoolean = value => {\n\treturn function booleanExpression(expr) {\n\t\treturn new BasicEvaluatedExpression()\n\t\t\t.setBoolean(value)\n\t\t\t.setRange(expr.range);\n\t};\n};\n\n/**\n * @param {string} identifier identifier\n * @param {string} rootInfo rootInfo\n * @param {function(): string[]} getMembers getMembers\n * @param {boolean|null=} truthy is truthy, null if nullish\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} callback\n */\nexports.evaluateToIdentifier = (identifier, rootInfo, getMembers, truthy) => {\n\treturn function identifierExpression(expr) {\n\t\tlet evaluatedExpression = new BasicEvaluatedExpression()\n\t\t\t.setIdentifier(identifier, rootInfo, getMembers)\n\t\t\t.setSideEffects(false)\n\t\t\t.setRange(expr.range);\n\t\tswitch (truthy) {\n\t\t\tcase true:\n\t\t\t\tevaluatedExpression.setTruthy();\n\t\t\t\tbreak;\n\t\t\tcase null:\n\t\t\t\tevaluatedExpression.setNullish(true);\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tevaluatedExpression.setFalsy();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn evaluatedExpression;\n\t};\n};\n\nexports.expressionIsUnsupported = (parser, message) => {\n\treturn function unsupportedExpression(expr) {\n\t\tconst dep = new ConstDependency(\"(void 0)\", expr.range, null);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.module.addPresentationalDependency(dep);\n\t\tif (!parser.state.module) return;\n\t\tparser.state.module.addWarning(\n\t\t\tnew UnsupportedFeatureWarning(message, expr.loc)\n\t\t);\n\t\treturn true;\n\t};\n};\n\nexports.skipTraversal = () => true;\n\nexports.approve = () => true;\n"]},"metadata":{},"sourceType":"script"}