{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nclass ExternalsPlugin {\n  /**\n   * @param {string | undefined} type default external type\n   * @param {Externals} externals externals config\n   */\n  constructor(type, externals) {\n    this.type = type;\n    this.externals = externals;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compile.tap(\"ExternalsPlugin\", _ref => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      new ExternalModuleFactoryPlugin(this.type, this.externals).apply(normalModuleFactory);\n    });\n  }\n\n}\n\nmodule.exports = ExternalsPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/ExternalsPlugin.js"],"names":["ExternalModuleFactoryPlugin","require","ExternalsPlugin","constructor","type","externals","apply","compiler","hooks","compile","tap","normalModuleFactory","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAAD,CAA3C;AAEA;;AACA;;;AAEA,MAAMC,eAAN,CAAsB;AACrB;AACD;AACA;AACA;AACCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkB;AAC5B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAuBC,GAAvB,CAA2B,iBAA3B,EAA8C,QAA6B;AAAA,UAA5B;AAAEC,QAAAA;AAAF,OAA4B;AAC1E,UAAIX,2BAAJ,CAAgC,KAAKI,IAArC,EAA2C,KAAKC,SAAhD,EAA2DC,KAA3D,CACCK,mBADD;AAGA,KAJD;AAKA;;AArBoB;;AAwBtBC,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass ExternalsPlugin {\n\t/**\n\t * @param {string | undefined} type default external type\n\t * @param {Externals} externals externals config\n\t */\n\tconstructor(type, externals) {\n\t\tthis.type = type;\n\t\tthis.externals = externals;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compile.tap(\"ExternalsPlugin\", ({ normalModuleFactory }) => {\n\t\t\tnew ExternalModuleFactoryPlugin(this.type, this.externals).apply(\n\t\t\t\tnormalModuleFactory\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = ExternalsPlugin;\n"]},"metadata":{},"sourceType":"script"}