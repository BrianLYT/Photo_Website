{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst LocalModule = require(\"./LocalModule\");\n\nconst lookup = (parent, mod) => {\n  if (mod.charAt(0) !== \".\") return mod;\n  var path = parent.split(\"/\");\n  var segments = mod.split(\"/\");\n  path.pop();\n\n  for (let i = 0; i < segments.length; i++) {\n    const seg = segments[i];\n\n    if (seg === \"..\") {\n      path.pop();\n    } else if (seg !== \".\") {\n      path.push(seg);\n    }\n  }\n\n  return path.join(\"/\");\n};\n\nexports.addLocalModule = (state, name) => {\n  if (!state.localModules) {\n    state.localModules = [];\n  }\n\n  const m = new LocalModule(name, state.localModules.length);\n  state.localModules.push(m);\n  return m;\n};\n\nexports.getLocalModule = (state, name, namedModule) => {\n  if (!state.localModules) return null;\n\n  if (namedModule) {\n    // resolve dependency name relative to the defining named module\n    name = lookup(namedModule, name);\n  }\n\n  for (let i = 0; i < state.localModules.length; i++) {\n    if (state.localModules[i].name === name) {\n      return state.localModules[i];\n    }\n  }\n\n  return null;\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/LocalModulesHelpers.js"],"names":["LocalModule","require","lookup","parent","mod","charAt","path","split","segments","pop","i","length","seg","push","join","exports","addLocalModule","state","name","localModules","m","getLocalModule","namedModule"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AAEA,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC/B,MAAIA,GAAG,CAACC,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B,OAAOD,GAAP;AAE3B,MAAIE,IAAI,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,CAAX;AACA,MAAIC,QAAQ,GAAGJ,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAf;AACAD,EAAAA,IAAI,CAACG,GAAL;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,UAAME,GAAG,GAAGJ,QAAQ,CAACE,CAAD,CAApB;;AACA,QAAIE,GAAG,KAAK,IAAZ,EAAkB;AACjBN,MAAAA,IAAI,CAACG,GAAL;AACA,KAFD,MAEO,IAAIG,GAAG,KAAK,GAAZ,EAAiB;AACvBN,MAAAA,IAAI,CAACO,IAAL,CAAUD,GAAV;AACA;AACD;;AAED,SAAON,IAAI,CAACQ,IAAL,CAAU,GAAV,CAAP;AACA,CAjBD;;AAmBAC,OAAO,CAACC,cAAR,GAAyB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzC,MAAI,CAACD,KAAK,CAACE,YAAX,EAAyB;AACxBF,IAAAA,KAAK,CAACE,YAAN,GAAqB,EAArB;AACA;;AACD,QAAMC,CAAC,GAAG,IAAIpB,WAAJ,CAAgBkB,IAAhB,EAAsBD,KAAK,CAACE,YAAN,CAAmBR,MAAzC,CAAV;AACAM,EAAAA,KAAK,CAACE,YAAN,CAAmBN,IAAnB,CAAwBO,CAAxB;AACA,SAAOA,CAAP;AACA,CAPD;;AASAL,OAAO,CAACM,cAAR,GAAyB,CAACJ,KAAD,EAAQC,IAAR,EAAcI,WAAd,KAA8B;AACtD,MAAI,CAACL,KAAK,CAACE,YAAX,EAAyB,OAAO,IAAP;;AACzB,MAAIG,WAAJ,EAAiB;AAChB;AACAJ,IAAAA,IAAI,GAAGhB,MAAM,CAACoB,WAAD,EAAcJ,IAAd,CAAb;AACA;;AACD,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,KAAK,CAACE,YAAN,CAAmBR,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnD,QAAIO,KAAK,CAACE,YAAN,CAAmBT,CAAnB,EAAsBQ,IAAtB,KAA+BA,IAAnC,EAAyC;AACxC,aAAOD,KAAK,CAACE,YAAN,CAAmBT,CAAnB,CAAP;AACA;AACD;;AACD,SAAO,IAAP;AACA,CAZD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LocalModule = require(\"./LocalModule\");\n\nconst lookup = (parent, mod) => {\n\tif (mod.charAt(0) !== \".\") return mod;\n\n\tvar path = parent.split(\"/\");\n\tvar segments = mod.split(\"/\");\n\tpath.pop();\n\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tconst seg = segments[i];\n\t\tif (seg === \"..\") {\n\t\t\tpath.pop();\n\t\t} else if (seg !== \".\") {\n\t\t\tpath.push(seg);\n\t\t}\n\t}\n\n\treturn path.join(\"/\");\n};\n\nexports.addLocalModule = (state, name) => {\n\tif (!state.localModules) {\n\t\tstate.localModules = [];\n\t}\n\tconst m = new LocalModule(name, state.localModules.length);\n\tstate.localModules.push(m);\n\treturn m;\n};\n\nexports.getLocalModule = (state, name, namedModule) => {\n\tif (!state.localModules) return null;\n\tif (namedModule) {\n\t\t// resolve dependency name relative to the defining named module\n\t\tname = lookup(namedModule, name);\n\t}\n\tfor (let i = 0; i < state.localModules.length; i++) {\n\t\tif (state.localModules[i].name === name) {\n\t\t\treturn state.localModules[i];\n\t\t}\n\t}\n\treturn null;\n};\n"]},"metadata":{},"sourceType":"script"}