{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst TupleSet = require(\"./TupleSet\");\n/**\n * @template {any[]} T\n */\n\n\nclass TupleQueue {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  constructor(items) {\n    /** @private @type {TupleSet<T>} */\n    this._set = new TupleSet(items);\n    /** @private @type {Iterator<T>} */\n\n    this._iterator = this._set[Symbol.iterator]();\n  }\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n\n\n  get length() {\n    return this._set.size;\n  }\n  /**\n   * Appends the specified element to this queue.\n   * @param {T} item The element to add.\n   * @returns {void}\n   */\n\n\n  enqueue() {\n    this._set.add(...arguments);\n  }\n  /**\n   * Retrieves and removes the head of this queue.\n   * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n   */\n\n\n  dequeue() {\n    const result = this._iterator.next();\n\n    if (result.done) {\n      if (this._set.size > 0) {\n        this._iterator = this._set[Symbol.iterator]();\n\n        const value = this._iterator.next().value;\n\n        this._set.delete(...value);\n\n        return value;\n      }\n\n      return undefined;\n    }\n\n    this._set.delete(...result.value);\n\n    return result.value;\n  }\n\n}\n\nmodule.exports = TupleQueue;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/TupleQueue.js"],"names":["TupleSet","require","TupleQueue","constructor","items","_set","_iterator","Symbol","iterator","length","size","enqueue","add","dequeue","result","next","done","value","delete","undefined","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;;;AACA,MAAMC,UAAN,CAAiB;AAChB;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,SAAKC,IAAL,GAAY,IAAIL,QAAJ,CAAaI,KAAb,CAAZ;AACA;;AACA,SAAKE,SAAL,GAAiB,KAAKD,IAAL,CAAUE,MAAM,CAACC,QAAjB,GAAjB;AACA;AAED;AACD;AACA;AACA;;;AACW,MAANC,MAAM,GAAG;AACZ,WAAO,KAAKJ,IAAL,CAAUK,IAAjB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,OAAO,GAAU;AAChB,SAAKN,IAAL,CAAUO,GAAV,CAAc,YAAd;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAMC,MAAM,GAAG,KAAKR,SAAL,CAAeS,IAAf,EAAf;;AACA,QAAID,MAAM,CAACE,IAAX,EAAiB;AAChB,UAAI,KAAKX,IAAL,CAAUK,IAAV,GAAiB,CAArB,EAAwB;AACvB,aAAKJ,SAAL,GAAiB,KAAKD,IAAL,CAAUE,MAAM,CAACC,QAAjB,GAAjB;;AACA,cAAMS,KAAK,GAAG,KAAKX,SAAL,CAAeS,IAAf,GAAsBE,KAApC;;AACA,aAAKZ,IAAL,CAAUa,MAAV,CAAiB,GAAGD,KAApB;;AACA,eAAOA,KAAP;AACA;;AACD,aAAOE,SAAP;AACA;;AACD,SAAKd,IAAL,CAAUa,MAAV,CAAiB,GAAGJ,MAAM,CAACG,KAA3B;;AACA,WAAOH,MAAM,CAACG,KAAd;AACA;;AA7Ce;;AAgDjBG,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst TupleSet = require(\"./TupleSet\");\n\n/**\n * @template {any[]} T\n */\nclass TupleQueue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {TupleSet<T>} */\n\t\tthis._set = new TupleSet(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis._iterator = this._set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this._set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(...item) {\n\t\tthis._set.add(...item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this._iterator.next();\n\t\tif (result.done) {\n\t\t\tif (this._set.size > 0) {\n\t\t\t\tthis._iterator = this._set[Symbol.iterator]();\n\t\t\t\tconst value = this._iterator.next().value;\n\t\t\t\tthis._set.delete(...value);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._set.delete(...result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = TupleQueue;\n"]},"metadata":{},"sourceType":"script"}