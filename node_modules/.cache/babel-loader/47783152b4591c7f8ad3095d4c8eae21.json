{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n/** @typedef {import(\"../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @template T\n * @callback Callback\n * @param {(Error | null)=} err\n * @param {T=} result\n */\n\n\nclass Watching {\n  /**\n   * @param {Compiler} compiler the compiler\n   * @param {WatchOptions} watchOptions options\n   * @param {Callback<Stats>} handler completion handler\n   */\n  constructor(compiler, watchOptions, handler) {\n    this.startTime = null;\n    this.invalid = false;\n    this.handler = handler;\n    /** @type {Callback<void>[]} */\n\n    this.callbacks = [];\n    /** @type {Callback<void>[] | undefined} */\n\n    this._closeCallbacks = undefined;\n    this.closed = false;\n    this.suspended = false;\n    this.blocked = false;\n\n    this._isBlocked = () => false;\n\n    this._onChange = () => {};\n\n    this._onInvalid = () => {};\n\n    if (typeof watchOptions === \"number\") {\n      this.watchOptions = {\n        aggregateTimeout: watchOptions\n      };\n    } else if (watchOptions && typeof watchOptions === \"object\") {\n      this.watchOptions = { ...watchOptions\n      };\n    } else {\n      this.watchOptions = {};\n    }\n\n    if (typeof this.watchOptions.aggregateTimeout !== \"number\") {\n      this.watchOptions.aggregateTimeout = 20;\n    }\n\n    this.compiler = compiler;\n    this.running = false;\n    this._initial = true;\n    this._invalidReported = true;\n    this._needRecords = true;\n    this.watcher = undefined;\n    this.pausedWatcher = undefined;\n    /** @type {Set<string>} */\n\n    this._collectedChangedFiles = undefined;\n    /** @type {Set<string>} */\n\n    this._collectedRemovedFiles = undefined;\n    this._done = this._done.bind(this);\n    process.nextTick(() => {\n      if (this._initial) this._invalidate();\n    });\n  }\n  /**\n   * @param {ReadonlySet<string>} changedFiles changed files\n   * @param {ReadonlySet<string>} removedFiles removed files\n   */\n\n\n  _mergeWithCollected(changedFiles, removedFiles) {\n    if (!changedFiles) return;\n\n    if (!this._collectedChangedFiles) {\n      this._collectedChangedFiles = new Set(changedFiles);\n      this._collectedRemovedFiles = new Set(removedFiles);\n    } else {\n      for (const file of changedFiles) {\n        this._collectedChangedFiles.add(file);\n\n        this._collectedRemovedFiles.delete(file);\n      }\n\n      for (const file of removedFiles) {\n        this._collectedChangedFiles.delete(file);\n\n        this._collectedRemovedFiles.add(file);\n      }\n    }\n  }\n  /**\n   * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} fileTimeInfoEntries info for files\n   * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} contextTimeInfoEntries info for directories\n   * @param {ReadonlySet<string>=} changedFiles changed files\n   * @param {ReadonlySet<string>=} removedFiles removed files\n   * @returns {void}\n   */\n\n\n  _go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\n    this._initial = false;\n    if (this.startTime === null) this.startTime = Date.now();\n    this.running = true;\n\n    if (this.watcher) {\n      this.pausedWatcher = this.watcher;\n      this.lastWatcherStartTime = Date.now();\n      this.watcher.pause();\n      this.watcher = null;\n    } else if (!this.lastWatcherStartTime) {\n      this.lastWatcherStartTime = Date.now();\n    }\n\n    this.compiler.fsStartTime = Date.now();\n\n    if (changedFiles && removedFiles && fileTimeInfoEntries && contextTimeInfoEntries) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n\n      this.compiler.fileTimestamps = fileTimeInfoEntries;\n      this.compiler.contextTimestamps = contextTimeInfoEntries;\n    } else if (this.pausedWatcher) {\n      if (this.pausedWatcher.getInfo) {\n        const {\n          changes,\n          removals,\n          fileTimeInfoEntries,\n          contextTimeInfoEntries\n        } = this.pausedWatcher.getInfo();\n\n        this._mergeWithCollected(changes, removals);\n\n        this.compiler.fileTimestamps = fileTimeInfoEntries;\n        this.compiler.contextTimestamps = contextTimeInfoEntries;\n      } else {\n        this._mergeWithCollected(this.pausedWatcher.getAggregatedChanges && this.pausedWatcher.getAggregatedChanges(), this.pausedWatcher.getAggregatedRemovals && this.pausedWatcher.getAggregatedRemovals());\n\n        this.compiler.fileTimestamps = this.pausedWatcher.getFileTimeInfoEntries();\n        this.compiler.contextTimestamps = this.pausedWatcher.getContextTimeInfoEntries();\n      }\n    }\n\n    this.compiler.modifiedFiles = this._collectedChangedFiles;\n    this._collectedChangedFiles = undefined;\n    this.compiler.removedFiles = this._collectedRemovedFiles;\n    this._collectedRemovedFiles = undefined;\n\n    const run = () => {\n      if (this.compiler.idle) {\n        return this.compiler.cache.endIdle(err => {\n          if (err) return this._done(err);\n          this.compiler.idle = false;\n          run();\n        });\n      }\n\n      if (this._needRecords) {\n        return this.compiler.readRecords(err => {\n          if (err) return this._done(err);\n          this._needRecords = false;\n          run();\n        });\n      }\n\n      this.invalid = false;\n      this._invalidReported = false;\n      this.compiler.hooks.watchRun.callAsync(this.compiler, err => {\n        if (err) return this._done(err);\n\n        const onCompiled = (err, compilation) => {\n          if (err) return this._done(err, compilation);\n          if (this.invalid) return this._done(null, compilation);\n\n          if (this.compiler.hooks.shouldEmit.call(compilation) === false) {\n            return this._done(null, compilation);\n          }\n\n          process.nextTick(() => {\n            const logger = compilation.getLogger(\"webpack.Compiler\");\n            logger.time(\"emitAssets\");\n            this.compiler.emitAssets(compilation, err => {\n              logger.timeEnd(\"emitAssets\");\n              if (err) return this._done(err, compilation);\n              if (this.invalid) return this._done(null, compilation);\n              logger.time(\"emitRecords\");\n              this.compiler.emitRecords(err => {\n                logger.timeEnd(\"emitRecords\");\n                if (err) return this._done(err, compilation);\n\n                if (compilation.hooks.needAdditionalPass.call()) {\n                  compilation.needAdditionalPass = true;\n                  compilation.startTime = this.startTime;\n                  compilation.endTime = Date.now();\n                  logger.time(\"done hook\");\n                  const stats = new Stats(compilation);\n                  this.compiler.hooks.done.callAsync(stats, err => {\n                    logger.timeEnd(\"done hook\");\n                    if (err) return this._done(err, compilation);\n                    this.compiler.hooks.additionalPass.callAsync(err => {\n                      if (err) return this._done(err, compilation);\n                      this.compiler.compile(onCompiled);\n                    });\n                  });\n                  return;\n                }\n\n                return this._done(null, compilation);\n              });\n            });\n          });\n        };\n\n        this.compiler.compile(onCompiled);\n      });\n    };\n\n    run();\n  }\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {Stats} the compilation stats\n   */\n\n\n  _getStats(compilation) {\n    const stats = new Stats(compilation);\n    return stats;\n  }\n  /**\n   * @param {Error=} err an optional error\n   * @param {Compilation=} compilation the compilation\n   * @returns {void}\n   */\n\n\n  _done(err, compilation) {\n    this.running = false;\n    const logger = compilation && compilation.getLogger(\"webpack.Watching\");\n    let stats = null;\n\n    const handleError = (err, cbs) => {\n      this.compiler.hooks.failed.call(err);\n      this.compiler.cache.beginIdle();\n      this.compiler.idle = true;\n      this.handler(err, stats);\n\n      if (!cbs) {\n        cbs = this.callbacks;\n        this.callbacks = [];\n      }\n\n      for (const cb of cbs) cb(err);\n    };\n\n    if (this.invalid && !this.suspended && !this.blocked && !(this._isBlocked() && (this.blocked = true))) {\n      if (compilation) {\n        logger.time(\"storeBuildDependencies\");\n        this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err => {\n          logger.timeEnd(\"storeBuildDependencies\");\n          if (err) return handleError(err);\n\n          this._go();\n        });\n      } else {\n        this._go();\n      }\n\n      return;\n    }\n\n    if (compilation) {\n      compilation.startTime = this.startTime;\n      compilation.endTime = Date.now();\n      stats = new Stats(compilation);\n    }\n\n    this.startTime = null;\n    if (err) return handleError(err);\n    const cbs = this.callbacks;\n    this.callbacks = [];\n    logger.time(\"done hook\");\n    this.compiler.hooks.done.callAsync(stats, err => {\n      logger.timeEnd(\"done hook\");\n      if (err) return handleError(err, cbs);\n      this.handler(null, stats);\n      logger.time(\"storeBuildDependencies\");\n      this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err => {\n        logger.timeEnd(\"storeBuildDependencies\");\n        if (err) return handleError(err, cbs);\n        logger.time(\"beginIdle\");\n        this.compiler.cache.beginIdle();\n        this.compiler.idle = true;\n        logger.timeEnd(\"beginIdle\");\n        process.nextTick(() => {\n          if (!this.closed) {\n            this.watch(compilation.fileDependencies, compilation.contextDependencies, compilation.missingDependencies);\n          }\n        });\n\n        for (const cb of cbs) cb(null);\n\n        this.compiler.hooks.afterDone.call(stats);\n      });\n    });\n  }\n  /**\n   * @param {Iterable<string>} files watched files\n   * @param {Iterable<string>} dirs watched directories\n   * @param {Iterable<string>} missing watched existence entries\n   * @returns {void}\n   */\n\n\n  watch(files, dirs, missing) {\n    this.pausedWatcher = null;\n    this.watcher = this.compiler.watchFileSystem.watch(files, dirs, missing, this.lastWatcherStartTime, this.watchOptions, (err, fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) => {\n      if (err) {\n        this.compiler.modifiedFiles = undefined;\n        this.compiler.removedFiles = undefined;\n        this.compiler.fileTimestamps = undefined;\n        this.compiler.contextTimestamps = undefined;\n        this.compiler.fsStartTime = undefined;\n        return this.handler(err);\n      }\n\n      this._invalidate(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles);\n\n      this._onChange();\n    }, (fileName, changeTime) => {\n      if (!this._invalidReported) {\n        this._invalidReported = true;\n        this.compiler.hooks.invalid.call(fileName, changeTime);\n      }\n\n      this._onInvalid();\n    });\n  }\n  /**\n   * @param {Callback<void>=} callback signals when the build has completed again\n   * @returns {void}\n   */\n\n\n  invalidate(callback) {\n    if (callback) {\n      this.callbacks.push(callback);\n    }\n\n    if (!this._invalidReported) {\n      this._invalidReported = true;\n      this.compiler.hooks.invalid.call(null, Date.now());\n    }\n\n    this._onChange();\n\n    this._invalidate();\n  }\n\n  _invalidate(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\n    if (this.suspended || this._isBlocked() && (this.blocked = true)) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n\n      return;\n    }\n\n    if (this.running) {\n      this._mergeWithCollected(changedFiles, removedFiles);\n\n      this.invalid = true;\n    } else {\n      this._go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles);\n    }\n  }\n\n  suspend() {\n    this.suspended = true;\n  }\n\n  resume() {\n    if (this.suspended) {\n      this.suspended = false;\n\n      this._invalidate();\n    }\n  }\n  /**\n   * @param {Callback<void>} callback signals when the watcher is closed\n   * @returns {void}\n   */\n\n\n  close(callback) {\n    if (this._closeCallbacks) {\n      if (callback) {\n        this._closeCallbacks.push(callback);\n      }\n\n      return;\n    }\n\n    const finalCallback = (err, compilation) => {\n      this.running = false;\n      this.compiler.running = false;\n      this.compiler.watching = undefined;\n      this.compiler.watchMode = false;\n      this.compiler.modifiedFiles = undefined;\n      this.compiler.removedFiles = undefined;\n      this.compiler.fileTimestamps = undefined;\n      this.compiler.contextTimestamps = undefined;\n      this.compiler.fsStartTime = undefined;\n\n      const shutdown = err => {\n        this.compiler.hooks.watchClose.call();\n        const closeCallbacks = this._closeCallbacks;\n        this._closeCallbacks = undefined;\n\n        for (const cb of closeCallbacks) cb(err);\n      };\n\n      if (compilation) {\n        const logger = compilation.getLogger(\"webpack.Watching\");\n        logger.time(\"storeBuildDependencies\");\n        this.compiler.cache.storeBuildDependencies(compilation.buildDependencies, err2 => {\n          logger.timeEnd(\"storeBuildDependencies\");\n          shutdown(err || err2);\n        });\n      } else {\n        shutdown(err);\n      }\n    };\n\n    this.closed = true;\n\n    if (this.watcher) {\n      this.watcher.close();\n      this.watcher = null;\n    }\n\n    if (this.pausedWatcher) {\n      this.pausedWatcher.close();\n      this.pausedWatcher = null;\n    }\n\n    this._closeCallbacks = [];\n\n    if (callback) {\n      this._closeCallbacks.push(callback);\n    }\n\n    if (this.running) {\n      this.invalid = true;\n      this._done = finalCallback;\n    } else {\n      finalCallback();\n    }\n  }\n\n}\n\nmodule.exports = Watching;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/Watching.js"],"names":["Stats","require","Watching","constructor","compiler","watchOptions","handler","startTime","invalid","callbacks","_closeCallbacks","undefined","closed","suspended","blocked","_isBlocked","_onChange","_onInvalid","aggregateTimeout","running","_initial","_invalidReported","_needRecords","watcher","pausedWatcher","_collectedChangedFiles","_collectedRemovedFiles","_done","bind","process","nextTick","_invalidate","_mergeWithCollected","changedFiles","removedFiles","Set","file","add","delete","_go","fileTimeInfoEntries","contextTimeInfoEntries","Date","now","lastWatcherStartTime","pause","fsStartTime","fileTimestamps","contextTimestamps","getInfo","changes","removals","getAggregatedChanges","getAggregatedRemovals","getFileTimeInfoEntries","getContextTimeInfoEntries","modifiedFiles","run","idle","cache","endIdle","err","readRecords","hooks","watchRun","callAsync","onCompiled","compilation","shouldEmit","call","logger","getLogger","time","emitAssets","timeEnd","emitRecords","needAdditionalPass","endTime","stats","done","additionalPass","compile","_getStats","handleError","cbs","failed","beginIdle","cb","storeBuildDependencies","buildDependencies","watch","fileDependencies","contextDependencies","missingDependencies","afterDone","files","dirs","missing","watchFileSystem","fileName","changeTime","invalidate","callback","push","suspend","resume","close","finalCallback","watching","watchMode","shutdown","watchClose","closeCallbacks","err2","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Stats = require(\"./Stats\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @template T\n * @callback Callback\n * @param {(Error | null)=} err\n * @param {T=} result\n */\n\nclass Watching {\n\t/**\n\t * @param {Compiler} compiler the compiler\n\t * @param {WatchOptions} watchOptions options\n\t * @param {Callback<Stats>} handler completion handler\n\t */\n\tconstructor(compiler, watchOptions, handler) {\n\t\tthis.startTime = null;\n\t\tthis.invalid = false;\n\t\tthis.handler = handler;\n\t\t/** @type {Callback<void>[]} */\n\t\tthis.callbacks = [];\n\t\t/** @type {Callback<void>[] | undefined} */\n\t\tthis._closeCallbacks = undefined;\n\t\tthis.closed = false;\n\t\tthis.suspended = false;\n\t\tthis.blocked = false;\n\t\tthis._isBlocked = () => false;\n\t\tthis._onChange = () => {};\n\t\tthis._onInvalid = () => {};\n\t\tif (typeof watchOptions === \"number\") {\n\t\t\tthis.watchOptions = {\n\t\t\t\taggregateTimeout: watchOptions\n\t\t\t};\n\t\t} else if (watchOptions && typeof watchOptions === \"object\") {\n\t\t\tthis.watchOptions = { ...watchOptions };\n\t\t} else {\n\t\t\tthis.watchOptions = {};\n\t\t}\n\t\tif (typeof this.watchOptions.aggregateTimeout !== \"number\") {\n\t\t\tthis.watchOptions.aggregateTimeout = 20;\n\t\t}\n\t\tthis.compiler = compiler;\n\t\tthis.running = false;\n\t\tthis._initial = true;\n\t\tthis._invalidReported = true;\n\t\tthis._needRecords = true;\n\t\tthis.watcher = undefined;\n\t\tthis.pausedWatcher = undefined;\n\t\t/** @type {Set<string>} */\n\t\tthis._collectedChangedFiles = undefined;\n\t\t/** @type {Set<string>} */\n\t\tthis._collectedRemovedFiles = undefined;\n\t\tthis._done = this._done.bind(this);\n\t\tprocess.nextTick(() => {\n\t\t\tif (this._initial) this._invalidate();\n\t\t});\n\t}\n\n\t/**\n\t * @param {ReadonlySet<string>} changedFiles changed files\n\t * @param {ReadonlySet<string>} removedFiles removed files\n\t */\n\t_mergeWithCollected(changedFiles, removedFiles) {\n\t\tif (!changedFiles) return;\n\t\tif (!this._collectedChangedFiles) {\n\t\t\tthis._collectedChangedFiles = new Set(changedFiles);\n\t\t\tthis._collectedRemovedFiles = new Set(removedFiles);\n\t\t} else {\n\t\t\tfor (const file of changedFiles) {\n\t\t\t\tthis._collectedChangedFiles.add(file);\n\t\t\t\tthis._collectedRemovedFiles.delete(file);\n\t\t\t}\n\t\t\tfor (const file of removedFiles) {\n\t\t\t\tthis._collectedChangedFiles.delete(file);\n\t\t\t\tthis._collectedRemovedFiles.add(file);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} fileTimeInfoEntries info for files\n\t * @param {ReadonlyMap<string, FileSystemInfoEntry | \"ignore\">=} contextTimeInfoEntries info for directories\n\t * @param {ReadonlySet<string>=} changedFiles changed files\n\t * @param {ReadonlySet<string>=} removedFiles removed files\n\t * @returns {void}\n\t */\n\t_go(fileTimeInfoEntries, contextTimeInfoEntries, changedFiles, removedFiles) {\n\t\tthis._initial = false;\n\t\tif (this.startTime === null) this.startTime = Date.now();\n\t\tthis.running = true;\n\t\tif (this.watcher) {\n\t\t\tthis.pausedWatcher = this.watcher;\n\t\t\tthis.lastWatcherStartTime = Date.now();\n\t\t\tthis.watcher.pause();\n\t\t\tthis.watcher = null;\n\t\t} else if (!this.lastWatcherStartTime) {\n\t\t\tthis.lastWatcherStartTime = Date.now();\n\t\t}\n\t\tthis.compiler.fsStartTime = Date.now();\n\t\tif (\n\t\t\tchangedFiles &&\n\t\t\tremovedFiles &&\n\t\t\tfileTimeInfoEntries &&\n\t\t\tcontextTimeInfoEntries\n\t\t) {\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\n\t\t\tthis.compiler.fileTimestamps = fileTimeInfoEntries;\n\t\t\tthis.compiler.contextTimestamps = contextTimeInfoEntries;\n\t\t} else if (this.pausedWatcher) {\n\t\t\tif (this.pausedWatcher.getInfo) {\n\t\t\t\tconst {\n\t\t\t\t\tchanges,\n\t\t\t\t\tremovals,\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries\n\t\t\t\t} = this.pausedWatcher.getInfo();\n\t\t\t\tthis._mergeWithCollected(changes, removals);\n\t\t\t\tthis.compiler.fileTimestamps = fileTimeInfoEntries;\n\t\t\t\tthis.compiler.contextTimestamps = contextTimeInfoEntries;\n\t\t\t} else {\n\t\t\t\tthis._mergeWithCollected(\n\t\t\t\t\tthis.pausedWatcher.getAggregatedChanges &&\n\t\t\t\t\t\tthis.pausedWatcher.getAggregatedChanges(),\n\t\t\t\t\tthis.pausedWatcher.getAggregatedRemovals &&\n\t\t\t\t\t\tthis.pausedWatcher.getAggregatedRemovals()\n\t\t\t\t);\n\t\t\t\tthis.compiler.fileTimestamps =\n\t\t\t\t\tthis.pausedWatcher.getFileTimeInfoEntries();\n\t\t\t\tthis.compiler.contextTimestamps =\n\t\t\t\t\tthis.pausedWatcher.getContextTimeInfoEntries();\n\t\t\t}\n\t\t}\n\t\tthis.compiler.modifiedFiles = this._collectedChangedFiles;\n\t\tthis._collectedChangedFiles = undefined;\n\t\tthis.compiler.removedFiles = this._collectedRemovedFiles;\n\t\tthis._collectedRemovedFiles = undefined;\n\n\t\tconst run = () => {\n\t\t\tif (this.compiler.idle) {\n\t\t\t\treturn this.compiler.cache.endIdle(err => {\n\t\t\t\t\tif (err) return this._done(err);\n\t\t\t\t\tthis.compiler.idle = false;\n\t\t\t\t\trun();\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._needRecords) {\n\t\t\t\treturn this.compiler.readRecords(err => {\n\t\t\t\t\tif (err) return this._done(err);\n\n\t\t\t\t\tthis._needRecords = false;\n\t\t\t\t\trun();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.invalid = false;\n\t\t\tthis._invalidReported = false;\n\t\t\tthis.compiler.hooks.watchRun.callAsync(this.compiler, err => {\n\t\t\t\tif (err) return this._done(err);\n\t\t\t\tconst onCompiled = (err, compilation) => {\n\t\t\t\t\tif (err) return this._done(err, compilation);\n\t\t\t\t\tif (this.invalid) return this._done(null, compilation);\n\n\t\t\t\t\tif (this.compiler.hooks.shouldEmit.call(compilation) === false) {\n\t\t\t\t\t\treturn this._done(null, compilation);\n\t\t\t\t\t}\n\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\tconst logger = compilation.getLogger(\"webpack.Compiler\");\n\t\t\t\t\t\tlogger.time(\"emitAssets\");\n\t\t\t\t\t\tthis.compiler.emitAssets(compilation, err => {\n\t\t\t\t\t\t\tlogger.timeEnd(\"emitAssets\");\n\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\n\t\t\t\t\t\t\tif (this.invalid) return this._done(null, compilation);\n\n\t\t\t\t\t\t\tlogger.time(\"emitRecords\");\n\t\t\t\t\t\t\tthis.compiler.emitRecords(err => {\n\t\t\t\t\t\t\t\tlogger.timeEnd(\"emitRecords\");\n\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\n\n\t\t\t\t\t\t\t\tif (compilation.hooks.needAdditionalPass.call()) {\n\t\t\t\t\t\t\t\t\tcompilation.needAdditionalPass = true;\n\n\t\t\t\t\t\t\t\t\tcompilation.startTime = this.startTime;\n\t\t\t\t\t\t\t\t\tcompilation.endTime = Date.now();\n\t\t\t\t\t\t\t\t\tlogger.time(\"done hook\");\n\t\t\t\t\t\t\t\t\tconst stats = new Stats(compilation);\n\t\t\t\t\t\t\t\t\tthis.compiler.hooks.done.callAsync(stats, err => {\n\t\t\t\t\t\t\t\t\t\tlogger.timeEnd(\"done hook\");\n\t\t\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\n\n\t\t\t\t\t\t\t\t\t\tthis.compiler.hooks.additionalPass.callAsync(err => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return this._done(err, compilation);\n\t\t\t\t\t\t\t\t\t\t\tthis.compiler.compile(onCompiled);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn this._done(null, compilation);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis.compiler.compile(onCompiled);\n\t\t\t});\n\t\t};\n\n\t\trun();\n\t}\n\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {Stats} the compilation stats\n\t */\n\t_getStats(compilation) {\n\t\tconst stats = new Stats(compilation);\n\t\treturn stats;\n\t}\n\n\t/**\n\t * @param {Error=} err an optional error\n\t * @param {Compilation=} compilation the compilation\n\t * @returns {void}\n\t */\n\t_done(err, compilation) {\n\t\tthis.running = false;\n\n\t\tconst logger = compilation && compilation.getLogger(\"webpack.Watching\");\n\n\t\tlet stats = null;\n\n\t\tconst handleError = (err, cbs) => {\n\t\t\tthis.compiler.hooks.failed.call(err);\n\t\t\tthis.compiler.cache.beginIdle();\n\t\t\tthis.compiler.idle = true;\n\t\t\tthis.handler(err, stats);\n\t\t\tif (!cbs) {\n\t\t\t\tcbs = this.callbacks;\n\t\t\t\tthis.callbacks = [];\n\t\t\t}\n\t\t\tfor (const cb of cbs) cb(err);\n\t\t};\n\n\t\tif (\n\t\t\tthis.invalid &&\n\t\t\t!this.suspended &&\n\t\t\t!this.blocked &&\n\t\t\t!(this._isBlocked() && (this.blocked = true))\n\t\t) {\n\t\t\tif (compilation) {\n\t\t\t\tlogger.time(\"storeBuildDependencies\");\n\t\t\t\tthis.compiler.cache.storeBuildDependencies(\n\t\t\t\t\tcompilation.buildDependencies,\n\t\t\t\t\terr => {\n\t\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\n\t\t\t\t\t\tif (err) return handleError(err);\n\t\t\t\t\t\tthis._go();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._go();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (compilation) {\n\t\t\tcompilation.startTime = this.startTime;\n\t\t\tcompilation.endTime = Date.now();\n\t\t\tstats = new Stats(compilation);\n\t\t}\n\t\tthis.startTime = null;\n\t\tif (err) return handleError(err);\n\n\t\tconst cbs = this.callbacks;\n\t\tthis.callbacks = [];\n\t\tlogger.time(\"done hook\");\n\t\tthis.compiler.hooks.done.callAsync(stats, err => {\n\t\t\tlogger.timeEnd(\"done hook\");\n\t\t\tif (err) return handleError(err, cbs);\n\t\t\tthis.handler(null, stats);\n\t\t\tlogger.time(\"storeBuildDependencies\");\n\t\t\tthis.compiler.cache.storeBuildDependencies(\n\t\t\t\tcompilation.buildDependencies,\n\t\t\t\terr => {\n\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\n\t\t\t\t\tif (err) return handleError(err, cbs);\n\t\t\t\t\tlogger.time(\"beginIdle\");\n\t\t\t\t\tthis.compiler.cache.beginIdle();\n\t\t\t\t\tthis.compiler.idle = true;\n\t\t\t\t\tlogger.timeEnd(\"beginIdle\");\n\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\tif (!this.closed) {\n\t\t\t\t\t\t\tthis.watch(\n\t\t\t\t\t\t\t\tcompilation.fileDependencies,\n\t\t\t\t\t\t\t\tcompilation.contextDependencies,\n\t\t\t\t\t\t\t\tcompilation.missingDependencies\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tfor (const cb of cbs) cb(null);\n\t\t\t\t\tthis.compiler.hooks.afterDone.call(stats);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * @param {Iterable<string>} files watched files\n\t * @param {Iterable<string>} dirs watched directories\n\t * @param {Iterable<string>} missing watched existence entries\n\t * @returns {void}\n\t */\n\twatch(files, dirs, missing) {\n\t\tthis.pausedWatcher = null;\n\t\tthis.watcher = this.compiler.watchFileSystem.watch(\n\t\t\tfiles,\n\t\t\tdirs,\n\t\t\tmissing,\n\t\t\tthis.lastWatcherStartTime,\n\t\t\tthis.watchOptions,\n\t\t\t(\n\t\t\t\terr,\n\t\t\t\tfileTimeInfoEntries,\n\t\t\t\tcontextTimeInfoEntries,\n\t\t\t\tchangedFiles,\n\t\t\t\tremovedFiles\n\t\t\t) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthis.compiler.modifiedFiles = undefined;\n\t\t\t\t\tthis.compiler.removedFiles = undefined;\n\t\t\t\t\tthis.compiler.fileTimestamps = undefined;\n\t\t\t\t\tthis.compiler.contextTimestamps = undefined;\n\t\t\t\t\tthis.compiler.fsStartTime = undefined;\n\t\t\t\t\treturn this.handler(err);\n\t\t\t\t}\n\t\t\t\tthis._invalidate(\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries,\n\t\t\t\t\tchangedFiles,\n\t\t\t\t\tremovedFiles\n\t\t\t\t);\n\t\t\t\tthis._onChange();\n\t\t\t},\n\t\t\t(fileName, changeTime) => {\n\t\t\t\tif (!this._invalidReported) {\n\t\t\t\t\tthis._invalidReported = true;\n\t\t\t\t\tthis.compiler.hooks.invalid.call(fileName, changeTime);\n\t\t\t\t}\n\t\t\t\tthis._onInvalid();\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Callback<void>=} callback signals when the build has completed again\n\t * @returns {void}\n\t */\n\tinvalidate(callback) {\n\t\tif (callback) {\n\t\t\tthis.callbacks.push(callback);\n\t\t}\n\t\tif (!this._invalidReported) {\n\t\t\tthis._invalidReported = true;\n\t\t\tthis.compiler.hooks.invalid.call(null, Date.now());\n\t\t}\n\t\tthis._onChange();\n\t\tthis._invalidate();\n\t}\n\n\t_invalidate(\n\t\tfileTimeInfoEntries,\n\t\tcontextTimeInfoEntries,\n\t\tchangedFiles,\n\t\tremovedFiles\n\t) {\n\t\tif (this.suspended || (this._isBlocked() && (this.blocked = true))) {\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.running) {\n\t\t\tthis._mergeWithCollected(changedFiles, removedFiles);\n\t\t\tthis.invalid = true;\n\t\t} else {\n\t\t\tthis._go(\n\t\t\t\tfileTimeInfoEntries,\n\t\t\t\tcontextTimeInfoEntries,\n\t\t\t\tchangedFiles,\n\t\t\t\tremovedFiles\n\t\t\t);\n\t\t}\n\t}\n\n\tsuspend() {\n\t\tthis.suspended = true;\n\t}\n\n\tresume() {\n\t\tif (this.suspended) {\n\t\t\tthis.suspended = false;\n\t\t\tthis._invalidate();\n\t\t}\n\t}\n\n\t/**\n\t * @param {Callback<void>} callback signals when the watcher is closed\n\t * @returns {void}\n\t */\n\tclose(callback) {\n\t\tif (this._closeCallbacks) {\n\t\t\tif (callback) {\n\t\t\t\tthis._closeCallbacks.push(callback);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tconst finalCallback = (err, compilation) => {\n\t\t\tthis.running = false;\n\t\t\tthis.compiler.running = false;\n\t\t\tthis.compiler.watching = undefined;\n\t\t\tthis.compiler.watchMode = false;\n\t\t\tthis.compiler.modifiedFiles = undefined;\n\t\t\tthis.compiler.removedFiles = undefined;\n\t\t\tthis.compiler.fileTimestamps = undefined;\n\t\t\tthis.compiler.contextTimestamps = undefined;\n\t\t\tthis.compiler.fsStartTime = undefined;\n\t\t\tconst shutdown = err => {\n\t\t\t\tthis.compiler.hooks.watchClose.call();\n\t\t\t\tconst closeCallbacks = this._closeCallbacks;\n\t\t\t\tthis._closeCallbacks = undefined;\n\t\t\t\tfor (const cb of closeCallbacks) cb(err);\n\t\t\t};\n\t\t\tif (compilation) {\n\t\t\t\tconst logger = compilation.getLogger(\"webpack.Watching\");\n\t\t\t\tlogger.time(\"storeBuildDependencies\");\n\t\t\t\tthis.compiler.cache.storeBuildDependencies(\n\t\t\t\t\tcompilation.buildDependencies,\n\t\t\t\t\terr2 => {\n\t\t\t\t\t\tlogger.timeEnd(\"storeBuildDependencies\");\n\t\t\t\t\t\tshutdown(err || err2);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tshutdown(err);\n\t\t\t}\n\t\t};\n\n\t\tthis.closed = true;\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tif (this.pausedWatcher) {\n\t\t\tthis.pausedWatcher.close();\n\t\t\tthis.pausedWatcher = null;\n\t\t}\n\t\tthis._closeCallbacks = [];\n\t\tif (callback) {\n\t\t\tthis._closeCallbacks.push(callback);\n\t\t}\n\t\tif (this.running) {\n\t\t\tthis.invalid = true;\n\t\t\tthis._done = finalCallback;\n\t\t} else {\n\t\t\tfinalCallback();\n\t\t}\n\t}\n}\n\nmodule.exports = Watching;\n"]},"metadata":{},"sourceType":"script"}