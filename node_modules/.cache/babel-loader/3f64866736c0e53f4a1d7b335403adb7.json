{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nclass RuntimeIdRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"runtimeId\");\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      chunkGraph,\n      chunk\n    } = this;\n    const runtime = chunk.runtime;\n    if (typeof runtime !== \"string\") throw new Error(\"RuntimeIdRuntimeModule must be in a single runtime\");\n    const id = chunkGraph.getRuntimeId(runtime);\n    return `${RuntimeGlobals.runtimeId} = ${JSON.stringify(id)};`;\n  }\n\n}\n\nmodule.exports = RuntimeIdRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/runtime/RuntimeIdRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","RuntimeIdRuntimeModule","constructor","generate","chunkGraph","chunk","runtime","Error","id","getRuntimeId","runtimeId","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA7B;;AAEA,MAAME,sBAAN,SAAqCD,aAArC,CAAmD;AAClDE,EAAAA,WAAW,GAAG;AACb,UAAM,WAAN;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAwB,IAA9B;AACA,UAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EACC,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD,UAAMC,EAAE,GAAGJ,UAAU,CAACK,YAAX,CAAwBH,OAAxB,CAAX;AACA,WAAQ,GAAER,cAAc,CAACY,SAAU,MAAKC,IAAI,CAACC,SAAL,CAAeJ,EAAf,CAAmB,GAA3D;AACA;;AAfiD;;AAkBnDK,MAAM,CAACC,OAAP,GAAiBb,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nclass RuntimeIdRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"runtimeId\");\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk } = this;\n\t\tconst runtime = chunk.runtime;\n\t\tif (typeof runtime !== \"string\")\n\t\t\tthrow new Error(\"RuntimeIdRuntimeModule must be in a single runtime\");\n\t\tconst id = chunkGraph.getRuntimeId(runtime);\n\t\treturn `${RuntimeGlobals.runtimeId} = ${JSON.stringify(id)};`;\n\t}\n}\n\nmodule.exports = RuntimeIdRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}