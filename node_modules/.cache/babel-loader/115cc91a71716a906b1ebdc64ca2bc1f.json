{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Naoyuki Kanezawa @nkzawa\n*/\n\"use strict\";\n\nconst EntryOptionPlugin = require(\"./EntryOptionPlugin\");\n\nconst EntryPlugin = require(\"./EntryPlugin\");\n\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDynamicNormalized} EntryDynamic */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryStaticNormalized} EntryStatic */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nclass DynamicEntryPlugin {\n  /**\n   * @param {string} context the context path\n   * @param {EntryDynamic} entry the entry value\n   */\n  constructor(context, entry) {\n    this.context = context;\n    this.entry = entry;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DynamicEntryPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(EntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapPromise(\"DynamicEntryPlugin\", (compilation, callback) => Promise.resolve(this.entry()).then(entry => {\n      const promises = [];\n\n      for (const name of Object.keys(entry)) {\n        const desc = entry[name];\n        const options = EntryOptionPlugin.entryDescriptionToOptions(compiler, name, desc);\n\n        for (const entry of desc.import) {\n          promises.push(new Promise((resolve, reject) => {\n            compilation.addEntry(this.context, EntryPlugin.createDependency(entry, options), options, err => {\n              if (err) return reject(err);\n              resolve();\n            });\n          }));\n        }\n      }\n\n      return Promise.all(promises);\n    }).then(x => {}));\n  }\n\n}\n\nmodule.exports = DynamicEntryPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/DynamicEntryPlugin.js"],"names":["EntryOptionPlugin","require","EntryPlugin","EntryDependency","DynamicEntryPlugin","constructor","context","entry","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapPromise","callback","Promise","resolve","then","promises","name","Object","keys","desc","options","entryDescriptionToOptions","import","push","reject","addEntry","createDependency","err","all","x","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,gCAAD,CAA/B;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAMG,kBAAN,CAAyB;AACxB;AACD;AACA;AACA;AACCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC3B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,oBADD,EAEC,CAACD,WAAD,WAA0C;AAAA,UAA5B;AAAEE,QAAAA;AAAF,OAA4B;AACzCF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCZ,eADD,EAECU,mBAFD;AAIA,KAPF;AAUAJ,IAAAA,QAAQ,CAACC,KAAT,CAAeM,IAAf,CAAoBC,UAApB,CACC,oBADD,EAEC,CAACN,WAAD,EAAcO,QAAd,KACCC,OAAO,CAACC,OAAR,CAAgB,KAAKb,KAAL,EAAhB,EACEc,IADF,CACOd,KAAK,IAAI;AACd,YAAMe,QAAQ,GAAG,EAAjB;;AACA,WAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,IAAP,CAAYlB,KAAZ,CAAnB,EAAuC;AACtC,cAAMmB,IAAI,GAAGnB,KAAK,CAACgB,IAAD,CAAlB;AACA,cAAMI,OAAO,GAAG3B,iBAAiB,CAAC4B,yBAAlB,CACfnB,QADe,EAEfc,IAFe,EAGfG,IAHe,CAAhB;;AAKA,aAAK,MAAMnB,KAAX,IAAoBmB,IAAI,CAACG,MAAzB,EAAiC;AAChCP,UAAAA,QAAQ,CAACQ,IAAT,CACC,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUW,MAAV,KAAqB;AAChCpB,YAAAA,WAAW,CAACqB,QAAZ,CACC,KAAK1B,OADN,EAECJ,WAAW,CAAC+B,gBAAZ,CAA6B1B,KAA7B,EAAoCoB,OAApC,CAFD,EAGCA,OAHD,EAICO,GAAG,IAAI;AACN,kBAAIA,GAAJ,EAAS,OAAOH,MAAM,CAACG,GAAD,CAAb;AACTd,cAAAA,OAAO;AACP,aAPF;AASA,WAVD,CADD;AAaA;AACD;;AACD,aAAOD,OAAO,CAACgB,GAAR,CAAYb,QAAZ,CAAP;AACA,KA3BF,EA4BED,IA5BF,CA4BOe,CAAC,IAAI,CAAE,CA5Bd,CAHF;AAiCA;;AA3DuB;;AA8DzBC,MAAM,CAACC,OAAP,GAAiBlC,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Naoyuki Kanezawa @nkzawa\n*/\n\n\"use strict\";\n\nconst EntryOptionPlugin = require(\"./EntryOptionPlugin\");\nconst EntryPlugin = require(\"./EntryPlugin\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDynamicNormalized} EntryDynamic */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryStaticNormalized} EntryStatic */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass DynamicEntryPlugin {\n\t/**\n\t * @param {string} context the context path\n\t * @param {EntryDynamic} entry the entry value\n\t */\n\tconstructor(context, entry) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapPromise(\n\t\t\t\"DynamicEntryPlugin\",\n\t\t\t(compilation, callback) =>\n\t\t\t\tPromise.resolve(this.entry())\n\t\t\t\t\t.then(entry => {\n\t\t\t\t\t\tconst promises = [];\n\t\t\t\t\t\tfor (const name of Object.keys(entry)) {\n\t\t\t\t\t\t\tconst desc = entry[name];\n\t\t\t\t\t\t\tconst options = EntryOptionPlugin.entryDescriptionToOptions(\n\t\t\t\t\t\t\t\tcompiler,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tdesc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const entry of desc.import) {\n\t\t\t\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\t\t\tcompilation.addEntry(\n\t\t\t\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\t\t\t\tEntryPlugin.createDependency(entry, options),\n\t\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Promise.all(promises);\n\t\t\t\t\t})\n\t\t\t\t\t.then(x => {})\n\t\t);\n\t}\n}\n\nmodule.exports = DynamicEntryPlugin;\n"]},"metadata":{},"sourceType":"script"}