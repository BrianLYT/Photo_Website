{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\n\nconst InnerGraph = require(\"../optimize/InnerGraph\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\n\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\n\nconst HarmonyExports = require(\"./HarmonyExports\");\n\nconst {\n  ExportPresenceModes\n} = require(\"./HarmonyImportDependency\");\n\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n\n/** @typedef {import(\"estree\").Identifier} Identifier */\n\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\n\nfunction getAssertions(node) {\n  // TODO remove cast when @types/estree has been updated to import assertions\n  const assertions =\n  /** @type {{ assertions?: ImportAttributeNode[] }} */\n  node.assertions;\n\n  if (assertions === undefined) {\n    return undefined;\n  }\n\n  const result = {};\n\n  for (const assertion of assertions) {\n    const key = assertion.key.type === \"Identifier\" ? assertion.key.name : assertion.key.value;\n    result[key] = assertion.value.value;\n  }\n\n  return result;\n}\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options options\n   */\n  constructor(options) {\n    this.exportPresenceMode = options.importExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.importExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n    this.strictThisContextOnImports = options.strictThisContextOnImports;\n  }\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @returns {void}\n   */\n\n\n  apply(parser) {\n    const {\n      exportPresenceMode\n    } = this;\n    parser.hooks.isPure.for(\"Identifier\").tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      const expr =\n      /** @type {Identifier} */\n      expression;\n\n      if (parser.isVariableDefined(expr.name) || parser.getTagData(expr.name, harmonySpecifierTag)) {\n        return true;\n      }\n    });\n    parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(parser.isAsiPosition(statement.range[0]) ? \";\" : \"\", statement.range);\n      clearDep.loc = statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(statement.range[1]);\n      const assertions = getAssertions(statement);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.lastHarmonyImportOrder, assertions);\n      sideEffectDep.loc = statement.loc;\n      parser.state.module.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source, id, name) => {\n      const ids = id === null ? [] : [id];\n      parser.tagVariable(name, harmonySpecifierTag, {\n        name,\n        source,\n        ids,\n        sourceOrder: parser.state.lastHarmonyImportOrder,\n        assertions: getAssertions(statement)\n      });\n      return true;\n    });\n    parser.hooks.expression.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n      const settings =\n      /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n      dep.shorthand = parser.scope.inShorthand;\n      dep.directImport = true;\n      dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n      dep.loc = expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expressionMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expr, members) => {\n      const settings =\n      /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const ids = settings.ids.concat(members);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n      dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n      dep.loc = expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.callMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expr, members) => {\n      const {\n        arguments: args,\n        callee\n      } = expr;\n      const settings =\n      /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const ids = settings.ids.concat(members);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, callee.range, exportPresenceMode, settings.assertions);\n      dep.directImport = members.length === 0;\n      dep.call = true;\n      dep.asiSafe = !parser.isAsiPosition(callee.range[0]); // only in case when we strictly follow the spec we need a special case here\n\n      dep.namespaceObjectAsContext = members.length > 0 && this.strictThisContextOnImports;\n      dep.loc = callee.loc;\n      parser.state.module.addDependency(dep);\n      if (args) parser.walkExpressions(args);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    const {\n      hotAcceptCallback,\n      hotAcceptWithoutCallback\n    } = HotModuleReplacementPlugin.getParserHooks(parser);\n    hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n    hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n  }\n\n};\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js"],"names":["HotModuleReplacementPlugin","require","InnerGraph","ConstDependency","HarmonyAcceptDependency","HarmonyAcceptImportDependency","HarmonyExports","ExportPresenceModes","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","harmonySpecifierTag","Symbol","getAssertions","node","assertions","undefined","result","assertion","key","type","name","value","module","exports","HarmonyImportDependencyParserPlugin","constructor","options","exportPresenceMode","importExportsPresence","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","strictThisContextOnImports","apply","parser","hooks","isPure","for","tap","expression","expr","isVariableDefined","getTagData","import","statement","source","state","lastHarmonyImportOrder","clearDep","isAsiPosition","range","loc","addPresentationalDependency","unsetAsiPosition","sideEffectDep","addDependency","importSpecifier","id","ids","tagVariable","sourceOrder","settings","currentTagData","dep","shorthand","scope","inShorthand","directImport","asiSafe","onUsage","e","usedByExports","expressionMemberChain","members","concat","callMemberChain","arguments","args","callee","length","call","namespaceObjectAsContext","walkExpressions","hotAcceptCallback","hotAcceptWithoutCallback","getParserHooks","requests","isEnabled","dependencies","map","request"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\nfunction getAssertions(node) {\n\t// TODO remove cast when @types/estree has been updated to import assertions\n\tconst assertions = /** @type {{ assertions?: ImportAttributeNode[] }} */ (\n\t\tnode\n\t).assertions;\n\tif (assertions === undefined) {\n\t\treturn undefined;\n\t}\n\tconst result = {};\n\tfor (const assertion of assertions) {\n\t\tconst key =\n\t\t\tassertion.key.type === \"Identifier\"\n\t\t\t\t? assertion.key.name\n\t\t\t\t: assertion.key.value;\n\t\tresult[key] = assertion.value.value;\n\t}\n\treturn result;\n}\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options options\n\t */\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.importExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.importExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t: options.strictExportPresence\n\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t: ExportPresenceModes.AUTO;\n\t\tthis.strictThisContextOnImports = options.strictThisContextOnImports;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @returns {void}\n\t */\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\t\tparser.hooks.isPure\n\t\t\t.for(\"Identifier\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {Identifier} */ (expression);\n\t\t\t\tif (\n\t\t\t\t\tparser.isVariableDefined(expr.name) ||\n\t\t\t\t\tparser.getTagData(expr.name, harmonySpecifierTag)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(statement.range[0]) ? \";\" : \"\",\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(statement.range[1]);\n\t\t\t\tconst assertions = getAssertions(statement);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tconst ids = id === null ? [] : [id];\n\t\t\t\tparser.tagVariable(name, harmonySpecifierTag, {\n\t\t\t\t\tname,\n\t\t\t\t\tsource,\n\t\t\t\t\tids,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions: getAssertions(statement)\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpr.range,\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions\n\t\t\t\t);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", (expr, members) => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst ids = settings.ids.concat(members);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpr.range,\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions\n\t\t\t\t);\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", (expr, members) => {\n\t\t\t\tconst { arguments: args, callee } = expr;\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst ids = settings.ids.concat(members);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\tcallee.range,\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions\n\t\t\t\t);\n\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\tdep.call = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(callee.range[0]);\n\t\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\t\tdep.namespaceObjectAsContext =\n\t\t\t\t\tmembers.length > 0 && this.strictThisContextOnImports;\n\t\t\t\tdep.loc = callee.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tconst { hotAcceptCallback, hotAcceptWithoutCallback } =\n\t\t\tHotModuleReplacementPlugin.getParserHooks(parser);\n\t\thotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\thotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;\n"]},"metadata":{},"sourceType":"script"}