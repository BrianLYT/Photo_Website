{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n\nclass ModuleDependencyTemplateAsRequireId extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {ModuleDependency} */\n    dependency;\n    if (!dep.range) return;\n    const content = runtimeTemplate.moduleExports({\n      module: moduleGraph.getModule(dep),\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak,\n      runtimeRequirements\n    });\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n\n}\n\nmodule.exports = ModuleDependencyTemplateAsRequireId;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ModuleDependencyTemplateAsRequireId.js"],"names":["ModuleDependency","require","ModuleDependencyTemplateAsRequireId","Template","apply","dependency","source","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","dep","range","content","moduleExports","module","getModule","request","weak","replace","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;;AAEA,MAAMC,mCAAN,SAAkDF,gBAAgB,CAACG,QAAnE,CAA4E;AAC3E;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CACJC,UADI,EAEJC,MAFI,QAIH;AAAA,QADD;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA,UAAhC;AAA4CC,MAAAA;AAA5C,KACC;AACD,UAAMC,GAAG;AAAG;AAAiCN,IAAAA,UAA7C;AACA,QAAI,CAACM,GAAG,CAACC,KAAT,EAAgB;AAChB,UAAMC,OAAO,GAAGN,eAAe,CAACO,aAAhB,CAA8B;AAC7CC,MAAAA,MAAM,EAAEP,WAAW,CAACQ,SAAZ,CAAsBL,GAAtB,CADqC;AAE7CF,MAAAA,UAF6C;AAG7CQ,MAAAA,OAAO,EAAEN,GAAG,CAACM,OAHgC;AAI7CC,MAAAA,IAAI,EAAEP,GAAG,CAACO,IAJmC;AAK7CR,MAAAA;AAL6C,KAA9B,CAAhB;AAOAJ,IAAAA,MAAM,CAACa,OAAP,CAAeR,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAf,EAA6BD,GAAG,CAACC,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CC,OAA/C;AACA;;AAtB0E;;AAwB5EE,MAAM,CAACK,OAAP,GAAiBlB,mCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass ModuleDependencyTemplateAsRequireId extends ModuleDependency.Template {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtimeTemplate, moduleGraph, chunkGraph, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {ModuleDependency} */ (dependency);\n\t\tif (!dep.range) return;\n\t\tconst content = runtimeTemplate.moduleExports({\n\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\tchunkGraph,\n\t\t\trequest: dep.request,\n\t\t\tweak: dep.weak,\n\t\t\truntimeRequirements\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\nmodule.exports = ModuleDependencyTemplateAsRequireId;\n"]},"metadata":{},"sourceType":"script"}