{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst PATH_QUERY_FRAGMENT_REGEXP = /^(#?(?:\\0.|[^?#\\0])*)(\\?(?:\\0.|[^#\\0])*)?(#.*)?$/;\n/**\n * @param {string} identifier identifier\n * @returns {[string, string, string]|null} parsed identifier\n */\n\nfunction parseIdentifier(identifier) {\n  const match = PATH_QUERY_FRAGMENT_REGEXP.exec(identifier);\n  if (!match) return null;\n  return [match[1].replace(/\\0(.)/g, \"$1\"), match[2] ? match[2].replace(/\\0(.)/g, \"$1\") : \"\", match[3] || \"\"];\n}\n\nmodule.exports.parseIdentifier = parseIdentifier;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/enhanced-resolve/lib/util/identifier.js"],"names":["PATH_QUERY_FRAGMENT_REGEXP","parseIdentifier","identifier","match","exec","replace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,0BAA0B,GAAG,kDAAnC;AAEA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AACpC,QAAMC,KAAK,GAAGH,0BAA0B,CAACI,IAA3B,CAAgCF,UAAhC,CAAd;AAEA,MAAI,CAACC,KAAL,EAAY,OAAO,IAAP;AAEZ,SAAO,CACNA,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,QAAjB,EAA2B,IAA3B,CADM,EAENF,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,QAAjB,EAA2B,IAA3B,CAAX,GAA8C,EAFxC,EAGNF,KAAK,CAAC,CAAD,CAAL,IAAY,EAHN,CAAP;AAKA;;AAEDG,MAAM,CAACC,OAAP,CAAeN,eAAf,GAAiCA,eAAjC","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst PATH_QUERY_FRAGMENT_REGEXP = /^(#?(?:\\0.|[^?#\\0])*)(\\?(?:\\0.|[^#\\0])*)?(#.*)?$/;\n\n/**\n * @param {string} identifier identifier\n * @returns {[string, string, string]|null} parsed identifier\n */\nfunction parseIdentifier(identifier) {\n\tconst match = PATH_QUERY_FRAGMENT_REGEXP.exec(identifier);\n\n\tif (!match) return null;\n\n\treturn [\n\t\tmatch[1].replace(/\\0(.)/g, \"$1\"),\n\t\tmatch[2] ? match[2].replace(/\\0(.)/g, \"$1\") : \"\",\n\t\tmatch[3] || \"\"\n\t];\n}\n\nmodule.exports.parseIdentifier = parseIdentifier;\n"]},"metadata":{},"sourceType":"script"}