{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  WebpackError\n} = require(\"..\");\n\nconst {\n  getUsedModuleIdsAndModules\n} = require(\"./IdHelpers\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Module\")} Module */\n\n\nconst plugin = \"SyncModuleIdsPlugin\";\n\nclass SyncModuleIdsPlugin {\n  /**\n   * @param {Object} options options\n   * @param {string} options.path path to file\n   * @param {string=} options.context context for module names\n   * @param {function(Module): boolean} options.test selector for modules\n   * @param {\"read\" | \"create\" | \"merge\" | \"update\"=} options.mode operation mode (defaults to merge)\n   */\n  constructor(_ref) {\n    let {\n      path,\n      context,\n      test,\n      mode\n    } = _ref;\n    this._path = path;\n    this._context = context;\n\n    this._test = test || (() => true);\n\n    const readAndWrite = !mode || mode === \"merge\" || mode === \"update\";\n    this._read = readAndWrite || mode === \"read\";\n    this._write = readAndWrite || mode === \"create\";\n    this._prune = mode === \"update\";\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    /** @type {Map<string, string | number>} */\n    let data;\n    let dataChanged = false;\n\n    if (this._read) {\n      compiler.hooks.readRecords.tapAsync(plugin, callback => {\n        const fs = compiler.intermediateFileSystem;\n        fs.readFile(this._path, (err, buffer) => {\n          if (err) {\n            if (err.code !== \"ENOENT\") {\n              return callback(err);\n            }\n\n            return callback();\n          }\n\n          const json = JSON.parse(buffer.toString());\n          data = new Map();\n\n          for (const key of Object.keys(json)) {\n            data.set(key, json[key]);\n          }\n\n          dataChanged = false;\n          return callback();\n        });\n      });\n    }\n\n    if (this._write) {\n      compiler.hooks.emitRecords.tapAsync(plugin, callback => {\n        if (!data || !dataChanged) return callback();\n        const json = {};\n        const sorted = Array.from(data).sort((_ref2, _ref3) => {\n          let [a] = _ref2;\n          let [b] = _ref3;\n          return a < b ? -1 : 1;\n        });\n\n        for (const [key, value] of sorted) {\n          json[key] = value;\n        }\n\n        const fs = compiler.intermediateFileSystem;\n        fs.writeFile(this._path, JSON.stringify(json), callback);\n      });\n    }\n\n    compiler.hooks.thisCompilation.tap(plugin, compilation => {\n      const associatedObjectForCache = compiler.root;\n      const context = this._context || compiler.context;\n\n      if (this._read) {\n        compilation.hooks.reviveModules.tap(plugin, (_1, _2) => {\n          if (!data) return;\n          const {\n            chunkGraph\n          } = compilation;\n          const [usedIds, modules] = getUsedModuleIdsAndModules(compilation, this._test);\n\n          for (const module of modules) {\n            const name = module.libIdent({\n              context,\n              associatedObjectForCache\n            });\n            if (!name) continue;\n            const id = data.get(name);\n            const idAsString = `${id}`;\n\n            if (usedIds.has(idAsString)) {\n              const err = new WebpackError(`SyncModuleIdsPlugin: Unable to restore id '${id}' from '${this._path}' as it's already used.`);\n              err.module = module;\n              compilation.errors.push(err);\n            }\n\n            chunkGraph.setModuleId(module, id);\n            usedIds.add(idAsString);\n          }\n        });\n      }\n\n      if (this._write) {\n        compilation.hooks.recordModules.tap(plugin, modules => {\n          const {\n            chunkGraph\n          } = compilation;\n          let oldData = data;\n\n          if (!oldData) {\n            oldData = data = new Map();\n          } else if (this._prune) {\n            data = new Map();\n          }\n\n          for (const module of modules) {\n            if (this._test(module)) {\n              const name = module.libIdent({\n                context,\n                associatedObjectForCache\n              });\n              if (!name) continue;\n              const id = chunkGraph.getModuleId(module);\n              if (id === null) continue;\n              const oldId = oldData.get(name);\n\n              if (oldId !== id) {\n                dataChanged = true;\n              } else if (data === oldData) {\n                continue;\n              }\n\n              data.set(name, id);\n            }\n          }\n\n          if (data.size !== oldData.size) dataChanged = true;\n        });\n      }\n    });\n  }\n\n}\n\nmodule.exports = SyncModuleIdsPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/ids/SyncModuleIdsPlugin.js"],"names":["WebpackError","require","getUsedModuleIdsAndModules","plugin","SyncModuleIdsPlugin","constructor","path","context","test","mode","_path","_context","_test","readAndWrite","_read","_write","_prune","apply","compiler","data","dataChanged","hooks","readRecords","tapAsync","callback","fs","intermediateFileSystem","readFile","err","buffer","code","json","JSON","parse","toString","Map","key","Object","keys","set","emitRecords","sorted","Array","from","sort","a","b","value","writeFile","stringify","thisCompilation","tap","compilation","associatedObjectForCache","root","reviveModules","_1","_2","chunkGraph","usedIds","modules","module","name","libIdent","id","get","idAsString","has","errors","push","setModuleId","add","recordModules","oldData","getModuleId","oldId","size","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { WebpackError } = require(\"..\");\nconst { getUsedModuleIdsAndModules } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst plugin = \"SyncModuleIdsPlugin\";\n\nclass SyncModuleIdsPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.path path to file\n\t * @param {string=} options.context context for module names\n\t * @param {function(Module): boolean} options.test selector for modules\n\t * @param {\"read\" | \"create\" | \"merge\" | \"update\"=} options.mode operation mode (defaults to merge)\n\t */\n\tconstructor({ path, context, test, mode }) {\n\t\tthis._path = path;\n\t\tthis._context = context;\n\t\tthis._test = test || (() => true);\n\t\tconst readAndWrite = !mode || mode === \"merge\" || mode === \"update\";\n\t\tthis._read = readAndWrite || mode === \"read\";\n\t\tthis._write = readAndWrite || mode === \"create\";\n\t\tthis._prune = mode === \"update\";\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {Map<string, string | number>} */\n\t\tlet data;\n\t\tlet dataChanged = false;\n\t\tif (this._read) {\n\t\t\tcompiler.hooks.readRecords.tapAsync(plugin, callback => {\n\t\t\t\tconst fs = compiler.intermediateFileSystem;\n\t\t\t\tfs.readFile(this._path, (err, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (err.code !== \"ENOENT\") {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tconst json = JSON.parse(buffer.toString());\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tfor (const key of Object.keys(json)) {\n\t\t\t\t\t\tdata.set(key, json[key]);\n\t\t\t\t\t}\n\t\t\t\t\tdataChanged = false;\n\t\t\t\t\treturn callback();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (this._write) {\n\t\t\tcompiler.hooks.emitRecords.tapAsync(plugin, callback => {\n\t\t\t\tif (!data || !dataChanged) return callback();\n\t\t\t\tconst json = {};\n\t\t\t\tconst sorted = Array.from(data).sort(([a], [b]) => (a < b ? -1 : 1));\n\t\t\t\tfor (const [key, value] of sorted) {\n\t\t\t\t\tjson[key] = value;\n\t\t\t\t}\n\t\t\t\tconst fs = compiler.intermediateFileSystem;\n\t\t\t\tfs.writeFile(this._path, JSON.stringify(json), callback);\n\t\t\t});\n\t\t}\n\t\tcompiler.hooks.thisCompilation.tap(plugin, compilation => {\n\t\t\tconst associatedObjectForCache = compiler.root;\n\t\t\tconst context = this._context || compiler.context;\n\t\t\tif (this._read) {\n\t\t\t\tcompilation.hooks.reviveModules.tap(plugin, (_1, _2) => {\n\t\t\t\t\tif (!data) return;\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tconst [usedIds, modules] = getUsedModuleIdsAndModules(\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tthis._test\n\t\t\t\t\t);\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tconst name = module.libIdent({\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!name) continue;\n\t\t\t\t\t\tconst id = data.get(name);\n\t\t\t\t\t\tconst idAsString = `${id}`;\n\t\t\t\t\t\tif (usedIds.has(idAsString)) {\n\t\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t\t`SyncModuleIdsPlugin: Unable to restore id '${id}' from '${this._path}' as it's already used.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terr.module = module;\n\t\t\t\t\t\t\tcompilation.errors.push(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunkGraph.setModuleId(module, id);\n\t\t\t\t\t\tusedIds.add(idAsString);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._write) {\n\t\t\t\tcompilation.hooks.recordModules.tap(plugin, modules => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tlet oldData = data;\n\t\t\t\t\tif (!oldData) {\n\t\t\t\t\t\toldData = data = new Map();\n\t\t\t\t\t} else if (this._prune) {\n\t\t\t\t\t\tdata = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (this._test(module)) {\n\t\t\t\t\t\t\tconst name = module.libIdent({\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!name) continue;\n\t\t\t\t\t\t\tconst id = chunkGraph.getModuleId(module);\n\t\t\t\t\t\t\tif (id === null) continue;\n\t\t\t\t\t\t\tconst oldId = oldData.get(name);\n\t\t\t\t\t\t\tif (oldId !== id) {\n\t\t\t\t\t\t\t\tdataChanged = true;\n\t\t\t\t\t\t\t} else if (data === oldData) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.set(name, id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (data.size !== oldData.size) dataChanged = true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = SyncModuleIdsPlugin;\n"]},"metadata":{},"sourceType":"script"}