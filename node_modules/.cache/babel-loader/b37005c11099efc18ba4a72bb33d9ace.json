{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  cleanUp\n} = require(\"./ErrorHelpers\");\n\nconst WebpackError = require(\"./WebpackError\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n\nclass ModuleError extends WebpackError {\n  /**\n   * @param {Error} err error thrown\n   * @param {{from?: string|null}} info additional info\n   */\n  constructor(err) {\n    let {\n      from = null\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let message = \"Module Error\";\n\n    if (from) {\n      message += ` (from ${from}):\\n`;\n    } else {\n      message += \": \";\n    }\n\n    if (err && typeof err === \"object\" && err.message) {\n      message += err.message;\n    } else if (err) {\n      message += err;\n    }\n\n    super(message);\n    this.name = \"ModuleError\";\n    this.error = err;\n    this.details = err && typeof err === \"object\" && err.stack ? cleanUp(err.stack, this.message) : undefined;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.error);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.error = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ModuleError, \"webpack/lib/ModuleError\");\nmodule.exports = ModuleError;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/ModuleError.js"],"names":["cleanUp","require","WebpackError","makeSerializable","ModuleError","constructor","err","from","message","name","error","details","stack","undefined","serialize","context","write","deserialize","read","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,yBAAD,CAAhC;;AAEA,MAAMG,WAAN,SAA0BF,YAA1B,CAAuC;AACtC;AACD;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,GAAD,EAA4B;AAAA,QAAtB;AAAEC,MAAAA,IAAI,GAAG;AAAT,KAAsB,uEAAJ,EAAI;AACtC,QAAIC,OAAO,GAAG,cAAd;;AAEA,QAAID,IAAJ,EAAU;AACTC,MAAAA,OAAO,IAAK,UAASD,IAAK,MAA1B;AACA,KAFD,MAEO;AACNC,MAAAA,OAAO,IAAI,IAAX;AACA;;AAED,QAAIF,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,IAAkCA,GAAG,CAACE,OAA1C,EAAmD;AAClDA,MAAAA,OAAO,IAAIF,GAAG,CAACE,OAAf;AACA,KAFD,MAEO,IAAIF,GAAJ,EAAS;AACfE,MAAAA,OAAO,IAAIF,GAAX;AACA;;AAED,UAAME,OAAN;AAEA,SAAKC,IAAL,GAAY,aAAZ;AACA,SAAKC,KAAL,GAAaJ,GAAb;AACA,SAAKK,OAAL,GACCL,GAAG,IAAI,OAAOA,GAAP,KAAe,QAAtB,IAAkCA,GAAG,CAACM,KAAtC,GACGZ,OAAO,CAACM,GAAG,CAACM,KAAL,EAAY,KAAKJ,OAAjB,CADV,GAEGK,SAHJ;AAIA;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AAEAC,IAAAA,KAAK,CAAC,KAAKN,KAAN,CAAL;AAEA,UAAMI,SAAN,CAAgBC,OAAhB;AACA;;AAEDE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AAEA,SAAKL,KAAL,GAAaQ,IAAI,EAAjB;AAEA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AA5CqC;;AA+CvCZ,gBAAgB,CAACC,WAAD,EAAc,yBAAd,CAAhB;AAEAe,MAAM,CAACC,OAAP,GAAiBhB,WAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { cleanUp } = require(\"./ErrorHelpers\");\nconst WebpackError = require(\"./WebpackError\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\nclass ModuleError extends WebpackError {\n\t/**\n\t * @param {Error} err error thrown\n\t * @param {{from?: string|null}} info additional info\n\t */\n\tconstructor(err, { from = null } = {}) {\n\t\tlet message = \"Module Error\";\n\n\t\tif (from) {\n\t\t\tmessage += ` (from ${from}):\\n`;\n\t\t} else {\n\t\t\tmessage += \": \";\n\t\t}\n\n\t\tif (err && typeof err === \"object\" && err.message) {\n\t\t\tmessage += err.message;\n\t\t} else if (err) {\n\t\t\tmessage += err;\n\t\t}\n\n\t\tsuper(message);\n\n\t\tthis.name = \"ModuleError\";\n\t\tthis.error = err;\n\t\tthis.details =\n\t\t\terr && typeof err === \"object\" && err.stack\n\t\t\t\t? cleanUp(err.stack, this.message)\n\t\t\t\t: undefined;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.error);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.error = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(ModuleError, \"webpack/lib/ModuleError\");\n\nmodule.exports = ModuleError;\n"]},"metadata":{},"sourceType":"script"}