{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInRootPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string} path path\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, path, target) {\n    this.source = source;\n    this.path = path;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ModulesInRootPlugin\", (request, resolveContext, callback) => {\n      const obj = { ...request,\n        path: this.path,\n        request: \"./\" + request.request,\n        module: false\n      };\n      resolver.doResolve(target, obj, \"looking for modules in \" + this.path, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js"],"names":["module","exports","ModulesInRootPlugin","constructor","source","path","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","doResolve"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,mBAAN,CAA0B;AAC1C;AACD;AACA;AACA;AACA;AACCC,EAAAA,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuB;AACjC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;AACAE,IAAAA,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAEW,qBAFX,EAEkC,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;AACvE,YAAMC,GAAG,GAAG,EACX,GAAGH,OADQ;AAEXP,QAAAA,IAAI,EAAE,KAAKA,IAFA;AAGXO,QAAAA,OAAO,EAAE,OAAOA,OAAO,CAACA,OAHb;AAIXZ,QAAAA,MAAM,EAAE;AAJG,OAAZ;AAMAQ,MAAAA,QAAQ,CAACQ,SAAT,CACCV,MADD,EAECS,GAFD,EAGC,4BAA4B,KAAKV,IAHlC,EAICQ,cAJD,EAKCC,QALD;AAOA,KAhBF;AAiBA;;AAnCyC,CAA3C","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInRootPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} path path\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, path, target) {\n\t\tthis.source = source;\n\t\tthis.path = path;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ModulesInRootPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: this.path,\n\t\t\t\t\trequest: \"./\" + request.request,\n\t\t\t\t\tmodule: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"looking for modules in \" + this.path,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}