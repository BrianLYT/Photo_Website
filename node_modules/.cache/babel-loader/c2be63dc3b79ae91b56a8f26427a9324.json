{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConcatenationScope = require(\"../ConcatenationScope\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n\nclass HarmonyExportExpressionDependency extends NullDependency {\n  constructor(range, rangeStatement, prefix, declarationId) {\n    super();\n    this.range = range;\n    this.rangeStatement = rangeStatement;\n    this.prefix = prefix;\n    this.declarationId = declarationId;\n  }\n\n  get type() {\n    return \"harmony export expression\";\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    return {\n      exports: [\"default\"],\n      priority: 1,\n      terminalBinding: true,\n      dependencies: undefined\n    };\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n\n\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    // The expression/declaration is already covered by SideEffectsFlagPlugin\n    return false;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.rangeStatement);\n    write(this.prefix);\n    write(this.declarationId);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.rangeStatement = read();\n    this.prefix = read();\n    this.declarationId = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyExportExpressionDependency, \"webpack/lib/dependencies/HarmonyExportExpressionDependency\");\nHarmonyExportExpressionDependency.Template = class HarmonyExportDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      module,\n      moduleGraph,\n      runtimeTemplate,\n      runtimeRequirements,\n      initFragments,\n      runtime,\n      concatenationScope\n    } = _ref;\n    const dep =\n    /** @type {HarmonyExportExpressionDependency} */\n    dependency;\n    const {\n      declarationId\n    } = dep;\n    const exportsName = module.exportsArgument;\n\n    if (declarationId) {\n      let name;\n\n      if (typeof declarationId === \"string\") {\n        name = declarationId;\n      } else {\n        name = ConcatenationScope.DEFAULT_EXPORT;\n        source.replace(declarationId.range[0], declarationId.range[1] - 1, `${declarationId.prefix}${name}${declarationId.suffix}`);\n      }\n\n      if (concatenationScope) {\n        concatenationScope.registerExport(\"default\", name);\n      } else {\n        const used = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n\n        if (used) {\n          const map = new Map();\n          map.set(used, `/* export default binding */ ${name}`);\n          initFragments.push(new HarmonyExportInitFragment(exportsName, map));\n        }\n      }\n\n      source.replace(dep.rangeStatement[0], dep.range[0] - 1, `/* harmony default export */ ${dep.prefix}`);\n    } else {\n      let content;\n      const name = ConcatenationScope.DEFAULT_EXPORT;\n\n      if (runtimeTemplate.supportsConst()) {\n        content = `/* harmony default export */ const ${name} = `;\n\n        if (concatenationScope) {\n          concatenationScope.registerExport(\"default\", name);\n        } else {\n          const used = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n\n          if (used) {\n            runtimeRequirements.add(RuntimeGlobals.exports);\n            const map = new Map();\n            map.set(used, name);\n            initFragments.push(new HarmonyExportInitFragment(exportsName, map));\n          } else {\n            content = `/* unused harmony default export */ var ${name} = `;\n          }\n        }\n      } else if (concatenationScope) {\n        content = `/* harmony default export */ var ${name} = `;\n        concatenationScope.registerExport(\"default\", name);\n      } else {\n        const used = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n\n        if (used) {\n          runtimeRequirements.add(RuntimeGlobals.exports); // This is a little bit incorrect as TDZ is not correct, but we can't use const.\n\n          content = `/* harmony default export */ ${exportsName}[${JSON.stringify(used)}] = `;\n        } else {\n          content = `/* unused harmony default export */ var ${name} = `;\n        }\n      }\n\n      if (dep.range) {\n        source.replace(dep.rangeStatement[0], dep.range[0] - 1, content + \"(\" + dep.prefix);\n        source.replace(dep.range[1], dep.rangeStatement[1] - 0.5, \");\");\n        return;\n      }\n\n      source.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\n    }\n  }\n\n};\nmodule.exports = HarmonyExportExpressionDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyExportExpressionDependency.js"],"names":["ConcatenationScope","require","RuntimeGlobals","makeSerializable","HarmonyExportInitFragment","NullDependency","HarmonyExportExpressionDependency","constructor","range","rangeStatement","prefix","declarationId","type","getExports","moduleGraph","exports","priority","terminalBinding","dependencies","undefined","getModuleEvaluationSideEffectsState","serialize","context","write","deserialize","read","Template","HarmonyExportDependencyTemplate","apply","dependency","source","module","runtimeTemplate","runtimeRequirements","initFragments","runtime","concatenationScope","dep","exportsName","exportsArgument","name","DEFAULT_EXPORT","replace","suffix","registerExport","used","getExportsInfo","getUsedName","map","Map","set","push","content","supportsConst","add","JSON","stringify"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\nclass HarmonyExportExpressionDependency extends NullDependency {\n\tconstructor(range, rangeStatement, prefix, declarationId) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.rangeStatement = rangeStatement;\n\t\tthis.prefix = prefix;\n\t\tthis.declarationId = declarationId;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export expression\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\treturn {\n\t\t\texports: [\"default\"],\n\t\t\tpriority: 1,\n\t\t\tterminalBinding: true,\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\t// The expression/declaration is already covered by SideEffectsFlagPlugin\n\t\treturn false;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.range);\n\t\twrite(this.rangeStatement);\n\t\twrite(this.prefix);\n\t\twrite(this.declarationId);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.range = read();\n\t\tthis.rangeStatement = read();\n\t\tthis.prefix = read();\n\t\tthis.declarationId = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyExportExpressionDependency,\n\t\"webpack/lib/dependencies/HarmonyExportExpressionDependency\"\n);\n\nHarmonyExportExpressionDependency.Template = class HarmonyExportDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{\n\t\t\tmodule,\n\t\t\tmoduleGraph,\n\t\t\truntimeTemplate,\n\t\t\truntimeRequirements,\n\t\t\tinitFragments,\n\t\t\truntime,\n\t\t\tconcatenationScope\n\t\t}\n\t) {\n\t\tconst dep = /** @type {HarmonyExportExpressionDependency} */ (dependency);\n\t\tconst { declarationId } = dep;\n\t\tconst exportsName = module.exportsArgument;\n\t\tif (declarationId) {\n\t\t\tlet name;\n\t\t\tif (typeof declarationId === \"string\") {\n\t\t\t\tname = declarationId;\n\t\t\t} else {\n\t\t\t\tname = ConcatenationScope.DEFAULT_EXPORT;\n\t\t\t\tsource.replace(\n\t\t\t\t\tdeclarationId.range[0],\n\t\t\t\t\tdeclarationId.range[1] - 1,\n\t\t\t\t\t`${declarationId.prefix}${name}${declarationId.suffix}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (concatenationScope) {\n\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t} else {\n\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\tif (used) {\n\t\t\t\t\tconst map = new Map();\n\t\t\t\t\tmap.set(used, `/* export default binding */ ${name}`);\n\t\t\t\t\tinitFragments.push(new HarmonyExportInitFragment(exportsName, map));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsource.replace(\n\t\t\t\tdep.rangeStatement[0],\n\t\t\t\tdep.range[0] - 1,\n\t\t\t\t`/* harmony default export */ ${dep.prefix}`\n\t\t\t);\n\t\t} else {\n\t\t\tlet content;\n\t\t\tconst name = ConcatenationScope.DEFAULT_EXPORT;\n\t\t\tif (runtimeTemplate.supportsConst()) {\n\t\t\t\tcontent = `/* harmony default export */ const ${name} = `;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t\t} else {\n\t\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\t\tif (used) {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\tmap.set(used, name);\n\t\t\t\t\t\tinitFragments.push(new HarmonyExportInitFragment(exportsName, map));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontent = `/* unused harmony default export */ var ${name} = `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (concatenationScope) {\n\t\t\t\tcontent = `/* harmony default export */ var ${name} = `;\n\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t} else {\n\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\tif (used) {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t// This is a little bit incorrect as TDZ is not correct, but we can't use const.\n\t\t\t\t\tcontent = `/* harmony default export */ ${exportsName}[${JSON.stringify(\n\t\t\t\t\t\tused\n\t\t\t\t\t)}] = `;\n\t\t\t\t} else {\n\t\t\t\t\tcontent = `/* unused harmony default export */ var ${name} = `;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dep.range) {\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.rangeStatement[0],\n\t\t\t\t\tdep.range[0] - 1,\n\t\t\t\t\tcontent + \"(\" + dep.prefix\n\t\t\t\t);\n\t\t\t\tsource.replace(dep.range[1], dep.rangeStatement[1] - 0.5, \");\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsource.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\n\t\t}\n\t}\n};\n\nmodule.exports = HarmonyExportExpressionDependency;\n"]},"metadata":{},"sourceType":"script"}