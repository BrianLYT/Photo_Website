{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst Template = require(\"../Template\");\n\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\n\nclass CreateFakeNamespaceObjectRuntimeModule extends HelperRuntimeModule {\n  constructor() {\n    super(\"create fake namespace object\");\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    const fn = RuntimeGlobals.createFakeNamespaceObject;\n    return Template.asString([`var getProto = Object.getPrototypeOf ? ${runtimeTemplate.returningFunction(\"Object.getPrototypeOf(obj)\", \"obj\")} : ${runtimeTemplate.returningFunction(\"obj.__proto__\", \"obj\")};`, \"var leafPrototypes;\", \"// create a fake namespace object\", \"// mode & 1: value is a module id, require it\", \"// mode & 2: merge all properties of value into the ns\", \"// mode & 4: return value when already ns object\", \"// mode & 16: return value when it's Promise-like\", \"// mode & 8|1: behave like require\", // Note: must be a function (not arrow), because this is used in body!\n    `${fn} = function(value, mode) {`, Template.indent([`if(mode & 1) value = this(value);`, `if(mode & 8) return value;`, \"if(typeof value === 'object' && value) {\", Template.indent([\"if((mode & 4) && value.__esModule) return value;\", \"if((mode & 16) && typeof value.then === 'function') return value;\"]), \"}\", \"var ns = Object.create(null);\", `${RuntimeGlobals.makeNamespaceObject}(ns);`, \"var def = {};\", \"leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\", \"for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\", Template.indent([`Object.getOwnPropertyNames(current).forEach(${runtimeTemplate.expressionFunction(`def[key] = ${runtimeTemplate.returningFunction(\"value[key]\", \"\")}`, \"key\")});`]), \"}\", `def['default'] = ${runtimeTemplate.returningFunction(\"value\", \"\")};`, `${RuntimeGlobals.definePropertyGetters}(ns, def);`, \"return ns;\"]), \"};\"]);\n  }\n\n}\n\nmodule.exports = CreateFakeNamespaceObjectRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/runtime/CreateFakeNamespaceObjectRuntimeModule.js"],"names":["RuntimeGlobals","require","Template","HelperRuntimeModule","CreateFakeNamespaceObjectRuntimeModule","constructor","generate","runtimeTemplate","compilation","fn","createFakeNamespaceObject","asString","returningFunction","indent","makeNamespaceObject","expressionFunction","definePropertyGetters","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAME,mBAAmB,GAAGF,OAAO,CAAC,uBAAD,CAAnC;;AAEA,MAAMG,sCAAN,SAAqDD,mBAArD,CAAyE;AACxEE,EAAAA,WAAW,GAAG;AACb,UAAM,8BAAN;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKC,WAAjC;AACA,UAAMC,EAAE,GAAGT,cAAc,CAACU,yBAA1B;AACA,WAAOR,QAAQ,CAACS,QAAT,CAAkB,CACvB,0CAAyCJ,eAAe,CAACK,iBAAhB,CACzC,4BADyC,EAEzC,KAFyC,CAGxC,MAAKL,eAAe,CAACK,iBAAhB,CAAkC,eAAlC,EAAmD,KAAnD,CAA0D,GAJzC,EAKxB,qBALwB,EAMxB,mCANwB,EAOxB,+CAPwB,EAQxB,wDARwB,EASxB,kDATwB,EAUxB,mDAVwB,EAWxB,oCAXwB,EAYxB;AACC,OAAEH,EAAG,4BAbkB,EAcxBP,QAAQ,CAACW,MAAT,CAAgB,CACd,mCADc,EAEd,4BAFc,EAGf,0CAHe,EAIfX,QAAQ,CAACW,MAAT,CAAgB,CACf,kDADe,EAEf,mEAFe,CAAhB,CAJe,EAQf,GARe,EASf,+BATe,EAUd,GAAEb,cAAc,CAACc,mBAAoB,OAVvB,EAWf,eAXe,EAYf,4FAZe,EAaf,sIAbe,EAcfZ,QAAQ,CAACW,MAAT,CAAgB,CACd,+CAA8CN,eAAe,CAACQ,kBAAhB,CAC7C,cAAaR,eAAe,CAACK,iBAAhB,CAAkC,YAAlC,EAAgD,EAAhD,CAAoD,EADpB,EAE9C,KAF8C,CAG7C,IAJa,CAAhB,CAde,EAoBf,GApBe,EAqBd,oBAAmBL,eAAe,CAACK,iBAAhB,CAAkC,OAAlC,EAA2C,EAA3C,CAA+C,GArBpD,EAsBd,GAAEZ,cAAc,CAACgB,qBAAsB,YAtBzB,EAuBf,YAvBe,CAAhB,CAdwB,EAuCxB,IAvCwB,CAAlB,CAAP;AAyCA;;AApDuE;;AAuDzEC,MAAM,CAACC,OAAP,GAAiBd,sCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst HelperRuntimeModule = require(\"./HelperRuntimeModule\");\n\nclass CreateFakeNamespaceObjectRuntimeModule extends HelperRuntimeModule {\n\tconstructor() {\n\t\tsuper(\"create fake namespace object\");\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { runtimeTemplate } = this.compilation;\n\t\tconst fn = RuntimeGlobals.createFakeNamespaceObject;\n\t\treturn Template.asString([\n\t\t\t`var getProto = Object.getPrototypeOf ? ${runtimeTemplate.returningFunction(\n\t\t\t\t\"Object.getPrototypeOf(obj)\",\n\t\t\t\t\"obj\"\n\t\t\t)} : ${runtimeTemplate.returningFunction(\"obj.__proto__\", \"obj\")};`,\n\t\t\t\"var leafPrototypes;\",\n\t\t\t\"// create a fake namespace object\",\n\t\t\t\"// mode & 1: value is a module id, require it\",\n\t\t\t\"// mode & 2: merge all properties of value into the ns\",\n\t\t\t\"// mode & 4: return value when already ns object\",\n\t\t\t\"// mode & 16: return value when it's Promise-like\",\n\t\t\t\"// mode & 8|1: behave like require\",\n\t\t\t// Note: must be a function (not arrow), because this is used in body!\n\t\t\t`${fn} = function(value, mode) {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`if(mode & 1) value = this(value);`,\n\t\t\t\t`if(mode & 8) return value;`,\n\t\t\t\t\"if(typeof value === 'object' && value) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"if((mode & 4) && value.__esModule) return value;\",\n\t\t\t\t\t\"if((mode & 16) && typeof value.then === 'function') return value;\"\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\t\"var ns = Object.create(null);\",\n\t\t\t\t`${RuntimeGlobals.makeNamespaceObject}(ns);`,\n\t\t\t\t\"var def = {};\",\n\t\t\t\t\"leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\",\n\t\t\t\t\"for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t`Object.getOwnPropertyNames(current).forEach(${runtimeTemplate.expressionFunction(\n\t\t\t\t\t\t`def[key] = ${runtimeTemplate.returningFunction(\"value[key]\", \"\")}`,\n\t\t\t\t\t\t\"key\"\n\t\t\t\t\t)});`\n\t\t\t\t]),\n\t\t\t\t\"}\",\n\t\t\t\t`def['default'] = ${runtimeTemplate.returningFunction(\"value\", \"\")};`,\n\t\t\t\t`${RuntimeGlobals.definePropertyGetters}(ns, def);`,\n\t\t\t\t\"return ns;\"\n\t\t\t]),\n\t\t\t\"};\"\n\t\t]);\n\t}\n}\n\nmodule.exports = CreateFakeNamespaceObjectRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}