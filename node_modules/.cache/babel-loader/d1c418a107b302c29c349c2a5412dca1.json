{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource,\n  PrefixSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nconst {\n  RuntimeGlobals\n} = require(\"..\");\n\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  getCompilationHooks\n} = require(\"./JavascriptModulesPlugin\");\n\nconst {\n  generateEntryStartup,\n  updateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n\nclass ArrayPushCallbackChunkFormatPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(\"ArrayPushCallbackChunkFormatPlugin\", compilation => {\n      compilation.hooks.additionalChunkRuntimeRequirements.tap(\"ArrayPushCallbackChunkFormatPlugin\", (chunk, set, _ref) => {\n        let {\n          chunkGraph\n        } = _ref;\n        if (chunk.hasRuntime()) return;\n\n        if (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n          set.add(RuntimeGlobals.onChunksLoaded);\n          set.add(RuntimeGlobals.require);\n        }\n\n        set.add(RuntimeGlobals.chunkCallback);\n      });\n      const hooks = getCompilationHooks(compilation);\n      hooks.renderChunk.tap(\"ArrayPushCallbackChunkFormatPlugin\", (modules, renderContext) => {\n        const {\n          chunk,\n          chunkGraph,\n          runtimeTemplate\n        } = renderContext;\n        const hotUpdateChunk = chunk instanceof HotUpdateChunk ? chunk : null;\n        const globalObject = runtimeTemplate.globalObject;\n        const source = new ConcatSource();\n        const runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\n        if (hotUpdateChunk) {\n          const hotUpdateGlobal = runtimeTemplate.outputOptions.hotUpdateGlobal;\n          source.add(`${globalObject}[${JSON.stringify(hotUpdateGlobal)}](`);\n          source.add(`${JSON.stringify(chunk.id)},`);\n          source.add(modules);\n\n          if (runtimeModules.length > 0) {\n            source.add(\",\\n\");\n            const runtimePart = Template.renderChunkRuntimeModules(runtimeModules, renderContext);\n            source.add(runtimePart);\n          }\n\n          source.add(\")\");\n        } else {\n          const chunkLoadingGlobal = runtimeTemplate.outputOptions.chunkLoadingGlobal;\n          source.add(`(${globalObject}[${JSON.stringify(chunkLoadingGlobal)}] = ${globalObject}[${JSON.stringify(chunkLoadingGlobal)}] || []).push([`);\n          source.add(`${JSON.stringify(chunk.ids)},`);\n          source.add(modules);\n          const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n\n          if (runtimeModules.length > 0 || entries.length > 0) {\n            const runtime = new ConcatSource((runtimeTemplate.supportsArrowFunction() ? \"__webpack_require__ =>\" : \"function(__webpack_require__)\") + \" { // webpackRuntimeModules\\n\");\n\n            if (runtimeModules.length > 0) {\n              runtime.add(Template.renderRuntimeModules(runtimeModules, { ...renderContext,\n                codeGenerationResults: compilation.codeGenerationResults\n              }));\n            }\n\n            if (entries.length > 0) {\n              const startupSource = new RawSource(generateEntryStartup(chunkGraph, runtimeTemplate, entries, chunk, true));\n              runtime.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], { ...renderContext,\n                inlined: false\n              }));\n\n              if (chunkGraph.getChunkRuntimeRequirements(chunk).has(RuntimeGlobals.returnExportsFromRuntime)) {\n                runtime.add(\"return __webpack_exports__;\\n\");\n              }\n            }\n\n            runtime.add(\"}\\n\");\n            source.add(\",\\n\");\n            source.add(new PrefixSource(\"/******/ \", runtime));\n          }\n\n          source.add(\"])\");\n        }\n\n        return source;\n      });\n      hooks.chunkHash.tap(\"ArrayPushCallbackChunkFormatPlugin\", (chunk, hash, _ref2) => {\n        let {\n          chunkGraph,\n          runtimeTemplate\n        } = _ref2;\n        if (chunk.hasRuntime()) return;\n        hash.update(`ArrayPushCallbackChunkFormatPlugin1${runtimeTemplate.outputOptions.chunkLoadingGlobal}${runtimeTemplate.outputOptions.hotUpdateGlobal}${runtimeTemplate.globalObject}`);\n        const entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n        updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n      });\n    });\n  }\n\n}\n\nmodule.exports = ArrayPushCallbackChunkFormatPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/javascript/ArrayPushCallbackChunkFormatPlugin.js"],"names":["ConcatSource","PrefixSource","RawSource","require","RuntimeGlobals","HotUpdateChunk","Template","getCompilationHooks","generateEntryStartup","updateHashForEntryStartup","ArrayPushCallbackChunkFormatPlugin","apply","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","chunkGraph","hasRuntime","getNumberOfEntryModules","add","onChunksLoaded","chunkCallback","renderChunk","modules","renderContext","runtimeTemplate","hotUpdateChunk","globalObject","source","runtimeModules","getChunkRuntimeModulesInOrder","hotUpdateGlobal","outputOptions","JSON","stringify","id","length","runtimePart","renderChunkRuntimeModules","chunkLoadingGlobal","ids","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtime","supportsArrowFunction","renderRuntimeModules","codeGenerationResults","startupSource","renderStartup","call","inlined","getChunkRuntimeRequirements","has","returnExportsFromRuntime","chunkHash","hash","update","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, PrefixSource, RawSource } = require(\"webpack-sources\");\nconst { RuntimeGlobals } = require(\"..\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst Template = require(\"../Template\");\nconst { getCompilationHooks } = require(\"./JavascriptModulesPlugin\");\nconst {\n\tgenerateEntryStartup,\n\tupdateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ArrayPushCallbackChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.onChunksLoaded);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset.add(RuntimeGlobals.chunkCallback);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst hotUpdateChunk =\n\t\t\t\t\t\t\tchunk instanceof HotUpdateChunk ? chunk : null;\n\t\t\t\t\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\tif (hotUpdateChunk) {\n\t\t\t\t\t\t\tconst hotUpdateGlobal =\n\t\t\t\t\t\t\t\truntimeTemplate.outputOptions.hotUpdateGlobal;\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t`${globalObject}[${JSON.stringify(hotUpdateGlobal)}](`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsource.add(`${JSON.stringify(chunk.id)},`);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t\t\t\t\tconst runtimePart = Template.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsource.add(runtimePart);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(\")\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst chunkLoadingGlobal =\n\t\t\t\t\t\t\t\truntimeTemplate.outputOptions.chunkLoadingGlobal;\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t`(${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkLoadingGlobal\n\t\t\t\t\t\t\t\t)}] = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkLoadingGlobal\n\t\t\t\t\t\t\t\t)}] || []).push([`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsource.add(`${JSON.stringify(chunk.ids)},`);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0 || entries.length > 0) {\n\t\t\t\t\t\t\t\tconst runtime = new ConcatSource(\n\t\t\t\t\t\t\t\t\t(runtimeTemplate.supportsArrowFunction()\n\t\t\t\t\t\t\t\t\t\t? \"__webpack_require__ =>\"\n\t\t\t\t\t\t\t\t\t\t: \"function(__webpack_require__)\") +\n\t\t\t\t\t\t\t\t\t\t\" { // webpackRuntimeModules\\n\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\t\truntime.add(\n\t\t\t\t\t\t\t\t\t\tTemplate.renderRuntimeModules(runtimeModules, {\n\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\tcodeGenerationResults: compilation.codeGenerationResults\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\t\t\tconst startupSource = new RawSource(\n\t\t\t\t\t\t\t\t\t\tgenerateEntryStartup(\n\t\t\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\truntime.add(\n\t\t\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t\t\t\t\t\t.getChunkRuntimeRequirements(chunk)\n\t\t\t\t\t\t\t\t\t\t\t.has(RuntimeGlobals.returnExportsFromRuntime)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\truntime.add(\"return __webpack_exports__;\\n\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\truntime.add(\"}\\n\");\n\t\t\t\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t\t\t\t\tsource.add(new PrefixSource(\"/******/ \", runtime));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(\"])\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph, runtimeTemplate }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\n\t\t\t\t\t\t\t`ArrayPushCallbackChunkFormatPlugin1${runtimeTemplate.outputOptions.chunkLoadingGlobal}${runtimeTemplate.outputOptions.hotUpdateGlobal}${runtimeTemplate.globalObject}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ArrayPushCallbackChunkFormatPlugin;\n"]},"metadata":{},"sourceType":"script"}