{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenvDefaults = _interopRequireDefault(require(\"dotenv-defaults\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _webpack = require(\"webpack\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // Mostly taken from here: https://github.com/motdotla/dotenv-expand/blob/master/lib/main.js#L4\n\n\nvar interpolate = function interpolate(env, vars) {\n  var matches = env.match(/\\$([a-zA-Z0-9_]+)|\\${([a-zA-Z0-9_]+)}/g) || [];\n  matches.forEach(function (match) {\n    var key = match.replace(/\\$|{|}/g, '');\n    var variable = vars[key] || '';\n    variable = interpolate(variable, vars);\n    env = env.replace(match, variable);\n  });\n  return env;\n};\n\nvar isMainThreadElectron = function isMainThreadElectron(target) {\n  return target.startsWith('electron') && target.endsWith('main');\n};\n\nvar Dotenv = /*#__PURE__*/function () {\n  /**\n   * The dotenv-webpack plugin.\n   * @param {Object} options - The parameters.\n   * @param {String} [options.path=./.env] - The location of the environment variable.\n   * @param {Boolean|String} [options.safe=false] - If false ignore safe-mode, if true load `'./.env.example'`, if a string load that file as the sample.\n   * @param {Boolean} [options.systemvars=false] - If true, load system environment variables.\n   * @param {Boolean} [options.silent=false] - If true, suppress warnings, if false, display warnings.\n   * @param {String} [options.prefix=process.env.] - The prefix, used to denote environment variables.\n   * @returns {webpack.DefinePlugin}\n   */\n  function Dotenv() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Dotenv);\n\n    this.config = Object.assign({}, {\n      path: './.env',\n      prefix: 'process.env.'\n    }, config);\n  }\n\n  _createClass(Dotenv, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _compiler$options$tar;\n\n      var variables = this.gatherVariables();\n      var target = (_compiler$options$tar = compiler.options.target) !== null && _compiler$options$tar !== void 0 ? _compiler$options$tar : 'web';\n      var version = compiler.webpack && compiler.webpack.version || '4';\n      var data = this.formatData({\n        variables: variables,\n        target: target,\n        version: version\n      });\n      new _webpack.DefinePlugin(data).apply(compiler);\n    }\n  }, {\n    key: \"gatherVariables\",\n    value: function gatherVariables() {\n      var _this$config = this.config,\n          safe = _this$config.safe,\n          allowEmptyValues = _this$config.allowEmptyValues;\n      var vars = this.initializeVars();\n\n      var _this$getEnvs = this.getEnvs(),\n          env = _this$getEnvs.env,\n          blueprint = _this$getEnvs.blueprint;\n\n      Object.keys(blueprint).forEach(function (key) {\n        var value = Object.prototype.hasOwnProperty.call(vars, key) ? vars[key] : env[key];\n        var isMissing = typeof value === 'undefined' || value === null || !allowEmptyValues && value === '';\n\n        if (safe && isMissing) {\n          throw new Error(\"Missing environment variable: \".concat(key));\n        } else {\n          vars[key] = value;\n        }\n      }); // add the leftovers\n\n      if (safe) {\n        Object.keys(env).forEach(function (key) {\n          if (!Object.prototype.hasOwnProperty.call(vars, key)) {\n            vars[key] = env[key];\n          }\n        });\n      }\n\n      return vars;\n    }\n  }, {\n    key: \"initializeVars\",\n    value: function initializeVars() {\n      return this.config.systemvars ? Object.assign({}, process.env) : {};\n    }\n  }, {\n    key: \"getEnvs\",\n    value: function getEnvs() {\n      var _this$config2 = this.config,\n          path = _this$config2.path,\n          silent = _this$config2.silent,\n          safe = _this$config2.safe;\n\n      var env = _dotenvDefaults[\"default\"].parse(this.loadFile({\n        file: path,\n        silent: silent\n      }), this.getDefaults());\n\n      var blueprint = env;\n\n      if (safe) {\n        var file = './.env.example';\n\n        if (safe !== true) {\n          file = safe;\n        }\n\n        blueprint = _dotenvDefaults[\"default\"].parse(this.loadFile({\n          file: file,\n          silent: silent\n        }));\n      }\n\n      return {\n        env: env,\n        blueprint: blueprint\n      };\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      var _this$config3 = this.config,\n          silent = _this$config3.silent,\n          defaults = _this$config3.defaults;\n\n      if (defaults) {\n        return this.loadFile({\n          file: defaults === true ? './.env.defaults' : defaults,\n          silent: silent\n        });\n      }\n\n      return '';\n    }\n  }, {\n    key: \"formatData\",\n    value: function formatData(_ref) {\n      var _ref$variables = _ref.variables,\n          variables = _ref$variables === void 0 ? {} : _ref$variables,\n          target = _ref.target,\n          version = _ref.version;\n      var _this$config4 = this.config,\n          expand = _this$config4.expand,\n          prefix = _this$config4.prefix;\n      var formatted = Object.keys(variables).reduce(function (obj, key) {\n        var v = variables[key];\n        var vKey = \"\".concat(prefix).concat(key);\n        var vValue;\n\n        if (expand) {\n          if (v.substring(0, 2) === '\\\\$') {\n            vValue = v.substring(1);\n          } else if (v.indexOf('\\\\$') > 0) {\n            vValue = v.replace(/\\\\\\$/g, '$');\n          } else {\n            vValue = interpolate(v, variables);\n          }\n        } else {\n          vValue = v;\n        }\n\n        obj[vKey] = JSON.stringify(vValue);\n        return obj;\n      }, {}); // We have to stub any remaining `process.env`s due to Webpack 5 not polyfilling it anymore\n      // https://github.com/mrsteele/dotenv-webpack/issues/240#issuecomment-710231534\n      // However, if someone targets Node or Electron `process.env` still exists, and should therefore be kept\n      // https://webpack.js.org/configuration/target\n\n      if (this.shouldStub({\n        target: target,\n        version: version\n      })) {\n        // Results in `\"MISSING_ENV_VAR\".NAME` which is valid JS\n        formatted['process.env'] = '\"MISSING_ENV_VAR\"';\n      }\n\n      return formatted;\n    }\n  }, {\n    key: \"shouldStub\",\n    value: function shouldStub(_ref2) {\n      var _this = this;\n\n      var targetInput = _ref2.target,\n          version = _ref2.version;\n\n      if (!version.startsWith('5')) {\n        return false;\n      }\n\n      var targets = Array.isArray(targetInput) ? targetInput : [targetInput];\n      return targets.every(function (target) {\n        return (// If configured prefix is 'process.env'\n          _this.config.prefix === 'process.env.' && // If we're not configured to never stub\n          _this.config.ignoreStub !== true && ( // We are configured to always stub\n          _this.config.ignoreStub === false || !target.includes('node') && !isMainThreadElectron(target))\n        );\n      });\n    }\n    /**\n     * Load a file.\n     * @param {String} config.file - The file to load.\n     * @param {Boolean} config.silent - If true, suppress warnings, if false, display warnings.\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"loadFile\",\n    value: function loadFile(_ref3) {\n      var file = _ref3.file,\n          silent = _ref3.silent;\n\n      try {\n        return _fs[\"default\"].readFileSync(file, 'utf8');\n      } catch (err) {\n        this.warn(\"Failed to load \".concat(file, \".\"), silent);\n        return {};\n      }\n    }\n    /**\n     * Displays a console message if 'silent' is falsey\n     * @param {String} msg - The message.\n     * @param {Boolean} silent - If true, display the message, if false, suppress the message.\n     */\n\n  }, {\n    key: \"warn\",\n    value: function warn(msg, silent) {\n      !silent && console.warn(msg);\n    }\n  }]);\n\n  return Dotenv;\n}();\n\nvar _default = Dotenv;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/dotenv-webpack/dist/index.js"],"names":["Object","defineProperty","exports","value","_dotenvDefaults","_interopRequireDefault","require","_fs","_webpack","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","interpolate","env","vars","matches","match","forEach","replace","variable","isMainThreadElectron","startsWith","endsWith","Dotenv","config","arguments","undefined","assign","path","prefix","apply","compiler","_compiler$options$tar","variables","gatherVariables","options","version","webpack","data","formatData","DefinePlugin","_this$config","safe","allowEmptyValues","initializeVars","_this$getEnvs","getEnvs","blueprint","keys","hasOwnProperty","call","isMissing","Error","concat","systemvars","process","_this$config2","silent","parse","loadFile","file","getDefaults","_this$config3","defaults","_ref","_ref$variables","_this$config4","expand","formatted","reduce","v","vKey","vValue","substring","indexOf","JSON","stringify","shouldStub","_ref2","_this","targetInput","targets","Array","isArray","every","ignoreStub","includes","_ref3","readFileSync","err","warn","msg","console","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenvDefaults = _interopRequireDefault(require(\"dotenv-defaults\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _webpack = require(\"webpack\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Mostly taken from here: https://github.com/motdotla/dotenv-expand/blob/master/lib/main.js#L4\nvar interpolate = function interpolate(env, vars) {\n  var matches = env.match(/\\$([a-zA-Z0-9_]+)|\\${([a-zA-Z0-9_]+)}/g) || [];\n  matches.forEach(function (match) {\n    var key = match.replace(/\\$|{|}/g, '');\n    var variable = vars[key] || '';\n    variable = interpolate(variable, vars);\n    env = env.replace(match, variable);\n  });\n  return env;\n};\n\nvar isMainThreadElectron = function isMainThreadElectron(target) {\n  return target.startsWith('electron') && target.endsWith('main');\n};\n\nvar Dotenv = /*#__PURE__*/function () {\n  /**\n   * The dotenv-webpack plugin.\n   * @param {Object} options - The parameters.\n   * @param {String} [options.path=./.env] - The location of the environment variable.\n   * @param {Boolean|String} [options.safe=false] - If false ignore safe-mode, if true load `'./.env.example'`, if a string load that file as the sample.\n   * @param {Boolean} [options.systemvars=false] - If true, load system environment variables.\n   * @param {Boolean} [options.silent=false] - If true, suppress warnings, if false, display warnings.\n   * @param {String} [options.prefix=process.env.] - The prefix, used to denote environment variables.\n   * @returns {webpack.DefinePlugin}\n   */\n  function Dotenv() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Dotenv);\n\n    this.config = Object.assign({}, {\n      path: './.env',\n      prefix: 'process.env.'\n    }, config);\n  }\n\n  _createClass(Dotenv, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _compiler$options$tar;\n\n      var variables = this.gatherVariables();\n      var target = (_compiler$options$tar = compiler.options.target) !== null && _compiler$options$tar !== void 0 ? _compiler$options$tar : 'web';\n      var version = compiler.webpack && compiler.webpack.version || '4';\n      var data = this.formatData({\n        variables: variables,\n        target: target,\n        version: version\n      });\n      new _webpack.DefinePlugin(data).apply(compiler);\n    }\n  }, {\n    key: \"gatherVariables\",\n    value: function gatherVariables() {\n      var _this$config = this.config,\n          safe = _this$config.safe,\n          allowEmptyValues = _this$config.allowEmptyValues;\n      var vars = this.initializeVars();\n\n      var _this$getEnvs = this.getEnvs(),\n          env = _this$getEnvs.env,\n          blueprint = _this$getEnvs.blueprint;\n\n      Object.keys(blueprint).forEach(function (key) {\n        var value = Object.prototype.hasOwnProperty.call(vars, key) ? vars[key] : env[key];\n        var isMissing = typeof value === 'undefined' || value === null || !allowEmptyValues && value === '';\n\n        if (safe && isMissing) {\n          throw new Error(\"Missing environment variable: \".concat(key));\n        } else {\n          vars[key] = value;\n        }\n      }); // add the leftovers\n\n      if (safe) {\n        Object.keys(env).forEach(function (key) {\n          if (!Object.prototype.hasOwnProperty.call(vars, key)) {\n            vars[key] = env[key];\n          }\n        });\n      }\n\n      return vars;\n    }\n  }, {\n    key: \"initializeVars\",\n    value: function initializeVars() {\n      return this.config.systemvars ? Object.assign({}, process.env) : {};\n    }\n  }, {\n    key: \"getEnvs\",\n    value: function getEnvs() {\n      var _this$config2 = this.config,\n          path = _this$config2.path,\n          silent = _this$config2.silent,\n          safe = _this$config2.safe;\n\n      var env = _dotenvDefaults[\"default\"].parse(this.loadFile({\n        file: path,\n        silent: silent\n      }), this.getDefaults());\n\n      var blueprint = env;\n\n      if (safe) {\n        var file = './.env.example';\n\n        if (safe !== true) {\n          file = safe;\n        }\n\n        blueprint = _dotenvDefaults[\"default\"].parse(this.loadFile({\n          file: file,\n          silent: silent\n        }));\n      }\n\n      return {\n        env: env,\n        blueprint: blueprint\n      };\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      var _this$config3 = this.config,\n          silent = _this$config3.silent,\n          defaults = _this$config3.defaults;\n\n      if (defaults) {\n        return this.loadFile({\n          file: defaults === true ? './.env.defaults' : defaults,\n          silent: silent\n        });\n      }\n\n      return '';\n    }\n  }, {\n    key: \"formatData\",\n    value: function formatData(_ref) {\n      var _ref$variables = _ref.variables,\n          variables = _ref$variables === void 0 ? {} : _ref$variables,\n          target = _ref.target,\n          version = _ref.version;\n      var _this$config4 = this.config,\n          expand = _this$config4.expand,\n          prefix = _this$config4.prefix;\n      var formatted = Object.keys(variables).reduce(function (obj, key) {\n        var v = variables[key];\n        var vKey = \"\".concat(prefix).concat(key);\n        var vValue;\n\n        if (expand) {\n          if (v.substring(0, 2) === '\\\\$') {\n            vValue = v.substring(1);\n          } else if (v.indexOf('\\\\$') > 0) {\n            vValue = v.replace(/\\\\\\$/g, '$');\n          } else {\n            vValue = interpolate(v, variables);\n          }\n        } else {\n          vValue = v;\n        }\n\n        obj[vKey] = JSON.stringify(vValue);\n        return obj;\n      }, {}); // We have to stub any remaining `process.env`s due to Webpack 5 not polyfilling it anymore\n      // https://github.com/mrsteele/dotenv-webpack/issues/240#issuecomment-710231534\n      // However, if someone targets Node or Electron `process.env` still exists, and should therefore be kept\n      // https://webpack.js.org/configuration/target\n\n      if (this.shouldStub({\n        target: target,\n        version: version\n      })) {\n        // Results in `\"MISSING_ENV_VAR\".NAME` which is valid JS\n        formatted['process.env'] = '\"MISSING_ENV_VAR\"';\n      }\n\n      return formatted;\n    }\n  }, {\n    key: \"shouldStub\",\n    value: function shouldStub(_ref2) {\n      var _this = this;\n\n      var targetInput = _ref2.target,\n          version = _ref2.version;\n\n      if (!version.startsWith('5')) {\n        return false;\n      }\n\n      var targets = Array.isArray(targetInput) ? targetInput : [targetInput];\n      return targets.every(function (target) {\n        return (// If configured prefix is 'process.env'\n          _this.config.prefix === 'process.env.' && // If we're not configured to never stub\n          _this.config.ignoreStub !== true && ( // We are configured to always stub\n          _this.config.ignoreStub === false || !target.includes('node') && !isMainThreadElectron(target))\n        );\n      });\n    }\n    /**\n     * Load a file.\n     * @param {String} config.file - The file to load.\n     * @param {Boolean} config.silent - If true, suppress warnings, if false, display warnings.\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"loadFile\",\n    value: function loadFile(_ref3) {\n      var file = _ref3.file,\n          silent = _ref3.silent;\n\n      try {\n        return _fs[\"default\"].readFileSync(file, 'utf8');\n      } catch (err) {\n        this.warn(\"Failed to load \".concat(file, \".\"), silent);\n        return {};\n      }\n    }\n    /**\n     * Displays a console message if 'silent' is falsey\n     * @param {String} msg - The message.\n     * @param {Boolean} silent - If true, display the message, if false, suppress the message.\n     */\n\n  }, {\n    key: \"warn\",\n    value: function warn(msg, silent) {\n      !silent && console.warn(msg);\n    }\n  }]);\n\n  return Dotenv;\n}();\n\nvar _default = Dotenv;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}