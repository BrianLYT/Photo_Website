{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_patternRequired(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $matched = 'patternMatched' + $lvl,\n      $dataProperties = 'dataProperties' + $lvl,\n      $closingBraces = '',\n      $ownProperties = it.opts.ownProperties;\n  out += 'var ' + $valid + ' = true;';\n\n  if ($ownProperties) {\n    out += ' var ' + $dataProperties + ' = undefined;';\n  }\n\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $pProperty,\n        i1 = -1,\n        l1 = arr1.length - 1;\n\n    while (i1 < l1) {\n      $pProperty = arr1[i1 += 1];\n      out += ' var ' + $matched + ' = false;  ';\n\n      if ($ownProperties) {\n        out += ' ' + $dataProperties + ' = ' + $dataProperties + ' || Object.keys(' + $data + '); for (var ' + $idx + '=0; ' + $idx + '<' + $dataProperties + '.length; ' + $idx + '++) { var ' + $key + ' = ' + $dataProperties + '[' + $idx + ']; ';\n      } else {\n        out += ' for (var ' + $key + ' in ' + $data + ') { ';\n      }\n\n      out += ' ' + $matched + ' = ' + it.usePattern($pProperty) + '.test(' + $key + '); if (' + $matched + ') break; } ';\n      var $missingPattern = it.util.escapeQuotes($pProperty);\n      out += ' if (!' + $matched + ') { ' + $valid + ' = false;  var err =   ';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + 'patternRequired' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { missingPattern: \\'' + $missingPattern + '\\' } ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should have property matching pattern \\\\\\'' + $missingPattern + '\\\\\\'\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';\n\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n\n  out += '' + $closingBraces;\n  return out;\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/ajv-keywords/keywords/dotjs/patternRequired.js"],"names":["module","exports","generate_patternRequired","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$key","$idx","$matched","$dataProperties","$closingBraces","$ownProperties","ownProperties","arr1","$pProperty","i1","l1","length","usePattern","$missingPattern","escapeQuotes","createErrors","errorPath","toQuotedString","messages","verbose"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_patternRequired(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $matched = 'patternMatched' + $lvl,\n    $dataProperties = 'dataProperties' + $lvl,\n    $closingBraces = '',\n    $ownProperties = it.opts.ownProperties;\n  out += 'var ' + ($valid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  var arr1 = $schema;\n  if (arr1) {\n    var $pProperty, i1 = -1,\n      l1 = arr1.length - 1;\n    while (i1 < l1) {\n      $pProperty = arr1[i1 += 1];\n      out += ' var ' + ($matched) + ' = false;  ';\n      if ($ownProperties) {\n        out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n      } else {\n        out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n      }\n      out += ' ' + ($matched) + ' = ' + (it.usePattern($pProperty)) + '.test(' + ($key) + '); if (' + ($matched) + ') break; } ';\n      var $missingPattern = it.util.escapeQuotes($pProperty);\n      out += ' if (!' + ($matched) + ') { ' + ($valid) + ' = false;  var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('patternRequired') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingPattern: \\'' + ($missingPattern) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should have property matching pattern \\\\\\'' + ($missingPattern) + '\\\\\\'\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  out += '' + ($closingBraces);\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}