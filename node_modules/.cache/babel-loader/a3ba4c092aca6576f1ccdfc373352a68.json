{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst WebpackError = require(\"./WebpackError\");\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst BasicEvaluatedExpression = require(\"./javascript/BasicEvaluatedExpression\");\n\nconst {\n  evaluateToString,\n  toConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\n\nconst createHash = require(\"./util/createHash\");\n/** @typedef {import(\"estree\").Expression} Expression */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\n/** @typedef {null|undefined|RegExp|Function|string|number|boolean|bigint|undefined} CodeValuePrimitive */\n\n/** @typedef {RecursiveArrayOrRecord<CodeValuePrimitive|RuntimeValue>} CodeValue */\n\n/**\n * @typedef {Object} RuntimeValueOptions\n * @property {string[]=} fileDependencies\n * @property {string[]=} contextDependencies\n * @property {string[]=} missingDependencies\n * @property {string[]=} buildDependencies\n * @property {string|function(): string=} version\n */\n\n\nclass RuntimeValue {\n  /**\n   * @param {function({ module: NormalModule, key: string, readonly version: string | undefined }): CodeValuePrimitive} fn generator function\n   * @param {true | string[] | RuntimeValueOptions=} options options\n   */\n  constructor(fn, options) {\n    this.fn = fn;\n\n    if (Array.isArray(options)) {\n      options = {\n        fileDependencies: options\n      };\n    }\n\n    this.options = options || {};\n  }\n\n  get fileDependencies() {\n    return this.options === true ? true : this.options.fileDependencies;\n  }\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n   * @param {string} key the defined key\n   * @returns {CodeValuePrimitive} code\n   */\n\n\n  exec(parser, valueCacheVersions, key) {\n    const buildInfo = parser.state.module.buildInfo;\n\n    if (this.options === true) {\n      buildInfo.cacheable = false;\n    } else {\n      if (this.options.fileDependencies) {\n        for (const dep of this.options.fileDependencies) {\n          buildInfo.fileDependencies.add(dep);\n        }\n      }\n\n      if (this.options.contextDependencies) {\n        for (const dep of this.options.contextDependencies) {\n          buildInfo.contextDependencies.add(dep);\n        }\n      }\n\n      if (this.options.missingDependencies) {\n        for (const dep of this.options.missingDependencies) {\n          buildInfo.missingDependencies.add(dep);\n        }\n      }\n\n      if (this.options.buildDependencies) {\n        for (const dep of this.options.buildDependencies) {\n          buildInfo.buildDependencies.add(dep);\n        }\n      }\n    }\n\n    return this.fn({\n      module: parser.state.module,\n      key,\n\n      get version() {\n        return (\n          /** @type {string} */\n          valueCacheVersions.get(VALUE_DEP_PREFIX + key)\n        );\n      }\n\n    });\n  }\n\n  getCacheVersion() {\n    return this.options === true ? undefined : (typeof this.options.version === \"function\" ? this.options.version() : this.options.version) || \"unset\";\n  }\n\n}\n/**\n * @param {any[]|{[k: string]: any}} obj obj\n * @param {JavascriptParser} parser Parser\n * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n * @param {string} key the defined key\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {boolean|undefined|null=} asiSafe asi safe (undefined: unknown, null: unneeded)\n * @returns {string} code converted to string that evaluates\n */\n\n\nconst stringifyObj = (obj, parser, valueCacheVersions, key, runtimeTemplate, asiSafe) => {\n  let code;\n  let arr = Array.isArray(obj);\n\n  if (arr) {\n    code = `[${obj.map(code => toCode(code, parser, valueCacheVersions, key, runtimeTemplate, null)).join(\",\")}]`;\n  } else {\n    code = `{${Object.keys(obj).map(key => {\n      const code = obj[key];\n      return JSON.stringify(key) + \":\" + toCode(code, parser, valueCacheVersions, key, runtimeTemplate, null);\n    }).join(\",\")}}`;\n  }\n\n  switch (asiSafe) {\n    case null:\n      return code;\n\n    case true:\n      return arr ? code : `(${code})`;\n\n    case false:\n      return arr ? `;${code}` : `;(${code})`;\n\n    default:\n      return `/*#__PURE__*/Object(${code})`;\n  }\n};\n/**\n * Convert code to a string that evaluates\n * @param {CodeValue} code Code to evaluate\n * @param {JavascriptParser} parser Parser\n * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n * @param {string} key the defined key\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {boolean|undefined|null=} asiSafe asi safe (undefined: unknown, null: unneeded)\n * @returns {string} code converted to string that evaluates\n */\n\n\nconst toCode = (code, parser, valueCacheVersions, key, runtimeTemplate, asiSafe) => {\n  if (code === null) {\n    return \"null\";\n  }\n\n  if (code === undefined) {\n    return \"undefined\";\n  }\n\n  if (Object.is(code, -0)) {\n    return \"-0\";\n  }\n\n  if (code instanceof RuntimeValue) {\n    return toCode(code.exec(parser, valueCacheVersions, key), parser, valueCacheVersions, key, runtimeTemplate, asiSafe);\n  }\n\n  if (code instanceof RegExp && code.toString) {\n    return code.toString();\n  }\n\n  if (typeof code === \"function\" && code.toString) {\n    return \"(\" + code.toString() + \")\";\n  }\n\n  if (typeof code === \"object\") {\n    return stringifyObj(code, parser, valueCacheVersions, key, runtimeTemplate, asiSafe);\n  }\n\n  if (typeof code === \"bigint\") {\n    return runtimeTemplate.supportsBigIntLiteral() ? `${code}n` : `BigInt(\"${code}\")`;\n  }\n\n  return code + \"\";\n};\n\nconst toCacheVersion = code => {\n  if (code === null) {\n    return \"null\";\n  }\n\n  if (code === undefined) {\n    return \"undefined\";\n  }\n\n  if (Object.is(code, -0)) {\n    return \"-0\";\n  }\n\n  if (code instanceof RuntimeValue) {\n    return code.getCacheVersion();\n  }\n\n  if (code instanceof RegExp && code.toString) {\n    return code.toString();\n  }\n\n  if (typeof code === \"function\" && code.toString) {\n    return \"(\" + code.toString() + \")\";\n  }\n\n  if (typeof code === \"object\") {\n    const items = Object.keys(code).map(key => ({\n      key,\n      value: toCacheVersion(code[key])\n    }));\n    if (items.some(_ref => {\n      let {\n        value\n      } = _ref;\n      return value === undefined;\n    })) return undefined;\n    return `{${items.map(_ref2 => {\n      let {\n        key,\n        value\n      } = _ref2;\n      return `${key}: ${value}`;\n    }).join(\", \")}}`;\n  }\n\n  if (typeof code === \"bigint\") {\n    return `${code}n`;\n  }\n\n  return code + \"\";\n};\n\nconst VALUE_DEP_PREFIX = \"webpack/DefinePlugin \";\nconst VALUE_DEP_MAIN = \"webpack/DefinePlugin_hash\";\n\nclass DefinePlugin {\n  /**\n   * Create a new define plugin\n   * @param {Record<string, CodeValue>} definitions A map of global object definitions\n   */\n  constructor(definitions) {\n    this.definitions = definitions;\n  }\n  /**\n   * @param {function({ module: NormalModule, key: string, readonly version: string | undefined }): CodeValuePrimitive} fn generator function\n   * @param {true | string[] | RuntimeValueOptions=} options options\n   * @returns {RuntimeValue} runtime value\n   */\n\n\n  static runtimeValue(fn, options) {\n    return new RuntimeValue(fn, options);\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const definitions = this.definitions;\n    compiler.hooks.compilation.tap(\"DefinePlugin\", (compilation, _ref3) => {\n      let {\n        normalModuleFactory\n      } = _ref3;\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      const {\n        runtimeTemplate\n      } = compilation;\n      const mainHash = createHash(compilation.outputOptions.hashFunction);\n      mainHash.update(\n      /** @type {string} */\n      compilation.valueCacheVersions.get(VALUE_DEP_MAIN) || \"\");\n      /**\n       * Handler\n       * @param {JavascriptParser} parser Parser\n       * @returns {void}\n       */\n\n      const handler = parser => {\n        const mainValue = compilation.valueCacheVersions.get(VALUE_DEP_MAIN);\n        parser.hooks.program.tap(\"DefinePlugin\", () => {\n          const {\n            buildInfo\n          } = parser.state.module;\n          if (!buildInfo.valueDependencies) buildInfo.valueDependencies = new Map();\n          buildInfo.valueDependencies.set(VALUE_DEP_MAIN, mainValue);\n        });\n\n        const addValueDependency = key => {\n          const {\n            buildInfo\n          } = parser.state.module;\n          buildInfo.valueDependencies.set(VALUE_DEP_PREFIX + key, compilation.valueCacheVersions.get(VALUE_DEP_PREFIX + key));\n        };\n\n        const withValueDependency = (key, fn) => function () {\n          addValueDependency(key);\n          return fn(...arguments);\n        };\n        /**\n         * Walk definitions\n         * @param {Object} definitions Definitions map\n         * @param {string} prefix Prefix string\n         * @returns {void}\n         */\n\n\n        const walkDefinitions = (definitions, prefix) => {\n          Object.keys(definitions).forEach(key => {\n            const code = definitions[key];\n\n            if (code && typeof code === \"object\" && !(code instanceof RuntimeValue) && !(code instanceof RegExp)) {\n              walkDefinitions(code, prefix + key + \".\");\n              applyObjectDefine(prefix + key, code);\n              return;\n            }\n\n            applyDefineKey(prefix, key);\n            applyDefine(prefix + key, code);\n          });\n        };\n        /**\n         * Apply define key\n         * @param {string} prefix Prefix\n         * @param {string} key Key\n         * @returns {void}\n         */\n\n\n        const applyDefineKey = (prefix, key) => {\n          const splittedKey = key.split(\".\");\n          splittedKey.slice(1).forEach((_, i) => {\n            const fullKey = prefix + splittedKey.slice(0, i + 1).join(\".\");\n            parser.hooks.canRename.for(fullKey).tap(\"DefinePlugin\", () => {\n              addValueDependency(key);\n              return true;\n            });\n          });\n        };\n        /**\n         * Apply Code\n         * @param {string} key Key\n         * @param {CodeValue} code Code\n         * @returns {void}\n         */\n\n\n        const applyDefine = (key, code) => {\n          const originalKey = key;\n          const isTypeof = /^typeof\\s+/.test(key);\n          if (isTypeof) key = key.replace(/^typeof\\s+/, \"\");\n          let recurse = false;\n          let recurseTypeof = false;\n\n          if (!isTypeof) {\n            parser.hooks.canRename.for(key).tap(\"DefinePlugin\", () => {\n              addValueDependency(originalKey);\n              return true;\n            });\n            parser.hooks.evaluateIdentifier.for(key).tap(\"DefinePlugin\", expr => {\n              /**\n               * this is needed in case there is a recursion in the DefinePlugin\n               * to prevent an endless recursion\n               * e.g.: new DefinePlugin({\n               * \"a\": \"b\",\n               * \"b\": \"a\"\n               * });\n               */\n              if (recurse) return;\n              addValueDependency(originalKey);\n              recurse = true;\n              const res = parser.evaluate(toCode(code, parser, compilation.valueCacheVersions, key, runtimeTemplate, null));\n              recurse = false;\n              res.setRange(expr.range);\n              return res;\n            });\n            parser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n              addValueDependency(originalKey);\n              const strCode = toCode(code, parser, compilation.valueCacheVersions, originalKey, runtimeTemplate, !parser.isAsiPosition(expr.range[0]));\n\n              if (/__webpack_require__\\s*(!?\\.)/.test(strCode)) {\n                return toConstantDependency(parser, strCode, [RuntimeGlobals.require])(expr);\n              } else if (/__webpack_require__/.test(strCode)) {\n                return toConstantDependency(parser, strCode, [RuntimeGlobals.requireScope])(expr);\n              } else {\n                return toConstantDependency(parser, strCode)(expr);\n              }\n            });\n          }\n\n          parser.hooks.evaluateTypeof.for(key).tap(\"DefinePlugin\", expr => {\n            /**\n             * this is needed in case there is a recursion in the DefinePlugin\n             * to prevent an endless recursion\n             * e.g.: new DefinePlugin({\n             * \"typeof a\": \"typeof b\",\n             * \"typeof b\": \"typeof a\"\n             * });\n             */\n            if (recurseTypeof) return;\n            recurseTypeof = true;\n            addValueDependency(originalKey);\n            const codeCode = toCode(code, parser, compilation.valueCacheVersions, originalKey, runtimeTemplate, null);\n            const typeofCode = isTypeof ? codeCode : \"typeof (\" + codeCode + \")\";\n            const res = parser.evaluate(typeofCode);\n            recurseTypeof = false;\n            res.setRange(expr.range);\n            return res;\n          });\n          parser.hooks.typeof.for(key).tap(\"DefinePlugin\", expr => {\n            addValueDependency(originalKey);\n            const codeCode = toCode(code, parser, compilation.valueCacheVersions, originalKey, runtimeTemplate, null);\n            const typeofCode = isTypeof ? codeCode : \"typeof (\" + codeCode + \")\";\n            const res = parser.evaluate(typeofCode);\n            if (!res.isString()) return;\n            return toConstantDependency(parser, JSON.stringify(res.string)).bind(parser)(expr);\n          });\n        };\n        /**\n         * Apply Object\n         * @param {string} key Key\n         * @param {Object} obj Object\n         * @returns {void}\n         */\n\n\n        const applyObjectDefine = (key, obj) => {\n          parser.hooks.canRename.for(key).tap(\"DefinePlugin\", () => {\n            addValueDependency(key);\n            return true;\n          });\n          parser.hooks.evaluateIdentifier.for(key).tap(\"DefinePlugin\", expr => {\n            addValueDependency(key);\n            return new BasicEvaluatedExpression().setTruthy().setSideEffects(false).setRange(expr.range);\n          });\n          parser.hooks.evaluateTypeof.for(key).tap(\"DefinePlugin\", withValueDependency(key, evaluateToString(\"object\")));\n          parser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n            addValueDependency(key);\n            const strCode = stringifyObj(obj, parser, compilation.valueCacheVersions, key, runtimeTemplate, !parser.isAsiPosition(expr.range[0]));\n\n            if (/__webpack_require__\\s*(!?\\.)/.test(strCode)) {\n              return toConstantDependency(parser, strCode, [RuntimeGlobals.require])(expr);\n            } else if (/__webpack_require__/.test(strCode)) {\n              return toConstantDependency(parser, strCode, [RuntimeGlobals.requireScope])(expr);\n            } else {\n              return toConstantDependency(parser, strCode)(expr);\n            }\n          });\n          parser.hooks.typeof.for(key).tap(\"DefinePlugin\", withValueDependency(key, toConstantDependency(parser, JSON.stringify(\"object\"))));\n        };\n\n        walkDefinitions(definitions, \"\");\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"DefinePlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"DefinePlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"DefinePlugin\", handler);\n      /**\n       * Walk definitions\n       * @param {Object} definitions Definitions map\n       * @param {string} prefix Prefix string\n       * @returns {void}\n       */\n\n      const walkDefinitionsForValues = (definitions, prefix) => {\n        Object.keys(definitions).forEach(key => {\n          const code = definitions[key];\n          const version = toCacheVersion(code);\n          const name = VALUE_DEP_PREFIX + prefix + key;\n          mainHash.update(\"|\" + prefix + key);\n          const oldVersion = compilation.valueCacheVersions.get(name);\n\n          if (oldVersion === undefined) {\n            compilation.valueCacheVersions.set(name, version);\n          } else if (oldVersion !== version) {\n            const warning = new WebpackError(`DefinePlugin\\nConflicting values for '${prefix + key}'`);\n            warning.details = `'${oldVersion}' !== '${version}'`;\n            warning.hideStack = true;\n            compilation.warnings.push(warning);\n          }\n\n          if (code && typeof code === \"object\" && !(code instanceof RuntimeValue) && !(code instanceof RegExp)) {\n            walkDefinitionsForValues(code, prefix + key + \".\");\n          }\n        });\n      };\n\n      walkDefinitionsForValues(definitions, \"\");\n      compilation.valueCacheVersions.set(VALUE_DEP_MAIN,\n      /** @type {string} */\n      mainHash.digest(\"hex\").slice(0, 8));\n    });\n  }\n\n}\n\nmodule.exports = DefinePlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/DefinePlugin.js"],"names":["RuntimeGlobals","require","WebpackError","ConstDependency","BasicEvaluatedExpression","evaluateToString","toConstantDependency","createHash","RuntimeValue","constructor","fn","options","Array","isArray","fileDependencies","exec","parser","valueCacheVersions","key","buildInfo","state","module","cacheable","dep","add","contextDependencies","missingDependencies","buildDependencies","version","get","VALUE_DEP_PREFIX","getCacheVersion","undefined","stringifyObj","obj","runtimeTemplate","asiSafe","code","arr","map","toCode","join","Object","keys","JSON","stringify","is","RegExp","toString","supportsBigIntLiteral","toCacheVersion","items","value","some","VALUE_DEP_MAIN","DefinePlugin","definitions","runtimeValue","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","mainHash","outputOptions","hashFunction","update","handler","mainValue","program","valueDependencies","Map","addValueDependency","withValueDependency","walkDefinitions","prefix","forEach","applyObjectDefine","applyDefineKey","applyDefine","splittedKey","split","slice","_","i","fullKey","canRename","for","originalKey","isTypeof","test","replace","recurse","recurseTypeof","evaluateIdentifier","expr","res","evaluate","setRange","range","expression","strCode","isAsiPosition","requireScope","evaluateTypeof","codeCode","typeofCode","typeof","isString","string","bind","setTruthy","setSideEffects","walkDefinitionsForValues","name","oldVersion","warning","details","hideStack","warnings","push","digest","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst WebpackError = require(\"./WebpackError\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst BasicEvaluatedExpression = require(\"./javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\nconst createHash = require(\"./util/createHash\");\n\n/** @typedef {import(\"estree\").Expression} Expression */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\n/** @typedef {null|undefined|RegExp|Function|string|number|boolean|bigint|undefined} CodeValuePrimitive */\n/** @typedef {RecursiveArrayOrRecord<CodeValuePrimitive|RuntimeValue>} CodeValue */\n\n/**\n * @typedef {Object} RuntimeValueOptions\n * @property {string[]=} fileDependencies\n * @property {string[]=} contextDependencies\n * @property {string[]=} missingDependencies\n * @property {string[]=} buildDependencies\n * @property {string|function(): string=} version\n */\n\nclass RuntimeValue {\n\t/**\n\t * @param {function({ module: NormalModule, key: string, readonly version: string | undefined }): CodeValuePrimitive} fn generator function\n\t * @param {true | string[] | RuntimeValueOptions=} options options\n\t */\n\tconstructor(fn, options) {\n\t\tthis.fn = fn;\n\t\tif (Array.isArray(options)) {\n\t\t\toptions = {\n\t\t\t\tfileDependencies: options\n\t\t\t};\n\t\t}\n\t\tthis.options = options || {};\n\t}\n\n\tget fileDependencies() {\n\t\treturn this.options === true ? true : this.options.fileDependencies;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n\t * @param {string} key the defined key\n\t * @returns {CodeValuePrimitive} code\n\t */\n\texec(parser, valueCacheVersions, key) {\n\t\tconst buildInfo = parser.state.module.buildInfo;\n\t\tif (this.options === true) {\n\t\t\tbuildInfo.cacheable = false;\n\t\t} else {\n\t\t\tif (this.options.fileDependencies) {\n\t\t\t\tfor (const dep of this.options.fileDependencies) {\n\t\t\t\t\tbuildInfo.fileDependencies.add(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.options.contextDependencies) {\n\t\t\t\tfor (const dep of this.options.contextDependencies) {\n\t\t\t\t\tbuildInfo.contextDependencies.add(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.options.missingDependencies) {\n\t\t\t\tfor (const dep of this.options.missingDependencies) {\n\t\t\t\t\tbuildInfo.missingDependencies.add(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.options.buildDependencies) {\n\t\t\t\tfor (const dep of this.options.buildDependencies) {\n\t\t\t\t\tbuildInfo.buildDependencies.add(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.fn({\n\t\t\tmodule: parser.state.module,\n\t\t\tkey,\n\t\t\tget version() {\n\t\t\t\treturn /** @type {string} */ (\n\t\t\t\t\tvalueCacheVersions.get(VALUE_DEP_PREFIX + key)\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCacheVersion() {\n\t\treturn this.options === true\n\t\t\t? undefined\n\t\t\t: (typeof this.options.version === \"function\"\n\t\t\t\t\t? this.options.version()\n\t\t\t\t\t: this.options.version) || \"unset\";\n\t}\n}\n\n/**\n * @param {any[]|{[k: string]: any}} obj obj\n * @param {JavascriptParser} parser Parser\n * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n * @param {string} key the defined key\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {boolean|undefined|null=} asiSafe asi safe (undefined: unknown, null: unneeded)\n * @returns {string} code converted to string that evaluates\n */\nconst stringifyObj = (\n\tobj,\n\tparser,\n\tvalueCacheVersions,\n\tkey,\n\truntimeTemplate,\n\tasiSafe\n) => {\n\tlet code;\n\tlet arr = Array.isArray(obj);\n\tif (arr) {\n\t\tcode = `[${obj\n\t\t\t.map(code =>\n\t\t\t\ttoCode(code, parser, valueCacheVersions, key, runtimeTemplate, null)\n\t\t\t)\n\t\t\t.join(\",\")}]`;\n\t} else {\n\t\tcode = `{${Object.keys(obj)\n\t\t\t.map(key => {\n\t\t\t\tconst code = obj[key];\n\t\t\t\treturn (\n\t\t\t\t\tJSON.stringify(key) +\n\t\t\t\t\t\":\" +\n\t\t\t\t\ttoCode(code, parser, valueCacheVersions, key, runtimeTemplate, null)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.join(\",\")}}`;\n\t}\n\n\tswitch (asiSafe) {\n\t\tcase null:\n\t\t\treturn code;\n\t\tcase true:\n\t\t\treturn arr ? code : `(${code})`;\n\t\tcase false:\n\t\t\treturn arr ? `;${code}` : `;(${code})`;\n\t\tdefault:\n\t\t\treturn `/*#__PURE__*/Object(${code})`;\n\t}\n};\n\n/**\n * Convert code to a string that evaluates\n * @param {CodeValue} code Code to evaluate\n * @param {JavascriptParser} parser Parser\n * @param {Map<string, string | Set<string>>} valueCacheVersions valueCacheVersions\n * @param {string} key the defined key\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @param {boolean|undefined|null=} asiSafe asi safe (undefined: unknown, null: unneeded)\n * @returns {string} code converted to string that evaluates\n */\nconst toCode = (\n\tcode,\n\tparser,\n\tvalueCacheVersions,\n\tkey,\n\truntimeTemplate,\n\tasiSafe\n) => {\n\tif (code === null) {\n\t\treturn \"null\";\n\t}\n\tif (code === undefined) {\n\t\treturn \"undefined\";\n\t}\n\tif (Object.is(code, -0)) {\n\t\treturn \"-0\";\n\t}\n\tif (code instanceof RuntimeValue) {\n\t\treturn toCode(\n\t\t\tcode.exec(parser, valueCacheVersions, key),\n\t\t\tparser,\n\t\t\tvalueCacheVersions,\n\t\t\tkey,\n\t\t\truntimeTemplate,\n\t\t\tasiSafe\n\t\t);\n\t}\n\tif (code instanceof RegExp && code.toString) {\n\t\treturn code.toString();\n\t}\n\tif (typeof code === \"function\" && code.toString) {\n\t\treturn \"(\" + code.toString() + \")\";\n\t}\n\tif (typeof code === \"object\") {\n\t\treturn stringifyObj(\n\t\t\tcode,\n\t\t\tparser,\n\t\t\tvalueCacheVersions,\n\t\t\tkey,\n\t\t\truntimeTemplate,\n\t\t\tasiSafe\n\t\t);\n\t}\n\tif (typeof code === \"bigint\") {\n\t\treturn runtimeTemplate.supportsBigIntLiteral()\n\t\t\t? `${code}n`\n\t\t\t: `BigInt(\"${code}\")`;\n\t}\n\treturn code + \"\";\n};\n\nconst toCacheVersion = code => {\n\tif (code === null) {\n\t\treturn \"null\";\n\t}\n\tif (code === undefined) {\n\t\treturn \"undefined\";\n\t}\n\tif (Object.is(code, -0)) {\n\t\treturn \"-0\";\n\t}\n\tif (code instanceof RuntimeValue) {\n\t\treturn code.getCacheVersion();\n\t}\n\tif (code instanceof RegExp && code.toString) {\n\t\treturn code.toString();\n\t}\n\tif (typeof code === \"function\" && code.toString) {\n\t\treturn \"(\" + code.toString() + \")\";\n\t}\n\tif (typeof code === \"object\") {\n\t\tconst items = Object.keys(code).map(key => ({\n\t\t\tkey,\n\t\t\tvalue: toCacheVersion(code[key])\n\t\t}));\n\t\tif (items.some(({ value }) => value === undefined)) return undefined;\n\t\treturn `{${items.map(({ key, value }) => `${key}: ${value}`).join(\", \")}}`;\n\t}\n\tif (typeof code === \"bigint\") {\n\t\treturn `${code}n`;\n\t}\n\treturn code + \"\";\n};\n\nconst VALUE_DEP_PREFIX = \"webpack/DefinePlugin \";\nconst VALUE_DEP_MAIN = \"webpack/DefinePlugin_hash\";\n\nclass DefinePlugin {\n\t/**\n\t * Create a new define plugin\n\t * @param {Record<string, CodeValue>} definitions A map of global object definitions\n\t */\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\t/**\n\t * @param {function({ module: NormalModule, key: string, readonly version: string | undefined }): CodeValuePrimitive} fn generator function\n\t * @param {true | string[] | RuntimeValueOptions=} options options\n\t * @returns {RuntimeValue} runtime value\n\t */\n\tstatic runtimeValue(fn, options) {\n\t\treturn new RuntimeValue(fn, options);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DefinePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst { runtimeTemplate } = compilation;\n\n\t\t\t\tconst mainHash = createHash(compilation.outputOptions.hashFunction);\n\t\t\t\tmainHash.update(\n\t\t\t\t\t/** @type {string} */ (\n\t\t\t\t\t\tcompilation.valueCacheVersions.get(VALUE_DEP_MAIN)\n\t\t\t\t\t) || \"\"\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * Handler\n\t\t\t\t * @param {JavascriptParser} parser Parser\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tconst mainValue = compilation.valueCacheVersions.get(VALUE_DEP_MAIN);\n\t\t\t\t\tparser.hooks.program.tap(\"DefinePlugin\", () => {\n\t\t\t\t\t\tconst { buildInfo } = parser.state.module;\n\t\t\t\t\t\tif (!buildInfo.valueDependencies)\n\t\t\t\t\t\t\tbuildInfo.valueDependencies = new Map();\n\t\t\t\t\t\tbuildInfo.valueDependencies.set(VALUE_DEP_MAIN, mainValue);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst addValueDependency = key => {\n\t\t\t\t\t\tconst { buildInfo } = parser.state.module;\n\t\t\t\t\t\tbuildInfo.valueDependencies.set(\n\t\t\t\t\t\t\tVALUE_DEP_PREFIX + key,\n\t\t\t\t\t\t\tcompilation.valueCacheVersions.get(VALUE_DEP_PREFIX + key)\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tconst withValueDependency =\n\t\t\t\t\t\t(key, fn) =>\n\t\t\t\t\t\t(...args) => {\n\t\t\t\t\t\t\taddValueDependency(key);\n\t\t\t\t\t\t\treturn fn(...args);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Walk definitions\n\t\t\t\t\t * @param {Object} definitions Definitions map\n\t\t\t\t\t * @param {string} prefix Prefix string\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst walkDefinitions = (definitions, prefix) => {\n\t\t\t\t\t\tObject.keys(definitions).forEach(key => {\n\t\t\t\t\t\t\tconst code = definitions[key];\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcode &&\n\t\t\t\t\t\t\t\ttypeof code === \"object\" &&\n\t\t\t\t\t\t\t\t!(code instanceof RuntimeValue) &&\n\t\t\t\t\t\t\t\t!(code instanceof RegExp)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\twalkDefinitions(code, prefix + key + \".\");\n\t\t\t\t\t\t\t\tapplyObjectDefine(prefix + key, code);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tapplyDefineKey(prefix, key);\n\t\t\t\t\t\t\tapplyDefine(prefix + key, code);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply define key\n\t\t\t\t\t * @param {string} prefix Prefix\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyDefineKey = (prefix, key) => {\n\t\t\t\t\t\tconst splittedKey = key.split(\".\");\n\t\t\t\t\t\tsplittedKey.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\tconst fullKey = prefix + splittedKey.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\tparser.hooks.canRename.for(fullKey).tap(\"DefinePlugin\", () => {\n\t\t\t\t\t\t\t\taddValueDependency(key);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply Code\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @param {CodeValue} code Code\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyDefine = (key, code) => {\n\t\t\t\t\t\tconst originalKey = key;\n\t\t\t\t\t\tconst isTypeof = /^typeof\\s+/.test(key);\n\t\t\t\t\t\tif (isTypeof) key = key.replace(/^typeof\\s+/, \"\");\n\t\t\t\t\t\tlet recurse = false;\n\t\t\t\t\t\tlet recurseTypeof = false;\n\t\t\t\t\t\tif (!isTypeof) {\n\t\t\t\t\t\t\tparser.hooks.canRename.for(key).tap(\"DefinePlugin\", () => {\n\t\t\t\t\t\t\t\taddValueDependency(originalKey);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\n\t\t\t\t\t\t\t\t\t * to prevent an endless recursion\n\t\t\t\t\t\t\t\t\t * e.g.: new DefinePlugin({\n\t\t\t\t\t\t\t\t\t * \"a\": \"b\",\n\t\t\t\t\t\t\t\t\t * \"b\": \"a\"\n\t\t\t\t\t\t\t\t\t * });\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tif (recurse) return;\n\t\t\t\t\t\t\t\t\taddValueDependency(originalKey);\n\t\t\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\t\t\tconst res = parser.evaluate(\n\t\t\t\t\t\t\t\t\t\ttoCode(\n\t\t\t\t\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tcompilation.valueCacheVersions,\n\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\trecurse = false;\n\t\t\t\t\t\t\t\t\tres.setRange(expr.range);\n\t\t\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tparser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t\taddValueDependency(originalKey);\n\t\t\t\t\t\t\t\tconst strCode = toCode(\n\t\t\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tcompilation.valueCacheVersions,\n\t\t\t\t\t\t\t\t\toriginalKey,\n\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\t!parser.isAsiPosition(expr.range[0])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (/__webpack_require__\\s*(!?\\.)/.test(strCode)) {\n\t\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode, [\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.require\n\t\t\t\t\t\t\t\t\t])(expr);\n\t\t\t\t\t\t\t\t} else if (/__webpack_require__/.test(strCode)) {\n\t\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode, [\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.requireScope\n\t\t\t\t\t\t\t\t\t])(expr);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode)(expr);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.evaluateTypeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * this is needed in case there is a recursion in the DefinePlugin\n\t\t\t\t\t\t\t * to prevent an endless recursion\n\t\t\t\t\t\t\t * e.g.: new DefinePlugin({\n\t\t\t\t\t\t\t * \"typeof a\": \"typeof b\",\n\t\t\t\t\t\t\t * \"typeof b\": \"typeof a\"\n\t\t\t\t\t\t\t * });\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (recurseTypeof) return;\n\t\t\t\t\t\t\trecurseTypeof = true;\n\t\t\t\t\t\t\taddValueDependency(originalKey);\n\t\t\t\t\t\t\tconst codeCode = toCode(\n\t\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tcompilation.valueCacheVersions,\n\t\t\t\t\t\t\t\toriginalKey,\n\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst typeofCode = isTypeof\n\t\t\t\t\t\t\t\t? codeCode\n\t\t\t\t\t\t\t\t: \"typeof (\" + codeCode + \")\";\n\t\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\n\t\t\t\t\t\t\trecurseTypeof = false;\n\t\t\t\t\t\t\tres.setRange(expr.range);\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.typeof.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\taddValueDependency(originalKey);\n\t\t\t\t\t\t\tconst codeCode = toCode(\n\t\t\t\t\t\t\t\tcode,\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tcompilation.valueCacheVersions,\n\t\t\t\t\t\t\t\toriginalKey,\n\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst typeofCode = isTypeof\n\t\t\t\t\t\t\t\t? codeCode\n\t\t\t\t\t\t\t\t: \"typeof (\" + codeCode + \")\";\n\t\t\t\t\t\t\tconst res = parser.evaluate(typeofCode);\n\t\t\t\t\t\t\tif (!res.isString()) return;\n\t\t\t\t\t\t\treturn toConstantDependency(\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tJSON.stringify(res.string)\n\t\t\t\t\t\t\t).bind(parser)(expr);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Apply Object\n\t\t\t\t\t * @param {string} key Key\n\t\t\t\t\t * @param {Object} obj Object\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst applyObjectDefine = (key, obj) => {\n\t\t\t\t\t\tparser.hooks.canRename.for(key).tap(\"DefinePlugin\", () => {\n\t\t\t\t\t\t\taddValueDependency(key);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\t\taddValueDependency(key);\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setTruthy()\n\t\t\t\t\t\t\t\t\t.setSideEffects(false)\n\t\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefinePlugin\",\n\t\t\t\t\t\t\t\twithValueDependency(key, evaluateToString(\"object\"))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.expression.for(key).tap(\"DefinePlugin\", expr => {\n\t\t\t\t\t\t\taddValueDependency(key);\n\t\t\t\t\t\t\tconst strCode = stringifyObj(\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\tcompilation.valueCacheVersions,\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t!parser.isAsiPosition(expr.range[0])\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (/__webpack_require__\\s*(!?\\.)/.test(strCode)) {\n\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode, [\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.require\n\t\t\t\t\t\t\t\t])(expr);\n\t\t\t\t\t\t\t} else if (/__webpack_require__/.test(strCode)) {\n\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode, [\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.requireScope\n\t\t\t\t\t\t\t\t])(expr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn toConstantDependency(parser, strCode)(expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefinePlugin\",\n\t\t\t\t\t\t\t\twithValueDependency(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\twalkDefinitions(definitions, \"\");\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"DefinePlugin\", handler);\n\n\t\t\t\t/**\n\t\t\t\t * Walk definitions\n\t\t\t\t * @param {Object} definitions Definitions map\n\t\t\t\t * @param {string} prefix Prefix string\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst walkDefinitionsForValues = (definitions, prefix) => {\n\t\t\t\t\tObject.keys(definitions).forEach(key => {\n\t\t\t\t\t\tconst code = definitions[key];\n\t\t\t\t\t\tconst version = toCacheVersion(code);\n\t\t\t\t\t\tconst name = VALUE_DEP_PREFIX + prefix + key;\n\t\t\t\t\t\tmainHash.update(\"|\" + prefix + key);\n\t\t\t\t\t\tconst oldVersion = compilation.valueCacheVersions.get(name);\n\t\t\t\t\t\tif (oldVersion === undefined) {\n\t\t\t\t\t\t\tcompilation.valueCacheVersions.set(name, version);\n\t\t\t\t\t\t} else if (oldVersion !== version) {\n\t\t\t\t\t\t\tconst warning = new WebpackError(\n\t\t\t\t\t\t\t\t`DefinePlugin\\nConflicting values for '${prefix + key}'`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\twarning.details = `'${oldVersion}' !== '${version}'`;\n\t\t\t\t\t\t\twarning.hideStack = true;\n\t\t\t\t\t\t\tcompilation.warnings.push(warning);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcode &&\n\t\t\t\t\t\t\ttypeof code === \"object\" &&\n\t\t\t\t\t\t\t!(code instanceof RuntimeValue) &&\n\t\t\t\t\t\t\t!(code instanceof RegExp)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\twalkDefinitionsForValues(code, prefix + key + \".\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\twalkDefinitionsForValues(definitions, \"\");\n\n\t\t\t\tcompilation.valueCacheVersions.set(\n\t\t\t\t\tVALUE_DEP_MAIN,\n\t\t\t\t\t/** @type {string} */ (mainHash.digest(\"hex\").slice(0, 8))\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = DefinePlugin;\n"]},"metadata":{},"sourceType":"script"}