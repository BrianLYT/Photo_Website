{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst {\n  getDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\nconst {\n  ExportPresenceModes\n} = HarmonyImportDependency;\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n  constructor(request, sourceOrder, ids, name, range, exportPresenceMode, assertions) {\n    super(request, sourceOrder, assertions);\n    this.ids = ids;\n    this.name = name;\n    this.range = range;\n    this.exportPresenceMode = exportPresenceMode;\n    this.namespaceObjectAsContext = false;\n    this.call = undefined;\n    this.directImport = undefined;\n    this.shorthand = undefined;\n    this.asiSafe = undefined;\n    /** @type {Set<string> | boolean} */\n\n    this.usedByExports = undefined;\n  } // TODO webpack 6 remove\n\n\n  get id() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  getId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  setId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  get type() {\n    return \"harmony import specifier\";\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {string[]} the imported ids\n   */\n\n\n  getIds(moduleGraph) {\n    const meta = moduleGraph.getMetaIfExisting(this);\n    if (meta === undefined) return this.ids;\n    const ids = meta[idsSymbol];\n    return ids !== undefined ? ids : this.ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {string[]} ids the imported ids\n   * @returns {void}\n   */\n\n\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n   */\n\n\n  getCondition(moduleGraph) {\n    return getDependencyUsedByExportsCondition(this, this.usedByExports, moduleGraph);\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n\n\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    let ids = this.getIds(moduleGraph);\n    if (ids.length === 0) return Dependency.EXPORTS_OBJECT_REFERENCED;\n    let namespaceObjectAsContext = this.namespaceObjectAsContext;\n\n    if (ids[0] === \"default\") {\n      const selfModule = moduleGraph.getParentModule(this);\n      const importedModule = moduleGraph.getModule(this);\n\n      switch (importedModule.getExportsType(moduleGraph, selfModule.buildMeta.strictHarmonyModule)) {\n        case \"default-only\":\n        case \"default-with-named\":\n          if (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n          ids = ids.slice(1);\n          namespaceObjectAsContext = true;\n          break;\n\n        case \"dynamic\":\n          return Dependency.EXPORTS_OBJECT_REFERENCED;\n      }\n    }\n\n    if (this.call && !this.directImport && (namespaceObjectAsContext || ids.length > 1)) {\n      if (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n      ids = ids.slice(0, -1);\n    }\n\n    return [ids];\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {number} effective mode\n   */\n\n\n  _getEffectiveExportPresenceLevel(moduleGraph) {\n    if (this.exportPresenceMode !== ExportPresenceModes.AUTO) return this.exportPresenceMode;\n    return moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule ? ExportPresenceModes.ERROR : ExportPresenceModes.WARN;\n  }\n  /**\n   * Returns warnings\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[]} warnings\n   */\n\n\n  getWarnings(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.WARN) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * Returns errors\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[]} errors\n   */\n\n\n  getErrors(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.ERROR) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | undefined} errors\n   */\n\n\n  _getErrors(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n    return this.getLinkingErrors(moduleGraph, ids, `(imported as '${this.name}')`);\n  }\n  /**\n   * implement this method to allow the occurrence order plugin to count correctly\n   * @returns {number} count how often the id is used in this dependency\n   */\n\n\n  getNumberOfIdOccurrences() {\n    return 0;\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.ids);\n    write(this.name);\n    write(this.range);\n    write(this.exportPresenceMode);\n    write(this.namespaceObjectAsContext);\n    write(this.call);\n    write(this.directImport);\n    write(this.shorthand);\n    write(this.asiSafe);\n    write(this.usedByExports);\n    super.serialize(context);\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.ids = read();\n    this.name = read();\n    this.range = read();\n    this.exportPresenceMode = read();\n    this.namespaceObjectAsContext = read();\n    this.call = read();\n    this.directImport = read();\n    this.shorthand = read();\n    this.asiSafe = read();\n    this.usedByExports = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyImportSpecifierDependency, \"webpack/lib/dependencies/HarmonyImportSpecifierDependency\");\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {HarmonyImportSpecifierDependency} */\n    dependency;\n    const {\n      moduleGraph,\n      module,\n      runtime,\n      concatenationScope\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep); // Skip rendering depending when dependency is conditional\n\n    if (connection && !connection.isTargetActive(runtime)) return;\n    const ids = dep.getIds(moduleGraph);\n    let exportExpr;\n\n    if (connection && concatenationScope && concatenationScope.isModuleInScope(connection.module)) {\n      if (ids.length === 0) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        });\n      } else if (dep.namespaceObjectAsContext && ids.length === 1) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        }) + propertyAccess(ids);\n      } else {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          ids,\n          call: dep.call,\n          directImport: dep.directImport,\n          asiSafe: dep.asiSafe\n        });\n      }\n    } else {\n      super.apply(dependency, source, templateContext);\n      const {\n        runtimeTemplate,\n        initFragments,\n        runtimeRequirements\n      } = templateContext;\n      exportExpr = runtimeTemplate.exportFromImport({\n        moduleGraph,\n        module: moduleGraph.getModule(dep),\n        request: dep.request,\n        exportName: ids,\n        originModule: module,\n        asiSafe: dep.shorthand ? true : dep.asiSafe,\n        isCall: dep.call,\n        callContext: !dep.directImport,\n        defaultInterop: true,\n        importVar: dep.getImportVar(moduleGraph),\n        initFragments,\n        runtime,\n        runtimeRequirements\n      });\n    }\n\n    if (dep.shorthand) {\n      source.insert(dep.range[1], `: ${exportExpr}`);\n    } else {\n      source.replace(dep.range[0], dep.range[1] - 1, exportExpr);\n    }\n  }\n\n};\nmodule.exports = HarmonyImportSpecifierDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyImportSpecifierDependency.js"],"names":["Dependency","require","getDependencyUsedByExportsCondition","makeSerializable","propertyAccess","HarmonyImportDependency","idsSymbol","Symbol","ExportPresenceModes","HarmonyImportSpecifierDependency","constructor","request","sourceOrder","ids","name","range","exportPresenceMode","assertions","namespaceObjectAsContext","call","undefined","directImport","shorthand","asiSafe","usedByExports","id","Error","getId","setId","type","getIds","moduleGraph","meta","getMetaIfExisting","setIds","getMeta","getCondition","getModuleEvaluationSideEffectsState","getReferencedExports","runtime","length","EXPORTS_OBJECT_REFERENCED","selfModule","getParentModule","importedModule","getModule","getExportsType","buildMeta","strictHarmonyModule","slice","_getEffectiveExportPresenceLevel","AUTO","ERROR","WARN","getWarnings","exportsPresence","_getErrors","getErrors","getLinkingErrors","getNumberOfIdOccurrences","serialize","context","write","deserialize","read","Template","HarmonyImportSpecifierDependencyTemplate","apply","dependency","source","templateContext","dep","module","concatenationScope","connection","getConnection","isTargetActive","exportExpr","isModuleInScope","createModuleReference","runtimeTemplate","initFragments","runtimeRequirements","exportFromImport","exportName","originModule","isCall","callContext","defaultInterop","importVar","getImportVar","insert","replace","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst {\n\tgetDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\n\nconst { ExportPresenceModes } = HarmonyImportDependency;\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n\tconstructor(\n\t\trequest,\n\t\tsourceOrder,\n\t\tids,\n\t\tname,\n\t\trange,\n\t\texportPresenceMode,\n\t\tassertions\n\t) {\n\t\tsuper(request, sourceOrder, assertions);\n\t\tthis.ids = ids;\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.exportPresenceMode = exportPresenceMode;\n\t\tthis.namespaceObjectAsContext = false;\n\t\tthis.call = undefined;\n\t\tthis.directImport = undefined;\n\t\tthis.shorthand = undefined;\n\t\tthis.asiSafe = undefined;\n\t\t/** @type {Set<string> | boolean} */\n\t\tthis.usedByExports = undefined;\n\t}\n\n\t// TODO webpack 6 remove\n\tget id() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tgetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tsetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\tget type() {\n\t\treturn \"harmony import specifier\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string[]} the imported ids\n\t */\n\tgetIds(moduleGraph) {\n\t\tconst meta = moduleGraph.getMetaIfExisting(this);\n\t\tif (meta === undefined) return this.ids;\n\t\tconst ids = meta[idsSymbol];\n\t\treturn ids !== undefined ? ids : this.ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {string[]} ids the imported ids\n\t * @returns {void}\n\t */\n\tsetIds(moduleGraph, ids) {\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn getDependencyUsedByExportsCondition(\n\t\t\tthis,\n\t\t\tthis.usedByExports,\n\t\t\tmoduleGraph\n\t\t);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tlet ids = this.getIds(moduleGraph);\n\t\tif (ids.length === 0) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\tlet namespaceObjectAsContext = this.namespaceObjectAsContext;\n\t\tif (ids[0] === \"default\") {\n\t\t\tconst selfModule = moduleGraph.getParentModule(this);\n\t\t\tconst importedModule = moduleGraph.getModule(this);\n\t\t\tswitch (\n\t\t\t\timportedModule.getExportsType(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tselfModule.buildMeta.strictHarmonyModule\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcase \"default-only\":\n\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\tif (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t\t\tids = ids.slice(1);\n\t\t\t\t\tnamespaceObjectAsContext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dynamic\":\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.call &&\n\t\t\t!this.directImport &&\n\t\t\t(namespaceObjectAsContext || ids.length > 1)\n\t\t) {\n\t\t\tif (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\tids = ids.slice(0, -1);\n\t\t}\n\n\t\treturn [ids];\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {number} effective mode\n\t */\n\t_getEffectiveExportPresenceLevel(moduleGraph) {\n\t\tif (this.exportPresenceMode !== ExportPresenceModes.AUTO)\n\t\t\treturn this.exportPresenceMode;\n\t\treturn moduleGraph.getParentModule(this).buildMeta.strictHarmonyModule\n\t\t\t? ExportPresenceModes.ERROR\n\t\t\t: ExportPresenceModes.WARN;\n\t}\n\n\t/**\n\t * Returns warnings\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[]} warnings\n\t */\n\tgetWarnings(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.WARN) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns errors\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[]} errors\n\t */\n\tgetErrors(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.ERROR) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | undefined} errors\n\t */\n\t_getErrors(moduleGraph) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\treturn this.getLinkingErrors(\n\t\t\tmoduleGraph,\n\t\t\tids,\n\t\t\t`(imported as '${this.name}')`\n\t\t);\n\t}\n\n\t/**\n\t * implement this method to allow the occurrence order plugin to count correctly\n\t * @returns {number} count how often the id is used in this dependency\n\t */\n\tgetNumberOfIdOccurrences() {\n\t\treturn 0;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.ids);\n\t\twrite(this.name);\n\t\twrite(this.range);\n\t\twrite(this.exportPresenceMode);\n\t\twrite(this.namespaceObjectAsContext);\n\t\twrite(this.call);\n\t\twrite(this.directImport);\n\t\twrite(this.shorthand);\n\t\twrite(this.asiSafe);\n\t\twrite(this.usedByExports);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.ids = read();\n\t\tthis.name = read();\n\t\tthis.range = read();\n\t\tthis.exportPresenceMode = read();\n\t\tthis.namespaceObjectAsContext = read();\n\t\tthis.call = read();\n\t\tthis.directImport = read();\n\t\tthis.shorthand = read();\n\t\tthis.asiSafe = read();\n\t\tthis.usedByExports = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyImportSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyImportSpecifierDependency\"\n);\n\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends (\n\tHarmonyImportDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyImportSpecifierDependency} */ (dependency);\n\t\tconst { moduleGraph, module, runtime, concatenationScope } =\n\t\t\ttemplateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\n\n\t\tconst ids = dep.getIds(moduleGraph);\n\n\t\tlet exportExpr;\n\t\tif (\n\t\t\tconnection &&\n\t\t\tconcatenationScope &&\n\t\t\tconcatenationScope.isModuleInScope(connection.module)\n\t\t) {\n\t\t\tif (ids.length === 0) {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if (dep.namespaceObjectAsContext && ids.length === 1) {\n\t\t\t\texportExpr =\n\t\t\t\t\tconcatenationScope.createModuleReference(connection.module, {\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}) + propertyAccess(ids);\n\t\t\t} else {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tcall: dep.call,\n\t\t\t\t\t\tdirectImport: dep.directImport,\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.apply(dependency, source, templateContext);\n\n\t\t\tconst { runtimeTemplate, initFragments, runtimeRequirements } =\n\t\t\t\ttemplateContext;\n\n\t\t\texportExpr = runtimeTemplate.exportFromImport({\n\t\t\t\tmoduleGraph,\n\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\trequest: dep.request,\n\t\t\t\texportName: ids,\n\t\t\t\toriginModule: module,\n\t\t\t\tasiSafe: dep.shorthand ? true : dep.asiSafe,\n\t\t\t\tisCall: dep.call,\n\t\t\t\tcallContext: !dep.directImport,\n\t\t\t\tdefaultInterop: true,\n\t\t\t\timportVar: dep.getImportVar(moduleGraph),\n\t\t\t\tinitFragments,\n\t\t\t\truntime,\n\t\t\t\truntimeRequirements\n\t\t\t});\n\t\t}\n\t\tif (dep.shorthand) {\n\t\t\tsource.insert(dep.range[1], `: ${exportExpr}`);\n\t\t} else {\n\t\t\tsource.replace(dep.range[0], dep.range[1] - 1, exportExpr);\n\t\t}\n\t}\n};\n\nmodule.exports = HarmonyImportSpecifierDependency;\n"]},"metadata":{},"sourceType":"script"}