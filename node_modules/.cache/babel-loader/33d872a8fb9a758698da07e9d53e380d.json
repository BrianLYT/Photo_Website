{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\n\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\n\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\n\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\n\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\n\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\n\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\n\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\n\nconst walkCssTokens = require(\"./walkCssTokens\");\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\nconst cssUnescape = str => {\n  return str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n};\n\nclass LocConverter {\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n\n        let i = str.lastIndexOf(\"\\n\");\n\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n\n        this.column = pos - i;\n      }\n\n      this.pos = pos;\n    }\n\n    return this;\n  }\n\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3; // TODO implement layer and supports for @import\n\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\n\nconst explainMode = mode => {\n  switch (mode) {\n    case CSS_MODE_TOP_LEVEL:\n      return \"parsing top level css\";\n\n    case CSS_MODE_IN_RULE:\n      return \"parsing css rule content (global)\";\n\n    case CSS_MODE_IN_LOCAL_RULE:\n      return \"parsing css rule content (local)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_URL:\n      return \"parsing @import (expecting url)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n      return \"parsing @import (expecting optionally supports or media query)\";\n\n    case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n      return \"parsing @import (expecting optionally media query)\";\n\n    case CSS_MODE_AT_OTHER:\n      return \"parsing at-rule\";\n\n    default:\n      return mode;\n  }\n};\n\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowPseudoBlocks = true,\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowPseudoBlocks = allowPseudoBlocks;\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n\n\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n\n    const module = state.module;\n    const declaredCssVariables = new Set();\n    const locConverter = new LocConverter(source);\n    let mode = CSS_MODE_TOP_LEVEL;\n    let modePos = 0;\n    let modeNestingLevel = 0;\n    let modeData = undefined;\n    let singleClassSelector = undefined;\n    let lastIdentifier = undefined;\n    const modeStack = [];\n\n    const isTopLevelLocal = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n\n    const eatWhiteLine = (input, pos) => {\n      for (;;) {\n        const cc = input.charCodeAt(pos);\n\n        if (cc === 32 || cc === 9) {\n          pos++;\n          continue;\n        }\n\n        if (cc === 10) pos++;\n        break;\n      }\n\n      return pos;\n    };\n\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n\n        const newPos = eater(input, pos);\n\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n\n        if (pos === input.length) break;\n      }\n\n      return [pos, text.trimRight()];\n    };\n\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`);\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`);\n        }\n\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`);\n        }\n\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n\n      pos++;\n      if (pos === input.length) return pos;\n      pos = eatWhiteLine(input, pos);\n      return pos;\n    };\n\n    const eatPropertyName = eatUntil(\":{};\");\n\n    const processLocalDeclaration = (input, pos) => {\n      modeData = undefined;\n      const start = pos;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n      pos = propertyNameEnd + 1;\n\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (propertyName === \"animation-name\" || propertyName === \"animation\") {\n        modeData = \"animation\";\n        lastIdentifier = undefined;\n      }\n\n      return pos;\n    };\n\n    const processDeclarationValueDone = (input, pos) => {\n      if (modeData === \"animation\" && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n    };\n\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        const value = cssUnescape(input.slice(contentStart, contentEnd));\n\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = value;\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n            throw new Error(`Unexpected ${input.slice(start, end)} at ${start} during ${explainMode(mode)}`);\n\n          default:\n            {\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = cssUnescape(input.slice(start + 1, end - 1));\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n        }\n\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end);\n\n        if (name === \"@namespace\") {\n          throw new Error(\"@namespace is not supported in bundled CSS\");\n        }\n\n        if (name === \"@import\") {\n          if (mode !== CSS_MODE_TOP_LEVEL) {\n            throw new Error(`Unexpected @import at ${start} during ${explainMode(mode)}`);\n          }\n\n          mode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n          modePos = end;\n          modeData = {\n            start: start,\n            url: undefined,\n            supports: undefined\n          };\n        }\n\n        if (name === \"@keyframes\") {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          if (pos === input.length) return pos;\n\n          if (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n            throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`);\n          }\n\n          mode = CSS_MODE_IN_LOCAL_RULE;\n          modeNestingLevel = 1;\n          return pos + 1;\n        }\n\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            throw new Error(`Expected URL for @import at ${start}`);\n\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n            {\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(modeData.start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              end = eatWhiteLine(input, end);\n              const media = input.slice(modePos, start).trim();\n              const dep = new CssImportDependency(modeData.url, [modeData.start, end], modeData.supports, media);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              break;\n            }\n\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              processDeclarationValueDone(input, start);\n              return processLocalDeclaration(input, end);\n            }\n\n          case CSS_MODE_IN_RULE:\n            {\n              return end;\n            }\n        }\n\n        mode = CSS_MODE_TOP_LEVEL;\n        modeData = undefined;\n        singleClassSelector = undefined;\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            mode = isTopLevelLocal() ? CSS_MODE_IN_LOCAL_RULE : CSS_MODE_IN_RULE;\n            modeNestingLevel = 1;\n            if (mode === CSS_MODE_IN_LOCAL_RULE) return processLocalDeclaration(input, end);\n            break;\n\n          case CSS_MODE_IN_RULE:\n          case CSS_MODE_IN_LOCAL_RULE:\n            modeNestingLevel++;\n            break;\n        }\n\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n\n          /* falls through */\n\n          case CSS_MODE_IN_RULE:\n            if (--modeNestingLevel === 0) {\n              mode = CSS_MODE_TOP_LEVEL;\n              modeData = undefined;\n              singleClassSelector = undefined;\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      id: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (isTopLevelLocal()) {\n              const name = input.slice(start + 1, end);\n              const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      identifier: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            if (modeData === \"animation\") {\n              lastIdentifier = [start, end];\n            }\n\n            break;\n        }\n\n        return end;\n      },\n      class: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (isTopLevelLocal()) {\n                const name = input.slice(start + 1, end);\n                const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                if (singleClassSelector === undefined) singleClassSelector = name;\n              } else {\n                singleClassSelector = false;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              modeStack.push(false);\n              break;\n            }\n        }\n\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const newModeData = modeStack.pop();\n\n              if (newModeData !== false) {\n                modeData = newModeData;\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        singleClassSelector = false;\n\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end);\n\n              if (this.allowModeSwitch && name === \":global\") {\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowPseudoBlocks && name === \":export\") {\n                const pos = parseExports(input, end);\n                const dep = new ConstDependency(\"\", [start, pos]);\n                module.addPresentationalDependency(dep);\n                return pos;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end - 1);\n\n              if (this.allowModeSwitch && name === \":global\") {\n                modeStack.push(modeData);\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeStack.push(modeData);\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else {\n                modeStack.push(false);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      function: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              const name = input.slice(start, end - 1);\n\n              if (name === \"var\") {\n                let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n                if (pos === input.length) return pos;\n                const [newPos, name] = eatText(input, pos, eatNameInVar);\n                if (!name.startsWith(\"--\")) return end;\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(pos);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(newPos);\n                const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                return newPos;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      comma: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            modeData = undefined;\n            modeStack.length = 0;\n            break;\n\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n            break;\n        }\n\n        return end;\n      }\n    });\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n\n}\n\nmodule.exports = CssParser;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/css/CssParser.js"],"names":["Parser","require","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","cssUnescape","str","replace","match","length","String","fromCharCode","parseInt","slice","trim","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_RULE","CSS_MODE_IN_LOCAL_RULE","CSS_MODE_AT_IMPORT_EXPECT_URL","CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS","CSS_MODE_AT_IMPORT_EXPECT_MEDIA","CSS_MODE_AT_OTHER","explainMode","mode","CssParser","allowPseudoBlocks","allowModeSwitch","defaultMode","parse","source","state","Buffer","isBuffer","toString","Error","module","declaredCssVariables","Set","locConverter","modePos","modeNestingLevel","modeData","undefined","singleClassSelector","lastIdentifier","modeStack","isTopLevelLocal","eatWhiteLine","cc","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","eatText","eater","text","newPos","eatComments","trimRight","eatExportName","eatExportValue","parseExports","eatWhitespaceAndComments","start","name","value","dep","sl","sc","el","ec","setLoc","addDependency","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatKeyframes","eatNameInVar","isSelector","url","end","contentStart","contentEnd","addCodeGenerationDependency","string","atKeyword","supports","semicolon","media","leftCurlyBracket","rightCurlyBracket","id","identifier","class","leftParenthesis","push","rightParenthesis","newModeData","pop","addPresentationalDependency","pseudoClass","pseudoFunction","function","comma","buildInfo","strict","buildMeta","exportsType","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\nconst cssUnescape = str => {\n\treturn str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n\t\tif (match.length > 2) {\n\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t} else {\n\t\t\treturn match[1];\n\t\t}\n\t});\n};\n\nclass LocConverter {\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\n// TODO implement layer and supports for @import\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\n\nconst explainMode = mode => {\n\tswitch (mode) {\n\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\treturn \"parsing top level css\";\n\t\tcase CSS_MODE_IN_RULE:\n\t\t\treturn \"parsing css rule content (global)\";\n\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\treturn \"parsing css rule content (local)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\treturn \"parsing @import (expecting url)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\treturn \"parsing @import (expecting optionally supports or media query)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\treturn \"parsing @import (expecting optionally media query)\";\n\t\tcase CSS_MODE_AT_OTHER:\n\t\t\treturn \"parsing at-rule\";\n\t\tdefault:\n\t\t\treturn mode;\n\t}\n};\n\nclass CssParser extends Parser {\n\tconstructor({\n\t\tallowPseudoBlocks = true,\n\t\tallowModeSwitch = true,\n\t\tdefaultMode = \"global\"\n\t} = {}) {\n\t\tsuper();\n\t\tthis.allowPseudoBlocks = allowPseudoBlocks;\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\n\t\tconst declaredCssVariables = new Set();\n\n\t\tconst locConverter = new LocConverter(source);\n\t\tlet mode = CSS_MODE_TOP_LEVEL;\n\t\tlet modePos = 0;\n\t\tlet modeNestingLevel = 0;\n\t\tlet modeData = undefined;\n\t\tlet singleClassSelector = undefined;\n\t\tlet lastIdentifier = undefined;\n\t\tconst modeStack = [];\n\t\tconst isTopLevelLocal = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\tconst eatWhiteLine = (input, pos) => {\n\t\t\tfor (;;) {\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === 32 || cc === 9) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (cc === 10) pos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimRight()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`\n\t\t\t\t);\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\tconst processLocalDeclaration = (input, pos) => {\n\t\t\tmodeData = undefined;\n\t\t\tconst start = pos;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\tpropertyName === \"animation-name\" ||\n\t\t\t\tpropertyName === \"animation\"\n\t\t\t) {\n\t\t\t\tmodeData = \"animation\";\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst processDeclarationValueDone = (input, pos) => {\n\t\t\tif (modeData === \"animation\" && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t};\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tconst value = cssUnescape(input.slice(contentStart, contentEnd));\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = value;\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input.slice(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t)} at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = cssUnescape(input.slice(start + 1, end - 1));\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tthrow new Error(\"@namespace is not supported in bundled CSS\");\n\t\t\t\t}\n\t\t\t\tif (name === \"@import\") {\n\t\t\t\t\tif (mode !== CSS_MODE_TOP_LEVEL) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected @import at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n\t\t\t\t\tmodePos = end;\n\t\t\t\t\tmodeData = {\n\t\t\t\t\t\tstart: start,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\tsupports: undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (name === \"@keyframes\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tif (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_IN_LOCAL_RULE;\n\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\t\t\t\tthrow new Error(`Expected URL for @import at ${start}`);\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS: {\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(modeData.start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tend = eatWhiteLine(input, end);\n\t\t\t\t\t\tconst media = input.slice(modePos, start).trim();\n\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\tmodeData.url,\n\t\t\t\t\t\t\t[modeData.start, end],\n\t\t\t\t\t\t\tmodeData.supports,\n\t\t\t\t\t\t\tmedia\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_RULE: {\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\tmodeData = undefined;\n\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tmode = isTopLevelLocal()\n\t\t\t\t\t\t\t? CSS_MODE_IN_LOCAL_RULE\n\t\t\t\t\t\t\t: CSS_MODE_IN_RULE;\n\t\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\t\tif (mode === CSS_MODE_IN_LOCAL_RULE)\n\t\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tmodeNestingLevel++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\t\tif (--modeNestingLevel === 0) {\n\t\t\t\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tif (modeData === \"animation\") {\n\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tif (singleClassSelector === undefined) singleClassSelector = name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsingleClassSelector = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst newModeData = modeStack.pop();\n\t\t\t\t\t\tif (newModeData !== false) {\n\t\t\t\t\t\t\tmodeData = newModeData;\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowPseudoBlocks && name === \":export\") {\n\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\tmodeStack.length = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"]},"metadata":{},"sourceType":"script"}