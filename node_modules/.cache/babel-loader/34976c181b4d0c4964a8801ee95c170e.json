{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst LogType = Object.freeze({\n  error:\n  /** @type {\"error\"} */\n  \"error\",\n  // message, c style arguments\n  warn:\n  /** @type {\"warn\"} */\n  \"warn\",\n  // message, c style arguments\n  info:\n  /** @type {\"info\"} */\n  \"info\",\n  // message, c style arguments\n  log:\n  /** @type {\"log\"} */\n  \"log\",\n  // message, c style arguments\n  debug:\n  /** @type {\"debug\"} */\n  \"debug\",\n  // message, c style arguments\n  trace:\n  /** @type {\"trace\"} */\n  \"trace\",\n  // no arguments\n  group:\n  /** @type {\"group\"} */\n  \"group\",\n  // [label]\n  groupCollapsed:\n  /** @type {\"groupCollapsed\"} */\n  \"groupCollapsed\",\n  // [label]\n  groupEnd:\n  /** @type {\"groupEnd\"} */\n  \"groupEnd\",\n  // [label]\n  profile:\n  /** @type {\"profile\"} */\n  \"profile\",\n  // [profileName]\n  profileEnd:\n  /** @type {\"profileEnd\"} */\n  \"profileEnd\",\n  // [profileName]\n  time:\n  /** @type {\"time\"} */\n  \"time\",\n  // name, time as [seconds, nanoseconds]\n  clear:\n  /** @type {\"clear\"} */\n  \"clear\",\n  // no arguments\n  status:\n  /** @type {\"status\"} */\n  \"status\" // message, arguments\n\n});\nexports.LogType = LogType;\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\nconst TIMERS_AGGREGATES_SYMBOL = Symbol(\"webpack logger aggregated times\");\n\nclass WebpackLogger {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n   */\n  constructor(log, getChildLogger) {\n    this[LOG_SYMBOL] = log;\n    this.getChildLogger = getChildLogger;\n  }\n\n  error() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this[LOG_SYMBOL](LogType.error, args);\n  }\n\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this[LOG_SYMBOL](LogType.warn, args);\n  }\n\n  info() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this[LOG_SYMBOL](LogType.info, args);\n  }\n\n  log() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this[LOG_SYMBOL](LogType.log, args);\n  }\n\n  debug() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this[LOG_SYMBOL](LogType.debug, args);\n  }\n\n  assert(assertion) {\n    if (!assertion) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }\n\n  trace() {\n    this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n  }\n\n  clear() {\n    this[LOG_SYMBOL](LogType.clear);\n  }\n\n  status() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this[LOG_SYMBOL](LogType.status, args);\n  }\n\n  group() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this[LOG_SYMBOL](LogType.group, args);\n  }\n\n  groupCollapsed() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this[LOG_SYMBOL](LogType.groupCollapsed, args);\n  }\n\n  groupEnd() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this[LOG_SYMBOL](LogType.groupEnd, args);\n  }\n\n  profile(label) {\n    this[LOG_SYMBOL](LogType.profile, [label]);\n  }\n\n  profileEnd(label) {\n    this[LOG_SYMBOL](LogType.profileEnd, [label]);\n  }\n\n  time(label) {\n    this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n    this[TIMERS_SYMBOL].set(label, process.hrtime());\n  }\n\n  timeLog(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  timeEnd(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[TIMERS_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  timeAggregate(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeAggregate()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[TIMERS_SYMBOL].delete(label);\n    this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n    const current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n\n    if (current !== undefined) {\n      if (time[1] + current[1] > 1e9) {\n        time[0] += current[0] + 1;\n        time[1] = time[1] - 1e9 + current[1];\n      } else {\n        time[0] += current[0];\n        time[1] += current[1];\n      }\n    }\n\n    this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n  }\n\n  timeAggregateEnd(label) {\n    if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n    const time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n    if (time === undefined) return;\n    this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n}\n\nexports.Logger = WebpackLogger;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/logging/Logger.js"],"names":["LogType","Object","freeze","error","warn","info","log","debug","trace","group","groupCollapsed","groupEnd","profile","profileEnd","time","clear","status","exports","LOG_SYMBOL","Symbol","TIMERS_SYMBOL","TIMERS_AGGREGATES_SYMBOL","WebpackLogger","constructor","getChildLogger","args","assert","assertion","label","Map","set","process","hrtime","timeLog","prev","get","Error","timeEnd","delete","timeAggregate","current","undefined","timeAggregateEnd","Logger"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC7BC,EAAAA,KAAK;AAAE;AAAwB,SADF;AACY;AACzCC,EAAAA,IAAI;AAAE;AAAuB,QAFA;AAES;AACtCC,EAAAA,IAAI;AAAE;AAAuB,QAHA;AAGS;AACtCC,EAAAA,GAAG;AAAE;AAAsB,OAJE;AAIM;AACnCC,EAAAA,KAAK;AAAE;AAAwB,SALF;AAKY;AAEzCC,EAAAA,KAAK;AAAE;AAAwB,SAPF;AAOY;AAEzCC,EAAAA,KAAK;AAAE;AAAwB,SATF;AASY;AACzCC,EAAAA,cAAc;AAAE;AAAiC,kBAVpB;AAUuC;AACpEC,EAAAA,QAAQ;AAAE;AAA2B,YAXR;AAWqB;AAElDC,EAAAA,OAAO;AAAE;AAA0B,WAbN;AAakB;AAC/CC,EAAAA,UAAU;AAAE;AAA6B,cAdZ;AAc2B;AAExDC,EAAAA,IAAI;AAAE;AAAuB,QAhBA;AAgBS;AAEtCC,EAAAA,KAAK;AAAE;AAAwB,SAlBF;AAkBY;AACzCC,EAAAA,MAAM;AAAE;AAAyB,UAnBJ,CAmBc;;AAnBd,CAAd,CAAhB;AAsBAC,OAAO,CAACjB,OAAR,GAAkBA,OAAlB;AAEA;;AAEA,MAAMkB,UAAU,GAAGC,MAAM,CAAC,+BAAD,CAAzB;AACA,MAAMC,aAAa,GAAGD,MAAM,CAAC,sBAAD,CAA5B;AACA,MAAME,wBAAwB,GAAGF,MAAM,CAAC,iCAAD,CAAvC;;AAEA,MAAMG,aAAN,CAAoB;AACnB;AACD;AACA;AACA;AACCC,EAAAA,WAAW,CAACjB,GAAD,EAAMkB,cAAN,EAAsB;AAChC,SAAKN,UAAL,IAAmBZ,GAAnB;AACA,SAAKkB,cAAL,GAAsBA,cAAtB;AACA;;AAEDrB,EAAAA,KAAK,GAAU;AAAA,sCAANsB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACd,SAAKP,UAAL,EAAiBlB,OAAO,CAACG,KAAzB,EAAgCsB,IAAhC;AACA;;AAEDrB,EAAAA,IAAI,GAAU;AAAA,uCAANqB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACb,SAAKP,UAAL,EAAiBlB,OAAO,CAACI,IAAzB,EAA+BqB,IAA/B;AACA;;AAEDpB,EAAAA,IAAI,GAAU;AAAA,uCAANoB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACb,SAAKP,UAAL,EAAiBlB,OAAO,CAACK,IAAzB,EAA+BoB,IAA/B;AACA;;AAEDnB,EAAAA,GAAG,GAAU;AAAA,uCAANmB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACZ,SAAKP,UAAL,EAAiBlB,OAAO,CAACM,GAAzB,EAA8BmB,IAA9B;AACA;;AAEDlB,EAAAA,KAAK,GAAU;AAAA,uCAANkB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACd,SAAKP,UAAL,EAAiBlB,OAAO,CAACO,KAAzB,EAAgCkB,IAAhC;AACA;;AAEDC,EAAAA,MAAM,CAACC,SAAD,EAAqB;AAC1B,QAAI,CAACA,SAAL,EAAgB;AAAA,yCADIF,IACJ;AADIA,QAAAA,IACJ;AAAA;;AACf,WAAKP,UAAL,EAAiBlB,OAAO,CAACG,KAAzB,EAAgCsB,IAAhC;AACA;AACD;;AAEDjB,EAAAA,KAAK,GAAG;AACP,SAAKU,UAAL,EAAiBlB,OAAO,CAACQ,KAAzB,EAAgC,CAAC,OAAD,CAAhC;AACA;;AAEDO,EAAAA,KAAK,GAAG;AACP,SAAKG,UAAL,EAAiBlB,OAAO,CAACe,KAAzB;AACA;;AAEDC,EAAAA,MAAM,GAAU;AAAA,uCAANS,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACf,SAAKP,UAAL,EAAiBlB,OAAO,CAACgB,MAAzB,EAAiCS,IAAjC;AACA;;AAEDhB,EAAAA,KAAK,GAAU;AAAA,uCAANgB,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACd,SAAKP,UAAL,EAAiBlB,OAAO,CAACS,KAAzB,EAAgCgB,IAAhC;AACA;;AAEDf,EAAAA,cAAc,GAAU;AAAA,uCAANe,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACvB,SAAKP,UAAL,EAAiBlB,OAAO,CAACU,cAAzB,EAAyCe,IAAzC;AACA;;AAEDd,EAAAA,QAAQ,GAAU;AAAA,wCAANc,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACjB,SAAKP,UAAL,EAAiBlB,OAAO,CAACW,QAAzB,EAAmCc,IAAnC;AACA;;AAEDb,EAAAA,OAAO,CAACgB,KAAD,EAAQ;AACd,SAAKV,UAAL,EAAiBlB,OAAO,CAACY,OAAzB,EAAkC,CAACgB,KAAD,CAAlC;AACA;;AAEDf,EAAAA,UAAU,CAACe,KAAD,EAAQ;AACjB,SAAKV,UAAL,EAAiBlB,OAAO,CAACa,UAAzB,EAAqC,CAACe,KAAD,CAArC;AACA;;AAEDd,EAAAA,IAAI,CAACc,KAAD,EAAQ;AACX,SAAKR,aAAL,IAAsB,KAAKA,aAAL,KAAuB,IAAIS,GAAJ,EAA7C;AACA,SAAKT,aAAL,EAAoBU,GAApB,CAAwBF,KAAxB,EAA+BG,OAAO,CAACC,MAAR,EAA/B;AACA;;AAEDC,EAAAA,OAAO,CAACL,KAAD,EAAQ;AACd,UAAMM,IAAI,GAAG,KAAKd,aAAL,KAAuB,KAAKA,aAAL,EAAoBe,GAApB,CAAwBP,KAAxB,CAApC;;AACA,QAAI,CAACM,IAAL,EAAW;AACV,YAAM,IAAIE,KAAJ,CAAW,kBAAiBR,KAAM,+BAAlC,CAAN;AACA;;AACD,UAAMd,IAAI,GAAGiB,OAAO,CAACC,MAAR,CAAeE,IAAf,CAAb;AACA,SAAKhB,UAAL,EAAiBlB,OAAO,CAACc,IAAzB,EAA+B,CAACc,KAAD,EAAQ,GAAGd,IAAX,CAA/B;AACA;;AAEDuB,EAAAA,OAAO,CAACT,KAAD,EAAQ;AACd,UAAMM,IAAI,GAAG,KAAKd,aAAL,KAAuB,KAAKA,aAAL,EAAoBe,GAApB,CAAwBP,KAAxB,CAApC;;AACA,QAAI,CAACM,IAAL,EAAW;AACV,YAAM,IAAIE,KAAJ,CAAW,kBAAiBR,KAAM,+BAAlC,CAAN;AACA;;AACD,UAAMd,IAAI,GAAGiB,OAAO,CAACC,MAAR,CAAeE,IAAf,CAAb;AACA,SAAKd,aAAL,EAAoBkB,MAApB,CAA2BV,KAA3B;AACA,SAAKV,UAAL,EAAiBlB,OAAO,CAACc,IAAzB,EAA+B,CAACc,KAAD,EAAQ,GAAGd,IAAX,CAA/B;AACA;;AAEDyB,EAAAA,aAAa,CAACX,KAAD,EAAQ;AACpB,UAAMM,IAAI,GAAG,KAAKd,aAAL,KAAuB,KAAKA,aAAL,EAAoBe,GAApB,CAAwBP,KAAxB,CAApC;;AACA,QAAI,CAACM,IAAL,EAAW;AACV,YAAM,IAAIE,KAAJ,CACJ,kBAAiBR,KAAM,qCADnB,CAAN;AAGA;;AACD,UAAMd,IAAI,GAAGiB,OAAO,CAACC,MAAR,CAAeE,IAAf,CAAb;AACA,SAAKd,aAAL,EAAoBkB,MAApB,CAA2BV,KAA3B;AACA,SAAKP,wBAAL,IACC,KAAKA,wBAAL,KAAkC,IAAIQ,GAAJ,EADnC;AAEA,UAAMW,OAAO,GAAG,KAAKnB,wBAAL,EAA+Bc,GAA/B,CAAmCP,KAAnC,CAAhB;;AACA,QAAIY,OAAO,KAAKC,SAAhB,EAA2B;AAC1B,UAAI3B,IAAI,CAAC,CAAD,CAAJ,GAAU0B,OAAO,CAAC,CAAD,CAAjB,GAAuB,GAA3B,EAAgC;AAC/B1B,QAAAA,IAAI,CAAC,CAAD,CAAJ,IAAW0B,OAAO,CAAC,CAAD,CAAP,GAAa,CAAxB;AACA1B,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV,GAAgB0B,OAAO,CAAC,CAAD,CAAjC;AACA,OAHD,MAGO;AACN1B,QAAAA,IAAI,CAAC,CAAD,CAAJ,IAAW0B,OAAO,CAAC,CAAD,CAAlB;AACA1B,QAAAA,IAAI,CAAC,CAAD,CAAJ,IAAW0B,OAAO,CAAC,CAAD,CAAlB;AACA;AACD;;AACD,SAAKnB,wBAAL,EAA+BS,GAA/B,CAAmCF,KAAnC,EAA0Cd,IAA1C;AACA;;AAED4B,EAAAA,gBAAgB,CAACd,KAAD,EAAQ;AACvB,QAAI,KAAKP,wBAAL,MAAmCoB,SAAvC,EAAkD;AAClD,UAAM3B,IAAI,GAAG,KAAKO,wBAAL,EAA+Bc,GAA/B,CAAmCP,KAAnC,CAAb;AACA,QAAId,IAAI,KAAK2B,SAAb,EAAwB;AACxB,SAAKpB,wBAAL,EAA+BiB,MAA/B,CAAsCV,KAAtC;AACA,SAAKV,UAAL,EAAiBlB,OAAO,CAACc,IAAzB,EAA+B,CAACc,KAAD,EAAQ,GAAGd,IAAX,CAA/B;AACA;;AA1HkB;;AA6HpBG,OAAO,CAAC0B,MAAR,GAAiBrB,aAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n\terror: /** @type {\"error\"} */ (\"error\"), // message, c style arguments\n\twarn: /** @type {\"warn\"} */ (\"warn\"), // message, c style arguments\n\tinfo: /** @type {\"info\"} */ (\"info\"), // message, c style arguments\n\tlog: /** @type {\"log\"} */ (\"log\"), // message, c style arguments\n\tdebug: /** @type {\"debug\"} */ (\"debug\"), // message, c style arguments\n\n\ttrace: /** @type {\"trace\"} */ (\"trace\"), // no arguments\n\n\tgroup: /** @type {\"group\"} */ (\"group\"), // [label]\n\tgroupCollapsed: /** @type {\"groupCollapsed\"} */ (\"groupCollapsed\"), // [label]\n\tgroupEnd: /** @type {\"groupEnd\"} */ (\"groupEnd\"), // [label]\n\n\tprofile: /** @type {\"profile\"} */ (\"profile\"), // [profileName]\n\tprofileEnd: /** @type {\"profileEnd\"} */ (\"profileEnd\"), // [profileName]\n\n\ttime: /** @type {\"time\"} */ (\"time\"), // name, time as [seconds, nanoseconds]\n\n\tclear: /** @type {\"clear\"} */ (\"clear\"), // no arguments\n\tstatus: /** @type {\"status\"} */ (\"status\") // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\nconst TIMERS_AGGREGATES_SYMBOL = Symbol(\"webpack logger aggregated times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogTypeEnum, any[]=): void} log log function\n\t * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n\t */\n\tconstructor(log, getChildLogger) {\n\t\tthis[LOG_SYMBOL] = log;\n\t\tthis.getChildLogger = getChildLogger;\n\t}\n\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\tstatus(...args) {\n\t\tthis[LOG_SYMBOL](LogType.status, args);\n\t}\n\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd, args);\n\t}\n\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\ttime(label) {\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeAggregate(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(\n\t\t\t\t`No such label '${label}' for WebpackLogger.timeAggregate()`\n\t\t\t);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[TIMERS_AGGREGATES_SYMBOL] =\n\t\t\tthis[TIMERS_AGGREGATES_SYMBOL] || new Map();\n\t\tconst current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n\t\tif (current !== undefined) {\n\t\t\tif (time[1] + current[1] > 1e9) {\n\t\t\t\ttime[0] += current[0] + 1;\n\t\t\t\ttime[1] = time[1] - 1e9 + current[1];\n\t\t\t} else {\n\t\t\t\ttime[0] += current[0];\n\t\t\t\ttime[1] += current[1];\n\t\t\t}\n\t\t}\n\t\tthis[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n\t}\n\n\ttimeAggregateEnd(label) {\n\t\tif (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n\t\tconst time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n\t\tif (time === undefined) return;\n\t\tthis[TIMERS_AGGREGATES_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nexports.Logger = WebpackLogger;\n"]},"metadata":{},"sourceType":"script"}