{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst DependencyTemplate = require(\"../DependencyTemplate\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n\nclass NullDependency extends Dependency {\n  get type() {\n    return \"null\";\n  }\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n\n\n  couldAffectReferencingModule() {\n    return false;\n  }\n\n}\n\nNullDependency.Template = class NullDependencyTemplate extends DependencyTemplate {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {}\n\n};\nmodule.exports = NullDependency;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/NullDependency.js"],"names":["Dependency","require","DependencyTemplate","NullDependency","type","couldAffectReferencingModule","Template","NullDependencyTemplate","apply","dependency","source","templateContext","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;AAEA;;AACA;;AACA;;;AAEA,MAAME,cAAN,SAA6BH,UAA7B,CAAwC;AAC/B,MAAJI,IAAI,GAAG;AACV,WAAO,MAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,4BAA4B,GAAG;AAC9B,WAAO,KAAP;AACA;;AAVsC;;AAaxCF,cAAc,CAACG,QAAf,GAA0B,MAAMC,sBAAN,SACzBL,kBADyB,CAExB;AACD;AACD;AACA;AACA;AACA;AACA;AACCM,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,EAAqBC,eAArB,EAAsC,CAAE;;AAP5C,CAFF;AAYAC,MAAM,CAACC,OAAP,GAAiBV,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst DependencyTemplate = require(\"../DependencyTemplate\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass NullDependency extends Dependency {\n\tget type() {\n\t\treturn \"null\";\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn false;\n\t}\n}\n\nNullDependency.Template = class NullDependencyTemplate extends (\n\tDependencyTemplate\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {}\n};\n\nmodule.exports = NullDependency;\n"]},"metadata":{},"sourceType":"script"}