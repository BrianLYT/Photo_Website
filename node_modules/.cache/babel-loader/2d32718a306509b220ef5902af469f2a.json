{"ast":null,"code":"/* global __resourceQuery */\n\"use strict\";\n\nif (typeof EventSource !== \"function\") {\n  throw new Error(\"Environment doesn't support lazy compilation (requires EventSource)\");\n}\n\nvar urlBase = decodeURIComponent(__resourceQuery.slice(1));\nvar activeEventSource;\nvar activeKeys = new Map();\nvar errorHandlers = new Set();\n\nvar updateEventSource = function updateEventSource() {\n  if (activeEventSource) activeEventSource.close();\n\n  if (activeKeys.size) {\n    activeEventSource = new EventSource(urlBase + Array.from(activeKeys.keys()).join(\"@\"));\n\n    activeEventSource.onerror = function (event) {\n      errorHandlers.forEach(function (onError) {\n        onError(new Error(\"Problem communicating active modules to the server: \" + event.message + \" \" + event.filename + \":\" + event.lineno + \":\" + event.colno + \" \" + event.error));\n      });\n    };\n  } else {\n    activeEventSource = undefined;\n  }\n};\n\nexports.keepAlive = function (options) {\n  var data = options.data;\n  var onError = options.onError;\n  var active = options.active;\n  var module = options.module;\n  errorHandlers.add(onError);\n  var value = activeKeys.get(data) || 0;\n  activeKeys.set(data, value + 1);\n\n  if (value === 0) {\n    updateEventSource();\n  }\n\n  if (!active && !module.hot) {\n    console.log(\"Hot Module Replacement is not enabled. Waiting for process restart...\");\n  }\n\n  return function () {\n    errorHandlers.delete(onError);\n    setTimeout(function () {\n      var value = activeKeys.get(data);\n\n      if (value === 1) {\n        activeKeys.delete(data);\n        updateEventSource();\n      } else {\n        activeKeys.set(data, value - 1);\n      }\n    }, 1000);\n  };\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/hot/lazy-compilation-web.js"],"names":["EventSource","Error","urlBase","decodeURIComponent","__resourceQuery","slice","activeEventSource","activeKeys","Map","errorHandlers","Set","updateEventSource","close","size","Array","from","keys","join","onerror","event","forEach","onError","message","filename","lineno","colno","error","undefined","exports","keepAlive","options","data","active","module","add","value","get","set","hot","console","log","delete","setTimeout"],"mappings":"AAAA;AAEA;;AAEA,IAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACtC,QAAM,IAAIC,KAAJ,CACL,qEADK,CAAN;AAGA;;AAED,IAAIC,OAAO,GAAGC,kBAAkB,CAACC,eAAe,CAACC,KAAhB,CAAsB,CAAtB,CAAD,CAAhC;AACA,IAAIC,iBAAJ;AACA,IAAIC,UAAU,GAAG,IAAIC,GAAJ,EAAjB;AACA,IAAIC,aAAa,GAAG,IAAIC,GAAJ,EAApB;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACpD,MAAIL,iBAAJ,EAAuBA,iBAAiB,CAACM,KAAlB;;AACvB,MAAIL,UAAU,CAACM,IAAf,EAAqB;AACpBP,IAAAA,iBAAiB,GAAG,IAAIN,WAAJ,CACnBE,OAAO,GAAGY,KAAK,CAACC,IAAN,CAAWR,UAAU,CAACS,IAAX,EAAX,EAA8BC,IAA9B,CAAmC,GAAnC,CADS,CAApB;;AAGAX,IAAAA,iBAAiB,CAACY,OAAlB,GAA4B,UAAUC,KAAV,EAAiB;AAC5CV,MAAAA,aAAa,CAACW,OAAd,CAAsB,UAAUC,OAAV,EAAmB;AACxCA,QAAAA,OAAO,CACN,IAAIpB,KAAJ,CACC,yDACCkB,KAAK,CAACG,OADP,GAEC,GAFD,GAGCH,KAAK,CAACI,QAHP,GAIC,GAJD,GAKCJ,KAAK,CAACK,MALP,GAMC,GAND,GAOCL,KAAK,CAACM,KAPP,GAQC,GARD,GASCN,KAAK,CAACO,KAVR,CADM,CAAP;AAcA,OAfD;AAgBA,KAjBD;AAkBA,GAtBD,MAsBO;AACNpB,IAAAA,iBAAiB,GAAGqB,SAApB;AACA;AACD,CA3BD;;AA6BAC,OAAO,CAACC,SAAR,GAAoB,UAAUC,OAAV,EAAmB;AACtC,MAAIC,IAAI,GAAGD,OAAO,CAACC,IAAnB;AACA,MAAIV,OAAO,GAAGS,OAAO,CAACT,OAAtB;AACA,MAAIW,MAAM,GAAGF,OAAO,CAACE,MAArB;AACA,MAAIC,MAAM,GAAGH,OAAO,CAACG,MAArB;AACAxB,EAAAA,aAAa,CAACyB,GAAd,CAAkBb,OAAlB;AACA,MAAIc,KAAK,GAAG5B,UAAU,CAAC6B,GAAX,CAAeL,IAAf,KAAwB,CAApC;AACAxB,EAAAA,UAAU,CAAC8B,GAAX,CAAeN,IAAf,EAAqBI,KAAK,GAAG,CAA7B;;AACA,MAAIA,KAAK,KAAK,CAAd,EAAiB;AAChBxB,IAAAA,iBAAiB;AACjB;;AACD,MAAI,CAACqB,MAAD,IAAW,CAACC,MAAM,CAACK,GAAvB,EAA4B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CACC,uEADD;AAGA;;AAED,SAAO,YAAY;AAClB/B,IAAAA,aAAa,CAACgC,MAAd,CAAqBpB,OAArB;AACAqB,IAAAA,UAAU,CAAC,YAAY;AACtB,UAAIP,KAAK,GAAG5B,UAAU,CAAC6B,GAAX,CAAeL,IAAf,CAAZ;;AACA,UAAII,KAAK,KAAK,CAAd,EAAiB;AAChB5B,QAAAA,UAAU,CAACkC,MAAX,CAAkBV,IAAlB;AACApB,QAAAA,iBAAiB;AACjB,OAHD,MAGO;AACNJ,QAAAA,UAAU,CAAC8B,GAAX,CAAeN,IAAf,EAAqBI,KAAK,GAAG,CAA7B;AACA;AACD,KARS,EAQP,IARO,CAAV;AASA,GAXD;AAYA,CA7BD","sourcesContent":["/* global __resourceQuery */\n\n\"use strict\";\n\nif (typeof EventSource !== \"function\") {\n\tthrow new Error(\n\t\t\"Environment doesn't support lazy compilation (requires EventSource)\"\n\t);\n}\n\nvar urlBase = decodeURIComponent(__resourceQuery.slice(1));\nvar activeEventSource;\nvar activeKeys = new Map();\nvar errorHandlers = new Set();\n\nvar updateEventSource = function updateEventSource() {\n\tif (activeEventSource) activeEventSource.close();\n\tif (activeKeys.size) {\n\t\tactiveEventSource = new EventSource(\n\t\t\turlBase + Array.from(activeKeys.keys()).join(\"@\")\n\t\t);\n\t\tactiveEventSource.onerror = function (event) {\n\t\t\terrorHandlers.forEach(function (onError) {\n\t\t\t\tonError(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Problem communicating active modules to the server: \" +\n\t\t\t\t\t\t\tevent.message +\n\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\tevent.filename +\n\t\t\t\t\t\t\t\":\" +\n\t\t\t\t\t\t\tevent.lineno +\n\t\t\t\t\t\t\t\":\" +\n\t\t\t\t\t\t\tevent.colno +\n\t\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t\tevent.error\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t} else {\n\t\tactiveEventSource = undefined;\n\t}\n};\n\nexports.keepAlive = function (options) {\n\tvar data = options.data;\n\tvar onError = options.onError;\n\tvar active = options.active;\n\tvar module = options.module;\n\terrorHandlers.add(onError);\n\tvar value = activeKeys.get(data) || 0;\n\tactiveKeys.set(data, value + 1);\n\tif (value === 0) {\n\t\tupdateEventSource();\n\t}\n\tif (!active && !module.hot) {\n\t\tconsole.log(\n\t\t\t\"Hot Module Replacement is not enabled. Waiting for process restart...\"\n\t\t);\n\t}\n\n\treturn function () {\n\t\terrorHandlers.delete(onError);\n\t\tsetTimeout(function () {\n\t\t\tvar value = activeKeys.get(data);\n\t\t\tif (value === 1) {\n\t\t\t\tactiveKeys.delete(data);\n\t\t\t\tupdateEventSource();\n\t\t\t} else {\n\t\t\t\tactiveKeys.set(data, value - 1);\n\t\t\t}\n\t\t}, 1000);\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}