{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeVersion = encodeVersion;\nexports.encodeHeader = encodeHeader;\nexports.encodeU32 = encodeU32;\nexports.encodeI32 = encodeI32;\nexports.encodeI64 = encodeI64;\nexports.encodeVec = encodeVec;\nexports.encodeValtype = encodeValtype;\nexports.encodeMutability = encodeMutability;\nexports.encodeUTF8Vec = encodeUTF8Vec;\nexports.encodeLimits = encodeLimits;\nexports.encodeModuleImport = encodeModuleImport;\nexports.encodeSectionMetadata = encodeSectionMetadata;\nexports.encodeCallInstruction = encodeCallInstruction;\nexports.encodeCallIndirectInstruction = encodeCallIndirectInstruction;\nexports.encodeModuleExport = encodeModuleExport;\nexports.encodeTypeInstruction = encodeTypeInstruction;\nexports.encodeInstr = encodeInstr;\nexports.encodeStringLiteral = encodeStringLiteral;\nexports.encodeGlobal = encodeGlobal;\nexports.encodeFuncBody = encodeFuncBody;\nexports.encodeIndexInFuncSection = encodeIndexInFuncSection;\nexports.encodeElem = encodeElem;\n\nvar leb = _interopRequireWildcard(require(\"@webassemblyjs/leb128\"));\n\nvar ieee754 = _interopRequireWildcard(require(\"@webassemblyjs/ieee754\"));\n\nvar utf8 = _interopRequireWildcard(require(\"@webassemblyjs/utf8\"));\n\nvar _helperWasmBytecode = _interopRequireDefault(require(\"@webassemblyjs/helper-wasm-bytecode\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction assertNotIdentifierNode(n) {\n  if (n.type === \"Identifier\") {\n    throw new Error(\"Unsupported node Identifier\");\n  }\n}\n\nfunction encodeVersion(v) {\n  var bytes = _helperWasmBytecode.default.moduleVersion;\n  bytes[0] = v;\n  return bytes;\n}\n\nfunction encodeHeader() {\n  return _helperWasmBytecode.default.magicModuleHeader;\n}\n\nfunction encodeU32(v) {\n  var uint8view = new Uint8Array(leb.encodeU32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI32(v) {\n  var uint8view = new Uint8Array(leb.encodeI32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI64(v) {\n  var uint8view = new Uint8Array(leb.encodeI64(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeVec(elements) {\n  var size = encodeU32(elements.length);\n  return _toConsumableArray(size).concat(_toConsumableArray(elements));\n}\n\nfunction encodeValtype(v) {\n  var byte = _helperWasmBytecode.default.valtypesByString[v];\n\n  if (typeof byte === \"undefined\") {\n    throw new Error(\"Unknown valtype: \" + v);\n  }\n\n  return parseInt(byte, 10);\n}\n\nfunction encodeMutability(v) {\n  var byte = _helperWasmBytecode.default.globalTypesByString[v];\n\n  if (typeof byte === \"undefined\") {\n    throw new Error(\"Unknown mutability: \" + v);\n  }\n\n  return parseInt(byte, 10);\n}\n\nfunction encodeUTF8Vec(str) {\n  return encodeVec(utf8.encode(str));\n}\n\nfunction encodeLimits(n) {\n  var out = [];\n\n  if (typeof n.max === \"number\") {\n    out.push(0x01);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min))); // $FlowIgnore: ensured by the typeof\n\n    out.push.apply(out, _toConsumableArray(encodeU32(n.max)));\n  } else {\n    out.push(0x00);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min)));\n  }\n\n  return out;\n}\n\nfunction encodeModuleImport(n) {\n  var out = [];\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.module)));\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n\n  switch (n.descr.type) {\n    case \"GlobalType\":\n      {\n        out.push(0x03); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeValtype(n.descr.valtype)); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeMutability(n.descr.mutability));\n        break;\n      }\n\n    case \"Memory\":\n      {\n        out.push(0x02); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"Table\":\n      {\n        out.push(0x01);\n        out.push(0x70); // element type\n        // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"FuncImportDescr\":\n      {\n        out.push(0x00); // $FlowIgnore\n\n        assertNotIdentifierNode(n.descr.id); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n        break;\n      }\n\n    default:\n      throw new Error(\"Unsupport operation: encode module import of type: \" + n.descr.type);\n  }\n\n  return out;\n}\n\nfunction encodeSectionMetadata(n) {\n  var out = [];\n  var sectionId = _helperWasmBytecode.default.sections[n.section];\n\n  if (typeof sectionId === \"undefined\") {\n    throw new Error(\"Unknown section: \" + n.section);\n  }\n\n  if (n.section === \"start\") {\n    /**\n     * This is not implemented yet because it's a special case which\n     * doesn't have a vector in its section.\n     */\n    throw new Error(\"Unsupported section encoding of type start\");\n  }\n\n  out.push(sectionId);\n  out.push.apply(out, _toConsumableArray(encodeU32(n.size.value)));\n  out.push.apply(out, _toConsumableArray(encodeU32(n.vectorOfSize.value)));\n  return out;\n}\n\nfunction encodeCallInstruction(n) {\n  var out = [];\n  assertNotIdentifierNode(n.index);\n  out.push(0x10); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value)));\n  return out;\n}\n\nfunction encodeCallIndirectInstruction(n) {\n  var out = []; // $FlowIgnore\n\n  assertNotIdentifierNode(n.index);\n  out.push(0x11); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value))); // add a reserved byte\n\n  out.push(0x00);\n  return out;\n}\n\nfunction encodeModuleExport(n) {\n  var out = [];\n  assertNotIdentifierNode(n.descr.id);\n  var exportTypeByteString = _helperWasmBytecode.default.exportTypesByName[n.descr.exportType];\n\n  if (typeof exportTypeByteString === \"undefined\") {\n    throw new Error(\"Unknown export of type: \" + n.descr.exportType);\n  }\n\n  var exportTypeByte = parseInt(exportTypeByteString, 10);\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n  out.push(exportTypeByte); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n  return out;\n}\n\nfunction encodeTypeInstruction(n) {\n  var out = [0x60];\n  var params = n.functype.params.map(function (x) {\n    return x.valtype;\n  }).map(encodeValtype);\n  var results = n.functype.results.map(encodeValtype);\n  out.push.apply(out, _toConsumableArray(encodeVec(params)));\n  out.push.apply(out, _toConsumableArray(encodeVec(results)));\n  return out;\n}\n\nfunction encodeInstr(n) {\n  var out = [];\n  var instructionName = n.id;\n\n  if (typeof n.object === \"string\") {\n    instructionName = \"\".concat(n.object, \".\").concat(String(n.id));\n  }\n\n  var byteString = _helperWasmBytecode.default.symbolsByName[instructionName];\n\n  if (typeof byteString === \"undefined\") {\n    throw new Error(\"encodeInstr: unknown instruction \" + JSON.stringify(instructionName));\n  }\n\n  var byte = parseInt(byteString, 10);\n  out.push(byte);\n\n  if (n.args) {\n    n.args.forEach(function (arg) {\n      var encoder = encodeU32; // find correct encoder\n\n      if (n.object === \"i32\") {\n        encoder = encodeI32;\n      }\n\n      if (n.object === \"i64\") {\n        encoder = encodeI64;\n      }\n\n      if (n.object === \"f32\") {\n        encoder = ieee754.encodeF32;\n      }\n\n      if (n.object === \"f64\") {\n        encoder = ieee754.encodeF64;\n      }\n\n      if (arg.type === \"NumberLiteral\" || arg.type === \"FloatLiteral\" || arg.type === \"LongNumberLiteral\") {\n        // $FlowIgnore\n        out.push.apply(out, _toConsumableArray(encoder(arg.value)));\n      } else {\n        throw new Error(\"Unsupported instruction argument encoding \" + JSON.stringify(arg.type));\n      }\n    });\n  }\n\n  return out;\n}\n\nfunction encodeExpr(instrs) {\n  var out = [];\n  instrs.forEach(function (instr) {\n    // $FlowIgnore\n    var n = (0, _index.encodeNode)(instr);\n    out.push.apply(out, _toConsumableArray(n));\n  });\n  return out;\n}\n\nfunction encodeStringLiteral(n) {\n  return encodeUTF8Vec(n.value);\n}\n\nfunction encodeGlobal(n) {\n  var out = [];\n  var _n$globalType = n.globalType,\n      valtype = _n$globalType.valtype,\n      mutability = _n$globalType.mutability;\n  out.push(encodeValtype(valtype));\n  out.push(encodeMutability(mutability));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.init)));\n  return out;\n}\n\nfunction encodeFuncBody(n) {\n  var out = [];\n  out.push(-1); // temporary function body size\n  // FIXME(sven): get the func locals?\n\n  var localBytes = encodeVec([]);\n  out.push.apply(out, _toConsumableArray(localBytes));\n  var funcBodyBytes = encodeExpr(n.body);\n  out[0] = funcBodyBytes.length + localBytes.length;\n  out.push.apply(out, _toConsumableArray(funcBodyBytes));\n  return out;\n}\n\nfunction encodeIndexInFuncSection(n) {\n  assertNotIdentifierNode(n.index); // $FlowIgnore\n\n  return encodeU32(n.index.value);\n}\n\nfunction encodeElem(n) {\n  var out = [];\n  assertNotIdentifierNode(n.table); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.table.value)));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.offset))); // $FlowIgnore\n\n  var funcs = n.funcs.reduce(function (acc, x) {\n    return _toConsumableArray(acc).concat(_toConsumableArray(encodeU32(x.value)));\n  }, []);\n  out.push.apply(out, _toConsumableArray(encodeVec(funcs)));\n  return out;\n}","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/@webassemblyjs/wasm-gen/lib/encoder/index.js"],"names":["Object","defineProperty","exports","value","encodeVersion","encodeHeader","encodeU32","encodeI32","encodeI64","encodeVec","encodeValtype","encodeMutability","encodeUTF8Vec","encodeLimits","encodeModuleImport","encodeSectionMetadata","encodeCallInstruction","encodeCallIndirectInstruction","encodeModuleExport","encodeTypeInstruction","encodeInstr","encodeStringLiteral","encodeGlobal","encodeFuncBody","encodeIndexInFuncSection","encodeElem","leb","_interopRequireWildcard","require","ieee754","utf8","_helperWasmBytecode","_interopRequireDefault","_index","obj","__esModule","default","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","assertNotIdentifierNode","n","type","Error","v","bytes","moduleVersion","magicModuleHeader","uint8view","Uint8Array","array","elements","size","concat","byte","valtypesByString","parseInt","globalTypesByString","str","encode","out","max","push","apply","min","module","name","descr","valtype","mutability","limits","id","sectionId","sections","section","vectorOfSize","index","exportTypeByteString","exportTypesByName","exportType","exportTypeByte","params","functype","map","x","results","instructionName","object","String","byteString","symbolsByName","JSON","stringify","args","forEach","arg","encoder","encodeF32","encodeF64","encodeExpr","instrs","instr","encodeNode","_n$globalType","globalType","init","localBytes","funcBodyBytes","body","table","offset","funcs","reduce","acc"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeVersion = encodeVersion;\nexports.encodeHeader = encodeHeader;\nexports.encodeU32 = encodeU32;\nexports.encodeI32 = encodeI32;\nexports.encodeI64 = encodeI64;\nexports.encodeVec = encodeVec;\nexports.encodeValtype = encodeValtype;\nexports.encodeMutability = encodeMutability;\nexports.encodeUTF8Vec = encodeUTF8Vec;\nexports.encodeLimits = encodeLimits;\nexports.encodeModuleImport = encodeModuleImport;\nexports.encodeSectionMetadata = encodeSectionMetadata;\nexports.encodeCallInstruction = encodeCallInstruction;\nexports.encodeCallIndirectInstruction = encodeCallIndirectInstruction;\nexports.encodeModuleExport = encodeModuleExport;\nexports.encodeTypeInstruction = encodeTypeInstruction;\nexports.encodeInstr = encodeInstr;\nexports.encodeStringLiteral = encodeStringLiteral;\nexports.encodeGlobal = encodeGlobal;\nexports.encodeFuncBody = encodeFuncBody;\nexports.encodeIndexInFuncSection = encodeIndexInFuncSection;\nexports.encodeElem = encodeElem;\n\nvar leb = _interopRequireWildcard(require(\"@webassemblyjs/leb128\"));\n\nvar ieee754 = _interopRequireWildcard(require(\"@webassemblyjs/ieee754\"));\n\nvar utf8 = _interopRequireWildcard(require(\"@webassemblyjs/utf8\"));\n\nvar _helperWasmBytecode = _interopRequireDefault(require(\"@webassemblyjs/helper-wasm-bytecode\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction assertNotIdentifierNode(n) {\n  if (n.type === \"Identifier\") {\n    throw new Error(\"Unsupported node Identifier\");\n  }\n}\n\nfunction encodeVersion(v) {\n  var bytes = _helperWasmBytecode.default.moduleVersion;\n  bytes[0] = v;\n  return bytes;\n}\n\nfunction encodeHeader() {\n  return _helperWasmBytecode.default.magicModuleHeader;\n}\n\nfunction encodeU32(v) {\n  var uint8view = new Uint8Array(leb.encodeU32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI32(v) {\n  var uint8view = new Uint8Array(leb.encodeI32(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeI64(v) {\n  var uint8view = new Uint8Array(leb.encodeI64(v));\n\n  var array = _toConsumableArray(uint8view);\n\n  return array;\n}\n\nfunction encodeVec(elements) {\n  var size = encodeU32(elements.length);\n  return _toConsumableArray(size).concat(_toConsumableArray(elements));\n}\n\nfunction encodeValtype(v) {\n  var byte = _helperWasmBytecode.default.valtypesByString[v];\n\n  if (typeof byte === \"undefined\") {\n    throw new Error(\"Unknown valtype: \" + v);\n  }\n\n  return parseInt(byte, 10);\n}\n\nfunction encodeMutability(v) {\n  var byte = _helperWasmBytecode.default.globalTypesByString[v];\n\n  if (typeof byte === \"undefined\") {\n    throw new Error(\"Unknown mutability: \" + v);\n  }\n\n  return parseInt(byte, 10);\n}\n\nfunction encodeUTF8Vec(str) {\n  return encodeVec(utf8.encode(str));\n}\n\nfunction encodeLimits(n) {\n  var out = [];\n\n  if (typeof n.max === \"number\") {\n    out.push(0x01);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min))); // $FlowIgnore: ensured by the typeof\n\n    out.push.apply(out, _toConsumableArray(encodeU32(n.max)));\n  } else {\n    out.push(0x00);\n    out.push.apply(out, _toConsumableArray(encodeU32(n.min)));\n  }\n\n  return out;\n}\n\nfunction encodeModuleImport(n) {\n  var out = [];\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.module)));\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n\n  switch (n.descr.type) {\n    case \"GlobalType\":\n      {\n        out.push(0x03); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeValtype(n.descr.valtype)); // $FlowIgnore: GlobalType ensure that these props exists\n\n        out.push(encodeMutability(n.descr.mutability));\n        break;\n      }\n\n    case \"Memory\":\n      {\n        out.push(0x02); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"Table\":\n      {\n        out.push(0x01);\n        out.push(0x70); // element type\n        // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeLimits(n.descr.limits)));\n        break;\n      }\n\n    case \"FuncImportDescr\":\n      {\n        out.push(0x00); // $FlowIgnore\n\n        assertNotIdentifierNode(n.descr.id); // $FlowIgnore\n\n        out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n        break;\n      }\n\n    default:\n      throw new Error(\"Unsupport operation: encode module import of type: \" + n.descr.type);\n  }\n\n  return out;\n}\n\nfunction encodeSectionMetadata(n) {\n  var out = [];\n  var sectionId = _helperWasmBytecode.default.sections[n.section];\n\n  if (typeof sectionId === \"undefined\") {\n    throw new Error(\"Unknown section: \" + n.section);\n  }\n\n  if (n.section === \"start\") {\n    /**\n     * This is not implemented yet because it's a special case which\n     * doesn't have a vector in its section.\n     */\n    throw new Error(\"Unsupported section encoding of type start\");\n  }\n\n  out.push(sectionId);\n  out.push.apply(out, _toConsumableArray(encodeU32(n.size.value)));\n  out.push.apply(out, _toConsumableArray(encodeU32(n.vectorOfSize.value)));\n  return out;\n}\n\nfunction encodeCallInstruction(n) {\n  var out = [];\n  assertNotIdentifierNode(n.index);\n  out.push(0x10); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value)));\n  return out;\n}\n\nfunction encodeCallIndirectInstruction(n) {\n  var out = []; // $FlowIgnore\n\n  assertNotIdentifierNode(n.index);\n  out.push(0x11); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.index.value))); // add a reserved byte\n\n  out.push(0x00);\n  return out;\n}\n\nfunction encodeModuleExport(n) {\n  var out = [];\n  assertNotIdentifierNode(n.descr.id);\n  var exportTypeByteString = _helperWasmBytecode.default.exportTypesByName[n.descr.exportType];\n\n  if (typeof exportTypeByteString === \"undefined\") {\n    throw new Error(\"Unknown export of type: \" + n.descr.exportType);\n  }\n\n  var exportTypeByte = parseInt(exportTypeByteString, 10);\n  out.push.apply(out, _toConsumableArray(encodeUTF8Vec(n.name)));\n  out.push(exportTypeByte); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.descr.id.value)));\n  return out;\n}\n\nfunction encodeTypeInstruction(n) {\n  var out = [0x60];\n  var params = n.functype.params.map(function (x) {\n    return x.valtype;\n  }).map(encodeValtype);\n  var results = n.functype.results.map(encodeValtype);\n  out.push.apply(out, _toConsumableArray(encodeVec(params)));\n  out.push.apply(out, _toConsumableArray(encodeVec(results)));\n  return out;\n}\n\nfunction encodeInstr(n) {\n  var out = [];\n  var instructionName = n.id;\n\n  if (typeof n.object === \"string\") {\n    instructionName = \"\".concat(n.object, \".\").concat(String(n.id));\n  }\n\n  var byteString = _helperWasmBytecode.default.symbolsByName[instructionName];\n\n  if (typeof byteString === \"undefined\") {\n    throw new Error(\"encodeInstr: unknown instruction \" + JSON.stringify(instructionName));\n  }\n\n  var byte = parseInt(byteString, 10);\n  out.push(byte);\n\n  if (n.args) {\n    n.args.forEach(function (arg) {\n      var encoder = encodeU32; // find correct encoder\n\n      if (n.object === \"i32\") {\n        encoder = encodeI32;\n      }\n\n      if (n.object === \"i64\") {\n        encoder = encodeI64;\n      }\n\n      if (n.object === \"f32\") {\n        encoder = ieee754.encodeF32;\n      }\n\n      if (n.object === \"f64\") {\n        encoder = ieee754.encodeF64;\n      }\n\n      if (arg.type === \"NumberLiteral\" || arg.type === \"FloatLiteral\" || arg.type === \"LongNumberLiteral\") {\n        // $FlowIgnore\n        out.push.apply(out, _toConsumableArray(encoder(arg.value)));\n      } else {\n        throw new Error(\"Unsupported instruction argument encoding \" + JSON.stringify(arg.type));\n      }\n    });\n  }\n\n  return out;\n}\n\nfunction encodeExpr(instrs) {\n  var out = [];\n  instrs.forEach(function (instr) {\n    // $FlowIgnore\n    var n = (0, _index.encodeNode)(instr);\n    out.push.apply(out, _toConsumableArray(n));\n  });\n  return out;\n}\n\nfunction encodeStringLiteral(n) {\n  return encodeUTF8Vec(n.value);\n}\n\nfunction encodeGlobal(n) {\n  var out = [];\n  var _n$globalType = n.globalType,\n      valtype = _n$globalType.valtype,\n      mutability = _n$globalType.mutability;\n  out.push(encodeValtype(valtype));\n  out.push(encodeMutability(mutability));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.init)));\n  return out;\n}\n\nfunction encodeFuncBody(n) {\n  var out = [];\n  out.push(-1); // temporary function body size\n  // FIXME(sven): get the func locals?\n\n  var localBytes = encodeVec([]);\n  out.push.apply(out, _toConsumableArray(localBytes));\n  var funcBodyBytes = encodeExpr(n.body);\n  out[0] = funcBodyBytes.length + localBytes.length;\n  out.push.apply(out, _toConsumableArray(funcBodyBytes));\n  return out;\n}\n\nfunction encodeIndexInFuncSection(n) {\n  assertNotIdentifierNode(n.index); // $FlowIgnore\n\n  return encodeU32(n.index.value);\n}\n\nfunction encodeElem(n) {\n  var out = [];\n  assertNotIdentifierNode(n.table); // $FlowIgnore\n\n  out.push.apply(out, _toConsumableArray(encodeU32(n.table.value)));\n  out.push.apply(out, _toConsumableArray(encodeExpr(n.offset))); // $FlowIgnore\n\n  var funcs = n.funcs.reduce(function (acc, x) {\n    return _toConsumableArray(acc).concat(_toConsumableArray(encodeU32(x.value)));\n  }, []);\n  out.push.apply(out, _toConsumableArray(encodeVec(funcs)));\n  return out;\n}"]},"metadata":{},"sourceType":"script"}