{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n\nclass GetMainFilenameRuntimeModule extends RuntimeModule {\n  /**\n   * @param {string} name readable name\n   * @param {string} global global object binding\n   * @param {string} filename main file name\n   */\n  constructor(name, global, filename) {\n    super(`get ${name} filename`);\n    this.global = global;\n    this.filename = filename;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      global,\n      filename,\n      compilation,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate\n    } = compilation;\n    const url = compilation.getPath(JSON.stringify(filename), {\n      hash: `\" + ${RuntimeGlobals.getFullHash}() + \"`,\n      hashWithLength: length => `\" + ${RuntimeGlobals.getFullHash}().slice(0, ${length}) + \"`,\n      chunk,\n      runtime: chunk.runtime\n    });\n    return Template.asString([`${global} = ${runtimeTemplate.returningFunction(url)};`]);\n  }\n\n}\n\nmodule.exports = GetMainFilenameRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/runtime/GetMainFilenameRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","GetMainFilenameRuntimeModule","constructor","name","global","filename","generate","compilation","chunk","runtimeTemplate","url","getPath","JSON","stringify","hash","getFullHash","hashWithLength","length","runtime","asString","returningFunction","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAD,CAA7B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;AAEA;;;AAEA,MAAMG,4BAAN,SAA2CF,aAA3C,CAAyD;AACxD;AACD;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyB;AACnC,UAAO,OAAMF,IAAK,WAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEF,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBE,MAAAA,WAApB;AAAiCC,MAAAA;AAAjC,QAA2C,IAAjD;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAsBF,WAA5B;AACA,UAAMG,GAAG,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAApB,EAA8C;AACzDS,MAAAA,IAAI,EAAG,OAAMjB,cAAc,CAACkB,WAAY,QADiB;AAEzDC,MAAAA,cAAc,EAAEC,MAAM,IACpB,OAAMpB,cAAc,CAACkB,WAAY,eAAcE,MAAO,OAHC;AAIzDT,MAAAA,KAJyD;AAKzDU,MAAAA,OAAO,EAAEV,KAAK,CAACU;AAL0C,KAA9C,CAAZ;AAOA,WAAOlB,QAAQ,CAACmB,QAAT,CAAkB,CACvB,GAAEf,MAAO,MAAKK,eAAe,CAACW,iBAAhB,CAAkCV,GAAlC,CAAuC,GAD9B,CAAlB,CAAP;AAGA;;AA5BuD;;AA+BzDW,MAAM,CAACC,OAAP,GAAiBrB,4BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass GetMainFilenameRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {string} name readable name\n\t * @param {string} global global object binding\n\t * @param {string} filename main file name\n\t */\n\tconstructor(name, global, filename) {\n\t\tsuper(`get ${name} filename`);\n\t\tthis.global = global;\n\t\tthis.filename = filename;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { global, filename, compilation, chunk } = this;\n\t\tconst { runtimeTemplate } = compilation;\n\t\tconst url = compilation.getPath(JSON.stringify(filename), {\n\t\t\thash: `\" + ${RuntimeGlobals.getFullHash}() + \"`,\n\t\t\thashWithLength: length =>\n\t\t\t\t`\" + ${RuntimeGlobals.getFullHash}().slice(0, ${length}) + \"`,\n\t\t\tchunk,\n\t\t\truntime: chunk.runtime\n\t\t});\n\t\treturn Template.asString([\n\t\t\t`${global} = ${runtimeTemplate.returningFunction(url)};`\n\t\t]);\n\t}\n}\n\nmodule.exports = GetMainFilenameRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}