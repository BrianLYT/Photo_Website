{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n\nclass Stats {\n  /**\n   * @param {Compilation} compilation webpack compilation\n   */\n  constructor(compilation) {\n    this.compilation = compilation;\n  }\n\n  get hash() {\n    return this.compilation.hash;\n  }\n\n  get startTime() {\n    return this.compilation.startTime;\n  }\n\n  get endTime() {\n    return this.compilation.endTime;\n  }\n  /**\n   * @returns {boolean} true if the compilation had a warning\n   */\n\n\n  hasWarnings() {\n    return this.compilation.warnings.length > 0 || this.compilation.children.some(child => child.getStats().hasWarnings());\n  }\n  /**\n   * @returns {boolean} true if the compilation encountered an error\n   */\n\n\n  hasErrors() {\n    return this.compilation.errors.length > 0 || this.compilation.children.some(child => child.getStats().hasErrors());\n  }\n  /**\n   * @param {(string|StatsOptions)=} options stats options\n   * @returns {StatsCompilation} json output\n   */\n\n\n  toJson(options) {\n    options = this.compilation.createStatsOptions(options, {\n      forToString: false\n    });\n    const statsFactory = this.compilation.createStatsFactory(options);\n    return statsFactory.create(\"compilation\", this.compilation, {\n      compilation: this.compilation\n    });\n  }\n\n  toString(options) {\n    options = this.compilation.createStatsOptions(options, {\n      forToString: true\n    });\n    const statsFactory = this.compilation.createStatsFactory(options);\n    const statsPrinter = this.compilation.createStatsPrinter(options);\n    const data = statsFactory.create(\"compilation\", this.compilation, {\n      compilation: this.compilation\n    });\n    const result = statsPrinter.print(\"compilation\", data);\n    return result === undefined ? \"\" : result;\n  }\n\n}\n\nmodule.exports = Stats;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/Stats.js"],"names":["Stats","constructor","compilation","hash","startTime","endTime","hasWarnings","warnings","length","children","some","child","getStats","hasErrors","errors","toJson","options","createStatsOptions","forToString","statsFactory","createStatsFactory","create","toString","statsPrinter","createStatsPrinter","data","result","print","undefined","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AACA;;AAEA,MAAMA,KAAN,CAAY;AACX;AACD;AACA;AACCC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACxB,SAAKA,WAAL,GAAmBA,WAAnB;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,KAAKD,WAAL,CAAiBC,IAAxB;AACA;;AAEY,MAATC,SAAS,GAAG;AACf,WAAO,KAAKF,WAAL,CAAiBE,SAAxB;AACA;;AAEU,MAAPC,OAAO,GAAG;AACb,WAAO,KAAKH,WAAL,CAAiBG,OAAxB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,WAAW,GAAG;AACb,WACC,KAAKJ,WAAL,CAAiBK,QAAjB,CAA0BC,MAA1B,GAAmC,CAAnC,IACA,KAAKN,WAAL,CAAiBO,QAAjB,CAA0BC,IAA1B,CAA+BC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBN,WAAjB,EAAxC,CAFD;AAIA;AAED;AACD;AACA;;;AACCO,EAAAA,SAAS,GAAG;AACX,WACC,KAAKX,WAAL,CAAiBY,MAAjB,CAAwBN,MAAxB,GAAiC,CAAjC,IACA,KAAKN,WAAL,CAAiBO,QAAjB,CAA0BC,IAA1B,CAA+BC,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBC,SAAjB,EAAxC,CAFD;AAIA;AAED;AACD;AACA;AACA;;;AACCE,EAAAA,MAAM,CAACC,OAAD,EAAU;AACfA,IAAAA,OAAO,GAAG,KAAKd,WAAL,CAAiBe,kBAAjB,CAAoCD,OAApC,EAA6C;AACtDE,MAAAA,WAAW,EAAE;AADyC,KAA7C,CAAV;AAIA,UAAMC,YAAY,GAAG,KAAKjB,WAAL,CAAiBkB,kBAAjB,CAAoCJ,OAApC,CAArB;AAEA,WAAOG,YAAY,CAACE,MAAb,CAAoB,aAApB,EAAmC,KAAKnB,WAAxC,EAAqD;AAC3DA,MAAAA,WAAW,EAAE,KAAKA;AADyC,KAArD,CAAP;AAGA;;AAEDoB,EAAAA,QAAQ,CAACN,OAAD,EAAU;AACjBA,IAAAA,OAAO,GAAG,KAAKd,WAAL,CAAiBe,kBAAjB,CAAoCD,OAApC,EAA6C;AACtDE,MAAAA,WAAW,EAAE;AADyC,KAA7C,CAAV;AAIA,UAAMC,YAAY,GAAG,KAAKjB,WAAL,CAAiBkB,kBAAjB,CAAoCJ,OAApC,CAArB;AACA,UAAMO,YAAY,GAAG,KAAKrB,WAAL,CAAiBsB,kBAAjB,CAAoCR,OAApC,CAArB;AAEA,UAAMS,IAAI,GAAGN,YAAY,CAACE,MAAb,CAAoB,aAApB,EAAmC,KAAKnB,WAAxC,EAAqD;AACjEA,MAAAA,WAAW,EAAE,KAAKA;AAD+C,KAArD,CAAb;AAGA,UAAMwB,MAAM,GAAGH,YAAY,CAACI,KAAb,CAAmB,aAAnB,EAAkCF,IAAlC,CAAf;AACA,WAAOC,MAAM,KAAKE,SAAX,GAAuB,EAAvB,GAA4BF,MAAnC;AACA;;AArEU;;AAwEZG,MAAM,CAACC,OAAP,GAAiB9B,KAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n\nclass Stats {\n\t/**\n\t * @param {Compilation} compilation webpack compilation\n\t */\n\tconstructor(compilation) {\n\t\tthis.compilation = compilation;\n\t}\n\n\tget hash() {\n\t\treturn this.compilation.hash;\n\t}\n\n\tget startTime() {\n\t\treturn this.compilation.startTime;\n\t}\n\n\tget endTime() {\n\t\treturn this.compilation.endTime;\n\t}\n\n\t/**\n\t * @returns {boolean} true if the compilation had a warning\n\t */\n\thasWarnings() {\n\t\treturn (\n\t\t\tthis.compilation.warnings.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasWarnings())\n\t\t);\n\t}\n\n\t/**\n\t * @returns {boolean} true if the compilation encountered an error\n\t */\n\thasErrors() {\n\t\treturn (\n\t\t\tthis.compilation.errors.length > 0 ||\n\t\t\tthis.compilation.children.some(child => child.getStats().hasErrors())\n\t\t);\n\t}\n\n\t/**\n\t * @param {(string|StatsOptions)=} options stats options\n\t * @returns {StatsCompilation} json output\n\t */\n\ttoJson(options) {\n\t\toptions = this.compilation.createStatsOptions(options, {\n\t\t\tforToString: false\n\t\t});\n\n\t\tconst statsFactory = this.compilation.createStatsFactory(options);\n\n\t\treturn statsFactory.create(\"compilation\", this.compilation, {\n\t\t\tcompilation: this.compilation\n\t\t});\n\t}\n\n\ttoString(options) {\n\t\toptions = this.compilation.createStatsOptions(options, {\n\t\t\tforToString: true\n\t\t});\n\n\t\tconst statsFactory = this.compilation.createStatsFactory(options);\n\t\tconst statsPrinter = this.compilation.createStatsPrinter(options);\n\n\t\tconst data = statsFactory.create(\"compilation\", this.compilation, {\n\t\t\tcompilation: this.compilation\n\t\t});\n\t\tconst result = statsPrinter.print(\"compilation\", data);\n\t\treturn result === undefined ? \"\" : result;\n\t}\n}\n\nmodule.exports = Stats;\n"]},"metadata":{},"sourceType":"script"}