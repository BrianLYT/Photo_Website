{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst CHAR_CODE_NEW_LINE = \"\\n\".charCodeAt(0);\n\nconst getGeneratedSourceInfo = source => {\n  if (source === undefined) {\n    return {};\n  }\n\n  const lastLineStart = source.lastIndexOf(\"\\n\");\n\n  if (lastLineStart === -1) {\n    return {\n      generatedLine: 1,\n      generatedColumn: source.length,\n      source\n    };\n  }\n\n  let generatedLine = 2;\n\n  for (let i = 0; i < lastLineStart; i++) {\n    if (source.charCodeAt(i) === CHAR_CODE_NEW_LINE) generatedLine++;\n  }\n\n  return {\n    generatedLine,\n    generatedColumn: source.length - lastLineStart - 1,\n    source\n  };\n};\n\nmodule.exports = getGeneratedSourceInfo;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack-sources/lib/helpers/getGeneratedSourceInfo.js"],"names":["CHAR_CODE_NEW_LINE","charCodeAt","getGeneratedSourceInfo","source","undefined","lastLineStart","lastIndexOf","generatedLine","generatedColumn","length","i","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,kBAAkB,GAAG,KAAKC,UAAL,CAAgB,CAAhB,CAA3B;;AAEA,MAAMC,sBAAsB,GAAGC,MAAM,IAAI;AACxC,MAAIA,MAAM,KAAKC,SAAf,EAA0B;AACzB,WAAO,EAAP;AACA;;AACD,QAAMC,aAAa,GAAGF,MAAM,CAACG,WAAP,CAAmB,IAAnB,CAAtB;;AACA,MAAID,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACzB,WAAO;AACNE,MAAAA,aAAa,EAAE,CADT;AAENC,MAAAA,eAAe,EAAEL,MAAM,CAACM,MAFlB;AAGNN,MAAAA;AAHM,KAAP;AAKA;;AACD,MAAII,aAAa,GAAG,CAApB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAApB,EAAmCK,CAAC,EAApC,EAAwC;AACvC,QAAIP,MAAM,CAACF,UAAP,CAAkBS,CAAlB,MAAyBV,kBAA7B,EAAiDO,aAAa;AAC9D;;AACD,SAAO;AACNA,IAAAA,aADM;AAENC,IAAAA,eAAe,EAAEL,MAAM,CAACM,MAAP,GAAgBJ,aAAhB,GAAgC,CAF3C;AAGNF,IAAAA;AAHM,GAAP;AAKA,CArBD;;AAuBAQ,MAAM,CAACC,OAAP,GAAiBV,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst CHAR_CODE_NEW_LINE = \"\\n\".charCodeAt(0);\n\nconst getGeneratedSourceInfo = source => {\n\tif (source === undefined) {\n\t\treturn {};\n\t}\n\tconst lastLineStart = source.lastIndexOf(\"\\n\");\n\tif (lastLineStart === -1) {\n\t\treturn {\n\t\t\tgeneratedLine: 1,\n\t\t\tgeneratedColumn: source.length,\n\t\t\tsource\n\t\t};\n\t}\n\tlet generatedLine = 2;\n\tfor (let i = 0; i < lastLineStart; i++) {\n\t\tif (source.charCodeAt(i) === CHAR_CODE_NEW_LINE) generatedLine++;\n\t}\n\treturn {\n\t\tgeneratedLine,\n\t\tgeneratedColumn: source.length - lastLineStart - 1,\n\t\tsource\n\t};\n};\n\nmodule.exports = getGeneratedSourceInfo;\n"]},"metadata":{},"sourceType":"script"}