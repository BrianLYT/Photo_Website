{"ast":null,"code":"var jsReleases = require('node-releases/data/processed/envs.json');\n\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents;\n\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json');\n\nvar path = require('path');\n\nvar e2c = require('electron-to-chromium/versions');\n\nvar BrowserslistError = require('./error');\n\nvar env = require('./node'); // Will load browser.js in webpack\n\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000;\nvar ANDROID_EVERGREEN_FIRST = 37;\nvar QUERY_OR = 1;\nvar QUERY_AND = 2;\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0;\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1);\n  return jsReleases.some(function (i) {\n    return isVersionsMatch(i.version, version);\n  });\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string';\n  });\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version;\n\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.');\n  }\n\n  return versionToUse;\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version;\n  };\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0]);\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return [];\n  var majorVersions = uniq(released.map(getMajor));\n  var minimum = majorVersions[majorVersions.length - number];\n\n  if (!minimum) {\n    return released;\n  }\n\n  var selected = [];\n\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break;\n    selected.unshift(released[i]);\n  }\n\n  return selected;\n}\n\nfunction uniq(array) {\n  var filtered = [];\n\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i]);\n  }\n\n  return filtered;\n} // Helpers\n\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i];\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version);\n\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version;\n    };\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version;\n    };\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt);\n  version[1] = version[1] || 0;\n  version[2] = version[2] || 0;\n\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) > 0;\n    };\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(v, version) >= 0;\n    };\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) > 0;\n    };\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt);\n      return compareSemver(version, v) >= 0;\n    };\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x);\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1;\n  if (a > b) return +1;\n  return 0;\n}\n\nfunction compareSemver(a, b) {\n  return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) || compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'));\n} // this follows the npm-like semver behavior\n\n\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt);\n\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x';\n  } // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n\n\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) <= 0;\n      };\n\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt);\n        return compareSemverLoose(version, range) >= 0;\n      };\n  }\n} // this follows the npm-like semver behavior\n\n\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1;\n  }\n\n  if (range[1] === 'x') {\n    return 0;\n  }\n\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1;\n  }\n\n  return 0;\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version;\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version];\n  } else {\n    return false;\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version);\n\n  if (resolved) {\n    return resolved;\n  } else if (data.versions.length === 1) {\n    return data.versions[0];\n  } else {\n    return false;\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000;\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context);\n    if (!data) return selected;\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v];\n      return date !== null && date >= since;\n    });\n    return selected.concat(versions.map(nameMapper(data.name)));\n  }, []);\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  };\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i;\n  });\n  data.released = data.versions.map(function (i) {\n    return map[i] || i;\n  });\n  var fixedDate = {};\n\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i];\n  }\n\n  data.releaseDate = fixedDate;\n  return data;\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase();\n  name = browserslist.aliases[name] || name;\n\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]];\n\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);\n    } else {\n      var cloned = cloneData(desktop);\n      cloned.name = name;\n\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, {\n          '10.0-10.1': '10'\n        });\n      }\n\n      return cloned;\n    }\n  }\n\n  return browserslist.data[name];\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST;\n  var last = chromeVersions[chromeVersions.length - 1];\n  return androidVersions.filter(function (version) {\n    return /^(?:[2-4]\\.|[34]$)/.test(version);\n  }).concat(chromeVersions.slice(firstEvergreen - last - 1));\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released);\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions);\n  return android;\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context);\n  if (!data) throw new BrowserslistError('Unknown browser ' + name);\n  return data;\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError('Unknown browser query `' + query + '`. ' + 'Maybe you are using old Browserslist or made typo in query.');\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list;\n  var released = browserslist.data.android.released;\n  var last = released[released.length - 1];\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions;\n\n  if (diff > 0) {\n    return list.slice(-1);\n  } else {\n    return list.slice(diff - 1);\n  }\n}\n/**\n * Resolves queries into a browser list.\n * @param {string|string[]} queries Queries to combine.\n * Either an array of queries or a long string of queries.\n * @param {object} [context] Optional arguments to\n * the select function in `queries`.\n * @returns {string[]} A list of browsers\n */\n\n\nfunction resolve(queries, context) {\n  if (Array.isArray(queries)) {\n    queries = flatten(queries.map(parse));\n  } else {\n    queries = parse(queries);\n  }\n\n  return queries.reduce(function (result, query, index) {\n    var selection = query.queryString;\n    var isExclude = selection.indexOf('not ') === 0;\n\n    if (isExclude) {\n      if (index === 0) {\n        throw new BrowserslistError('Write any browsers query (for instance, `defaults`) ' + 'before `' + selection + '`');\n      }\n\n      selection = selection.slice(4);\n    }\n\n    for (var i = 0; i < QUERIES.length; i++) {\n      var type = QUERIES[i];\n      var match = selection.match(type.regexp);\n\n      if (match) {\n        var args = [context].concat(match.slice(1));\n        var array = type.select.apply(browserslist, args).map(function (j) {\n          var parts = j.split(' ');\n\n          if (parts[1] === '0') {\n            return parts[0] + ' ' + byName(parts[0], context).versions[0];\n          } else {\n            return j;\n          }\n        });\n\n        switch (query.type) {\n          case QUERY_AND:\n            if (isExclude) {\n              return result.filter(function (j) {\n                return array.indexOf(j) === -1;\n              });\n            } else {\n              return result.filter(function (j) {\n                return array.indexOf(j) !== -1;\n              });\n            }\n\n          case QUERY_OR:\n          default:\n            if (isExclude) {\n              var filter = {};\n              array.forEach(function (j) {\n                filter[j] = true;\n              });\n              return result.filter(function (j) {\n                return !filter[j];\n              });\n            }\n\n            return result.concat(array);\n        }\n      }\n    }\n\n    throw unknownQuery(selection);\n  }, []);\n}\n\nvar cache = {};\n/**\n * Return array of browsers by selection queries.\n *\n * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.\n * @param {object} [opts] Options.\n * @param {string} [opts.path=\".\"] Path to processed file.\n *                                 It will be used to find config files.\n * @param {string} [opts.env=\"production\"] Processing environment.\n *                                         It will be used to take right\n *                                         queries from config file.\n * @param {string} [opts.config] Path to config file with queries.\n * @param {object} [opts.stats] Custom browser usage statistics\n *                              for \"> 1% in my stats\" query.\n * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown\n *                                                     version in direct query.\n * @param {boolean} [opts.dangerousExtend] Disable security checks\n *                                         for extend query.\n * @param {boolean} [opts.throwOnMissing] Throw error on missing env.\n * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop\n *                                         version when Can I Use doesn't have\n *                                         data about the specified version.\n * @returns {string[]} Array with browser names in Can I Use.\n *\n * @example\n * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']\n */\n\nfunction browserslist(queries, opts) {\n  if (typeof opts === 'undefined') opts = {};\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.';\n  }\n\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts);\n\n    if (config) {\n      queries = config;\n    } else {\n      queries = browserslist.defaults;\n    }\n  }\n\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError('Browser queries must be an array or string. Got ' + typeof queries + '.');\n  }\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  };\n  env.oldDataWarning(browserslist.data);\n  var stats = env.getStat(opts, browserslist.data);\n\n  if (stats) {\n    context.customUsage = {};\n\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser]);\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context]);\n  if (cache[cacheKey]) return cache[cacheKey];\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ');\n    name2 = name2.split(' ');\n\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0];\n      var version2 = name2[1].split('-')[0];\n      return compareSemver(version2.split('.'), version1.split('.'));\n    } else {\n      return compare(name1[0], name2[0]);\n    }\n  });\n\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result;\n  }\n\n  return result;\n}\n\nfunction parse(queries) {\n  var qs = [];\n\n  do {\n    queries = doMatch(queries, qs);\n  } while (queries);\n\n  return qs;\n}\n\nfunction doMatch(string, qs) {\n  var or = /^(?:,\\s*|\\s+or\\s+)(.*)/i;\n  var and = /^\\s+and\\s+(.*)/i;\n  return find(string, function (parsed, n, max) {\n    if (and.test(parsed)) {\n      qs.unshift({\n        type: QUERY_AND,\n        queryString: parsed.match(and)[1]\n      });\n      return true;\n    } else if (or.test(parsed)) {\n      qs.unshift({\n        type: QUERY_OR,\n        queryString: parsed.match(or)[1]\n      });\n      return true;\n    } else if (n === max) {\n      qs.unshift({\n        type: QUERY_OR,\n        queryString: parsed.trim()\n      });\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n);\n\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n);\n    }\n  }\n\n  return '';\n}\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array];\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b));\n  }, []);\n} // Will be filled by Can I Use data below\n\n\nbrowserslist.cache = {};\nbrowserslist.data = {};\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}; // Default browsers query\n\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']; // Browser names aliases\n\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}; // Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n\n}; // Aliases to work with joined versions like `ios_saf 7.0-7.1`\n\nbrowserslist.versionAliases = {};\nbrowserslist.clearCaches = env.clearCaches;\nbrowserslist.parseConfig = env.parseConfig;\nbrowserslist.readConfig = env.readConfig;\nbrowserslist.findConfig = env.findConfig;\nbrowserslist.loadConfig = env.loadConfig;\n/**\n * Return browsers market coverage.\n *\n * @param {string[]} browsers Browsers names in Can I Use.\n * @param {string|object} [stats=\"global\"] Which statistics should be used.\n *                                         Country code or custom statistics.\n *                                         Pass `\"my stats\"` to load statistics\n *                                         from Browserslist files.\n *\n * @return {number} Total market coverage for all selected browsers.\n *\n * @example\n * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1\n */\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data;\n\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global;\n  } else if (stats === 'my stats') {\n    var opts = {};\n    opts.path = path.resolve ? path.resolve('.') : '.';\n    var customStats = env.getStat(opts);\n\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    data = {};\n\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser]);\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase();\n    } else {\n      stats = stats.toUpperCase();\n    }\n\n    env.loadCountry(browserslist.usage, stats, browserslist.data);\n    data = browserslist.usage[stats];\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser;\n    }\n\n    data = {};\n\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version];\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i];\n\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')];\n    }\n\n    return all + (usage || 0);\n  }, 0);\n};\n\nfunction nodeQuery(context, version) {\n  var nodeReleases = jsReleases.filter(function (i) {\n    return i.name === 'nodejs';\n  });\n  var matched = nodeReleases.filter(function (i) {\n    return isVersionsMatch(i.version, version);\n  });\n\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return [];\n    } else {\n      throw new BrowserslistError('Unknown version ' + version + ' of Node.js');\n    }\n  }\n\n  return ['node ' + matched[matched.length - 1].version];\n}\n\nfunction sinceQuery(context, year, month, date) {\n  year = parseInt(year);\n  month = parseInt(month || '01') - 1;\n  date = parseInt(date || '01');\n  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context);\n}\n\nfunction coverQuery(context, coverage, statMode) {\n  coverage = parseFloat(coverage);\n  var usage = browserslist.usage.global;\n\n  if (statMode) {\n    if (statMode.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided');\n      }\n\n      usage = context.customUsage;\n    } else {\n      var place;\n\n      if (statMode.length === 2) {\n        place = statMode.toUpperCase();\n      } else {\n        place = statMode.toLowerCase();\n      }\n\n      env.loadCountry(browserslist.usage, place, browserslist.data);\n      usage = browserslist.usage[place];\n    }\n  }\n\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a];\n  });\n  var coveraged = 0;\n  var result = [];\n  var version;\n\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i];\n    if (usage[version] === 0) break;\n    coveraged += usage[version];\n    result.push(version);\n    if (coveraged >= coverage) break;\n  }\n\n  return result;\n}\n\nvar QUERIES = [{\n  regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = getMajorVersions(data.released, versions);\n      list = list.map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context);\n      }\n\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = data.released.slice(-versions);\n      list = list.map(nameMapper(data.name));\n\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context);\n      }\n\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n  select: function (context, versions) {\n    var validVersions = getMajorVersions(Object.keys(e2c), versions);\n    return validVersions.map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n  select: function (context, versions, name) {\n    var data = checkName(name, context);\n    var validVersions = getMajorVersions(data.released, versions);\n    var list = validVersions.map(nameMapper(data.name));\n\n    if (data.name === 'android') {\n      list = filterAndroid(list, versions, context);\n    }\n\n    return list;\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n  select: function (context, versions) {\n    return Object.keys(e2c).slice(-versions).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n  select: function (context, versions, name) {\n    var data = checkName(name, context);\n    var list = data.released.slice(-versions).map(nameMapper(data.name));\n\n    if (data.name === 'android') {\n      list = filterAndroid(list, versions, context);\n    }\n\n    return list;\n  }\n}, {\n  regexp: /^unreleased\\s+versions$/i,\n  select: function (context) {\n    return Object.keys(agents).reduce(function (selected, name) {\n      var data = byName(name, context);\n      if (!data) return selected;\n      var list = data.versions.filter(function (v) {\n        return data.released.indexOf(v) === -1;\n      });\n      list = list.map(nameMapper(data.name));\n      return selected.concat(list);\n    }, []);\n  }\n}, {\n  regexp: /^unreleased\\s+electron\\s+versions?$/i,\n  select: function () {\n    return [];\n  }\n}, {\n  regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n  select: function (context, name) {\n    var data = checkName(name, context);\n    return data.versions.filter(function (v) {\n      return data.released.indexOf(v) === -1;\n    }).map(nameMapper(data.name));\n  }\n}, {\n  regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n  select: function (context, years) {\n    return filterByYear(Date.now() - YEAR * years, context);\n  }\n}, {\n  regexp: /^since (\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^since (\\d+)-(\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n  select: sinceQuery\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n  select: function (context, sign, popularity) {\n    popularity = parseFloat(popularity);\n    var usage = browserslist.usage.global;\n    return Object.keys(usage).reduce(function (result, version) {\n      if (sign === '>') {\n        if (usage[version] > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (usage[version] < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (usage[version] <= popularity) {\n          result.push(version);\n        }\n      } else if (usage[version] >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n  select: function (context, sign, popularity) {\n    popularity = parseFloat(popularity);\n\n    if (!context.customUsage) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    var usage = context.customUsage;\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n  select: function (context, sign, popularity, name) {\n    popularity = parseFloat(popularity);\n    var stats = env.loadStat(context, name, browserslist.data);\n\n    if (stats) {\n      context.customUsage = {};\n\n      for (var browser in stats) {\n        fillUsage(context.customUsage, browser, stats[browser]);\n      }\n    }\n\n    if (!context.customUsage) {\n      throw new BrowserslistError('Custom usage statistics was not provided');\n    }\n\n    var usage = context.customUsage;\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n  select: function (context, sign, popularity, place) {\n    popularity = parseFloat(popularity);\n\n    if (place.length === 2) {\n      place = place.toUpperCase();\n    } else {\n      place = place.toLowerCase();\n    }\n\n    env.loadCountry(browserslist.usage, place, browserslist.data);\n    var usage = browserslist.usage[place];\n    return Object.keys(usage).reduce(function (result, version) {\n      var percentage = usage[version];\n\n      if (percentage == null) {\n        return result;\n      }\n\n      if (sign === '>') {\n        if (percentage > popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<') {\n        if (percentage < popularity) {\n          result.push(version);\n        }\n      } else if (sign === '<=') {\n        if (percentage <= popularity) {\n          result.push(version);\n        }\n      } else if (percentage >= popularity) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n  select: coverQuery\n}, {\n  regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n  select: coverQuery\n}, {\n  regexp: /^supports\\s+([\\w-]+)$/,\n  select: function (context, feature) {\n    env.loadFeature(browserslist.cache, feature);\n    var features = browserslist.cache[feature];\n    return Object.keys(features).reduce(function (result, version) {\n      var flags = features[version];\n\n      if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n        result.push(version);\n      }\n\n      return result;\n    }, []);\n  }\n}, {\n  regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, from, to) {\n    var fromToUse = normalizeElectron(from);\n    var toToUse = normalizeElectron(to);\n\n    if (!e2c[fromToUse]) {\n      throw new BrowserslistError('Unknown version ' + from + ' of electron');\n    }\n\n    if (!e2c[toToUse]) {\n      throw new BrowserslistError('Unknown version ' + to + ' of electron');\n    }\n\n    from = parseFloat(from);\n    to = parseFloat(to);\n    return Object.keys(e2c).filter(function (i) {\n      var parsed = parseFloat(i);\n      return parsed >= from && parsed <= to;\n    }).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, from, to) {\n    var nodeVersions = jsReleases.filter(function (i) {\n      return i.name === 'nodejs';\n    }).map(function (i) {\n      return i.version;\n    });\n    return nodeVersions.filter(semverFilterLoose('>=', from)).filter(semverFilterLoose('<=', to)).map(function (v) {\n      return 'node ' + v;\n    });\n  }\n}, {\n  regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n  select: function (context, name, from, to) {\n    var data = checkName(name, context);\n    from = parseFloat(normalizeVersion(data, from) || from);\n    to = parseFloat(normalizeVersion(data, to) || to);\n\n    function filter(v) {\n      var parsed = parseFloat(v);\n      return parsed >= from && parsed <= to;\n    }\n\n    return data.released.filter(filter).map(nameMapper(data.name));\n  }\n}, {\n  regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n  select: function (context, sign, version) {\n    var versionToUse = normalizeElectron(version);\n    return Object.keys(e2c).filter(generateFilter(sign, versionToUse)).map(function (i) {\n      return 'chrome ' + e2c[i];\n    });\n  }\n}, {\n  regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n  select: function (context, sign, version) {\n    var nodeVersions = jsReleases.filter(function (i) {\n      return i.name === 'nodejs';\n    }).map(function (i) {\n      return i.version;\n    });\n    return nodeVersions.filter(generateSemverFilter(sign, version)).map(function (v) {\n      return 'node ' + v;\n    });\n  }\n}, {\n  regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n  select: function (context, name, sign, version) {\n    var data = checkName(name, context);\n    var alias = browserslist.versionAliases[data.name][version];\n\n    if (alias) {\n      version = alias;\n    }\n\n    return data.released.filter(generateFilter(sign, version)).map(function (v) {\n      return data.name + ' ' + v;\n    });\n  }\n}, {\n  regexp: /^(firefox|ff|fx)\\s+esr$/i,\n  select: function () {\n    return ['firefox 91'];\n  }\n}, {\n  regexp: /(operamini|op_mini)\\s+all/i,\n  select: function () {\n    return ['op_mini all'];\n  }\n}, {\n  regexp: /^electron\\s+([\\d.]+)$/i,\n  select: function (context, version) {\n    var versionToUse = normalizeElectron(version);\n    var chrome = e2c[versionToUse];\n\n    if (!chrome) {\n      throw new BrowserslistError('Unknown version ' + version + ' of electron');\n    }\n\n    return ['chrome ' + chrome];\n  }\n}, {\n  regexp: /^node\\s+(\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n  select: nodeQuery\n}, {\n  regexp: /^current\\s+node$/i,\n  select: function (context) {\n    return [env.currentNode(resolve, context)];\n  }\n}, {\n  regexp: /^maintained\\s+node\\s+versions$/i,\n  select: function (context) {\n    var now = Date.now();\n    var queries = Object.keys(jsEOL).filter(function (key) {\n      return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);\n    }).map(function (key) {\n      return 'node ' + key.slice(1);\n    });\n    return resolve(queries, context);\n  }\n}, {\n  regexp: /^phantomjs\\s+1.9$/i,\n  select: function () {\n    return ['safari 5'];\n  }\n}, {\n  regexp: /^phantomjs\\s+2.1$/i,\n  select: function () {\n    return ['safari 6'];\n  }\n}, {\n  regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n  select: function (context, name, version) {\n    if (/^tp$/i.test(version)) version = 'TP';\n    var data = checkName(name, context);\n    var alias = normalizeVersion(data, version);\n\n    if (alias) {\n      version = alias;\n    } else {\n      if (version.indexOf('.') === -1) {\n        alias = version + '.0';\n      } else {\n        alias = version.replace(/\\.0$/, '');\n      }\n\n      alias = normalizeVersion(data, alias);\n\n      if (alias) {\n        version = alias;\n      } else if (context.ignoreUnknownVersions) {\n        return [];\n      } else {\n        throw new BrowserslistError('Unknown version ' + version + ' of ' + name);\n      }\n    }\n\n    return [data.name + ' ' + version];\n  }\n}, {\n  regexp: /^browserslist config$/i,\n  select: function (context) {\n    return browserslist(undefined, context);\n  }\n}, {\n  regexp: /^extends (.+)$/i,\n  select: function (context, name) {\n    return resolve(env.loadQueries(context, name), context);\n  }\n}, {\n  regexp: /^defaults$/i,\n  select: function (context) {\n    return resolve(browserslist.defaults, context);\n  }\n}, {\n  regexp: /^dead$/i,\n  select: function (context) {\n    var dead = ['ie <= 10', 'ie_mob <= 11', 'bb <= 10', 'op_mob <= 12.1', 'samsung 4'];\n    return resolve(dead, context);\n  }\n}, {\n  regexp: /^(\\w+)$/i,\n  select: function (context, name) {\n    if (byName(name, context)) {\n      throw new BrowserslistError('Specify versions in Browserslist query for browser ' + name);\n    } else {\n      throw unknownQuery(name);\n    }\n  }\n}] // Get and convert Can I Use data\n;\n\n(function () {\n  for (var name in agents) {\n    var browser = agents[name];\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    };\n    fillUsage(browserslist.usage.global, name, browser.usage_global);\n    browserslist.versionAliases[name] = {};\n\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i];\n      if (!full) continue;\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-');\n\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full;\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58';\n})();\n\nmodule.exports = browserslist;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/browserslist/index.js"],"names":["jsReleases","require","agents","jsEOL","path","e2c","BrowserslistError","env","YEAR","ANDROID_EVERGREEN_FIRST","QUERY_OR","QUERY_AND","isVersionsMatch","versionA","versionB","indexOf","isEolReleased","name","version","slice","some","i","normalize","versions","filter","normalizeElectron","versionToUse","split","length","join","nameMapper","mapName","getMajor","parseInt","getMajorVersions","released","number","majorVersions","uniq","map","minimum","selected","unshift","array","filtered","push","fillUsage","result","data","generateFilter","sign","parseFloat","v","generateSemverFilter","parseSimpleInt","compareSemver","x","compare","a","b","semverFilterLoose","operator","range","compareSemverLoose","resolveVersion","browserslist","versionAliases","normalizeVersion","resolved","filterByYear","since","context","Object","keys","reduce","byName","releaseDate","date","concat","cloneData","mapVersions","fixedDate","toLowerCase","aliases","mobileToDesktop","desktopNames","desktop","normalizeAndroidData","cloned","normalizeAndroidVersions","androidVersions","chromeVersions","firstEvergreen","last","test","android","chrome","checkName","unknownQuery","query","filterAndroid","list","diff","resolve","queries","Array","isArray","flatten","parse","index","selection","queryString","isExclude","QUERIES","type","match","regexp","args","select","apply","j","parts","forEach","cache","opts","config","loadConfig","defaults","ignoreUnknownVersions","dangerousExtend","oldDataWarning","stats","getStat","customUsage","browser","cacheKey","JSON","stringify","sort","name1","name2","version1","version2","process","BROWSERSLIST_DISABLE_CACHE","qs","doMatch","string","or","and","find","parsed","n","max","trim","predicate","substr","usage","global","custom","fx","ff","ios","explorer","blackberry","explorermobile","operamini","operamobile","chromeandroid","firefoxandroid","ucandroid","qqandroid","and_chr","and_ff","ie_mob","op_mob","clearCaches","parseConfig","readConfig","findConfig","coverage","browsers","customStats","toUpperCase","loadCountry","dataByBrowser","all","undefined","replace","nodeQuery","nodeReleases","matched","sinceQuery","year","month","Date","UTC","coverQuery","statMode","place","coveraged","validVersions","years","now","popularity","percentage","loadStat","feature","loadFeature","features","flags","from","to","fromToUse","toToUse","nodeVersions","alias","currentNode","key","end","start","loadQueries","dead","release_date","usage_global","full","interval","module","exports"],"mappings":"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","sourcesContent":["var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\nvar QUERY_OR = 1\nvar QUERY_AND = 2\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return jsReleases.some(function (i) {\n    return isVersionsMatch(i.version, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\n// Helpers\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\n/**\n * Resolves queries into a browser list.\n * @param {string|string[]} queries Queries to combine.\n * Either an array of queries or a long string of queries.\n * @param {object} [context] Optional arguments to\n * the select function in `queries`.\n * @returns {string[]} A list of browsers\n */\nfunction resolve(queries, context) {\n  if (Array.isArray(queries)) {\n    queries = flatten(queries.map(parse))\n  } else {\n    queries = parse(queries)\n  }\n\n  return queries.reduce(function (result, query, index) {\n    var selection = query.queryString\n\n    var isExclude = selection.indexOf('not ') === 0\n    if (isExclude) {\n      if (index === 0) {\n        throw new BrowserslistError(\n          'Write any browsers query (for instance, `defaults`) ' +\n            'before `' +\n            selection +\n            '`'\n        )\n      }\n      selection = selection.slice(4)\n    }\n\n    for (var i = 0; i < QUERIES.length; i++) {\n      var type = QUERIES[i]\n      var match = selection.match(type.regexp)\n      if (match) {\n        var args = [context].concat(match.slice(1))\n        var array = type.select.apply(browserslist, args).map(function (j) {\n          var parts = j.split(' ')\n          if (parts[1] === '0') {\n            return parts[0] + ' ' + byName(parts[0], context).versions[0]\n          } else {\n            return j\n          }\n        })\n\n        switch (query.type) {\n          case QUERY_AND:\n            if (isExclude) {\n              return result.filter(function (j) {\n                return array.indexOf(j) === -1\n              })\n            } else {\n              return result.filter(function (j) {\n                return array.indexOf(j) !== -1\n              })\n            }\n          case QUERY_OR:\n          default:\n            if (isExclude) {\n              var filter = {}\n              array.forEach(function (j) {\n                filter[j] = true\n              })\n              return result.filter(function (j) {\n                return !filter[j]\n              })\n            }\n            return result.concat(array)\n        }\n      }\n    }\n\n    throw unknownQuery(selection)\n  }, [])\n}\n\nvar cache = {}\n\n/**\n * Return array of browsers by selection queries.\n *\n * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.\n * @param {object} [opts] Options.\n * @param {string} [opts.path=\".\"] Path to processed file.\n *                                 It will be used to find config files.\n * @param {string} [opts.env=\"production\"] Processing environment.\n *                                         It will be used to take right\n *                                         queries from config file.\n * @param {string} [opts.config] Path to config file with queries.\n * @param {object} [opts.stats] Custom browser usage statistics\n *                              for \"> 1% in my stats\" query.\n * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown\n *                                                     version in direct query.\n * @param {boolean} [opts.dangerousExtend] Disable security checks\n *                                         for extend query.\n * @param {boolean} [opts.throwOnMissing] Throw error on missing env.\n * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop\n *                                         version when Can I Use doesn't have\n *                                         data about the specified version.\n * @returns {string[]} Array with browser names in Can I Use.\n *\n * @example\n * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']\n */\nfunction browserslist(queries, opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nfunction parse(queries) {\n  var qs = []\n  do {\n    queries = doMatch(queries, qs)\n  } while (queries)\n  return qs\n}\n\nfunction doMatch(string, qs) {\n  var or = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n  var and = /^\\s+and\\s+(.*)/i\n\n  return find(string, function (parsed, n, max) {\n    if (and.test(parsed)) {\n      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] })\n      return true\n    } else if (or.test(parsed)) {\n      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] })\n      return true\n    } else if (n === max) {\n      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() })\n      return true\n    }\n    return false\n  })\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\n/**\n * Return browsers market coverage.\n *\n * @param {string[]} browsers Browsers names in Can I Use.\n * @param {string|object} [stats=\"global\"] Which statistics should be used.\n *                                         Country code or custom statistics.\n *                                         Pass `\"my stats\"` to load statistics\n *                                         from Browserslist files.\n *\n * @return {number} Total market coverage for all selected browsers.\n *\n * @example\n * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1\n */\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, version) {\n  var nodeReleases = jsReleases.filter(function (i) {\n    return i.name === 'nodejs'\n  })\n  var matched = nodeReleases.filter(function (i) {\n    return isVersionsMatch(i.version, version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError('Unknown version ' + version + ' of Node.js')\n    }\n  }\n  return ['node ' + matched[matched.length - 1].version]\n}\n\nfunction sinceQuery(context, year, month, date) {\n  year = parseInt(year)\n  month = parseInt(month || '01') - 1\n  date = parseInt(date || '01')\n  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, coverage, statMode) {\n  coverage = parseFloat(coverage)\n  var usage = browserslist.usage.global\n  if (statMode) {\n    if (statMode.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (statMode.length === 2) {\n        place = statMode.toUpperCase()\n      } else {\n        place = statMode.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = [\n  {\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, versions) {\n      var validVersions = getMajorVersions(Object.keys(e2c), versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, versions, name) {\n      var data = checkName(name, context)\n      var validVersions = getMajorVersions(data.released, versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context)\n      }\n      return list\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, versions) {\n      return Object.keys(e2c)\n        .slice(-versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, versions, name) {\n      var data = checkName(name, context)\n      var list = data.released.slice(-versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, versions, context)\n      }\n      return list\n    }\n  },\n  {\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  {\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  {\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, name) {\n      var data = checkName(name, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  {\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, years) {\n      return filterByYear(Date.now() - YEAR * years, context)\n    }\n  },\n  {\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, sign, popularity) {\n      popularity = parseFloat(popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, sign, popularity) {\n      popularity = parseFloat(popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, sign, popularity, name) {\n      popularity = parseFloat(popularity)\n      var stats = env.loadStat(context, name, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, sign, popularity, place) {\n      popularity = parseFloat(popularity)\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  {\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  {\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, feature) {\n      env.loadFeature(browserslist.cache, feature)\n      var features = browserslist.cache[feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  {\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, from, to) {\n      var fromToUse = normalizeElectron(from)\n      var toToUse = normalizeElectron(to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      from = parseFloat(from)\n      to = parseFloat(to)\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, from, to) {\n      var nodeVersions = jsReleases\n        .filter(function (i) {\n          return i.name === 'nodejs'\n        })\n        .map(function (i) {\n          return i.version\n        })\n      return nodeVersions\n        .filter(semverFilterLoose('>=', from))\n        .filter(semverFilterLoose('<=', to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, name, from, to) {\n      var data = checkName(name, context)\n      from = parseFloat(normalizeVersion(data, from) || from)\n      to = parseFloat(normalizeVersion(data, to) || to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  {\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, sign, version) {\n      var versionToUse = normalizeElectron(version)\n      return Object.keys(e2c)\n        .filter(generateFilter(sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  {\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, sign, version) {\n      var nodeVersions = jsReleases\n        .filter(function (i) {\n          return i.name === 'nodejs'\n        })\n        .map(function (i) {\n          return i.version\n        })\n      return nodeVersions\n        .filter(generateSemverFilter(sign, version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, name, sign, version) {\n      var data = checkName(name, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) {\n        version = alias\n      }\n      return data.released\n        .filter(generateFilter(sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  {\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 91']\n    }\n  },\n  {\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  {\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, version) {\n      var versionToUse = normalizeElectron(version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  {\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  {\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  {\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  {\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  {\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  {\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, name, version) {\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(name, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + name\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  {\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  {\n    regexp: /^extends (.+)$/i,\n    select: function (context, name) {\n      return resolve(env.loadQueries(context, name), context)\n    }\n  },\n  {\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  {\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'ie <= 10',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  {\n    regexp: /^(\\w+)$/i,\n    select: function (context, name) {\n      if (byName(name, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + name\n        )\n      } else {\n        throw unknownQuery(name)\n      }\n    }\n  }\n]\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n})()\n\nmodule.exports = browserslist\n"]},"metadata":{},"sourceType":"script"}