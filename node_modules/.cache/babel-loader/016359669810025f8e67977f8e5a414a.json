{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\n\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nconst ImportContextDependency = require(\"./ImportContextDependency\");\n\nconst ImportDependency = require(\"./ImportDependency\");\n\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n/** @typedef {import(\"../ChunkGroup\").RawChunkGroupOptions} RawChunkGroupOptions */\n\n/** @typedef {import(\"../ContextModule\").ContextMode} ContextMode */\n\n\nclass ImportParserPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(parser) {\n    parser.hooks.importCall.tap(\"ImportParserPlugin\", expr => {\n      const param = parser.evaluateExpression(expr.source);\n      let chunkName = null;\n      /** @type {ContextMode} */\n\n      let mode = \"lazy\";\n      let include = null;\n      let exclude = null;\n      /** @type {string[][] | null} */\n\n      let exports = null;\n      /** @type {RawChunkGroupOptions} */\n\n      const groupOptions = {};\n      const {\n        options: importOptions,\n        errors: commentErrors\n      } = parser.parseCommentOptions(expr.range);\n\n      if (commentErrors) {\n        for (const e of commentErrors) {\n          const {\n            comment\n          } = e;\n          parser.state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n        }\n      }\n\n      if (importOptions) {\n        if (importOptions.webpackIgnore !== undefined) {\n          if (typeof importOptions.webpackIgnore !== \"boolean\") {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`, expr.loc));\n          } else {\n            // Do not instrument `import()` if `webpackIgnore` is `true`\n            if (importOptions.webpackIgnore) {\n              return false;\n            }\n          }\n        }\n\n        if (importOptions.webpackChunkName !== undefined) {\n          if (typeof importOptions.webpackChunkName !== \"string\") {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackChunkName\\` expected a string, but received: ${importOptions.webpackChunkName}.`, expr.loc));\n          } else {\n            chunkName = importOptions.webpackChunkName;\n          }\n        }\n\n        if (importOptions.webpackMode !== undefined) {\n          if (typeof importOptions.webpackMode !== \"string\") {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackMode\\` expected a string, but received: ${importOptions.webpackMode}.`, expr.loc));\n          } else {\n            mode = importOptions.webpackMode;\n          }\n        }\n\n        if (importOptions.webpackPrefetch !== undefined) {\n          if (importOptions.webpackPrefetch === true) {\n            groupOptions.prefetchOrder = 0;\n          } else if (typeof importOptions.webpackPrefetch === \"number\") {\n            groupOptions.prefetchOrder = importOptions.webpackPrefetch;\n          } else {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackPrefetch\\` expected true or a number, but received: ${importOptions.webpackPrefetch}.`, expr.loc));\n          }\n        }\n\n        if (importOptions.webpackPreload !== undefined) {\n          if (importOptions.webpackPreload === true) {\n            groupOptions.preloadOrder = 0;\n          } else if (typeof importOptions.webpackPreload === \"number\") {\n            groupOptions.preloadOrder = importOptions.webpackPreload;\n          } else {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackPreload\\` expected true or a number, but received: ${importOptions.webpackPreload}.`, expr.loc));\n          }\n        }\n\n        if (importOptions.webpackInclude !== undefined) {\n          if (!importOptions.webpackInclude || importOptions.webpackInclude.constructor.name !== \"RegExp\") {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackInclude\\` expected a regular expression, but received: ${importOptions.webpackInclude}.`, expr.loc));\n          } else {\n            include = new RegExp(importOptions.webpackInclude);\n          }\n        }\n\n        if (importOptions.webpackExclude !== undefined) {\n          if (!importOptions.webpackExclude || importOptions.webpackExclude.constructor.name !== \"RegExp\") {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackExclude\\` expected a regular expression, but received: ${importOptions.webpackExclude}.`, expr.loc));\n          } else {\n            exclude = new RegExp(importOptions.webpackExclude);\n          }\n        }\n\n        if (importOptions.webpackExports !== undefined) {\n          if (!(typeof importOptions.webpackExports === \"string\" || Array.isArray(importOptions.webpackExports) && importOptions.webpackExports.every(item => typeof item === \"string\"))) {\n            parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackExports\\` expected a string or an array of strings, but received: ${importOptions.webpackExports}.`, expr.loc));\n          } else {\n            if (typeof importOptions.webpackExports === \"string\") {\n              exports = [[importOptions.webpackExports]];\n            } else {\n              exports = Array.from(importOptions.webpackExports, e => [e]);\n            }\n          }\n        }\n      }\n\n      if (param.isString()) {\n        if (mode !== \"lazy\" && mode !== \"eager\" && mode !== \"weak\") {\n          parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackMode\\` expected 'lazy', 'eager' or 'weak', but received: ${mode}.`, expr.loc));\n        }\n\n        if (mode === \"eager\") {\n          const dep = new ImportEagerDependency(param.string, expr.range, exports);\n          parser.state.current.addDependency(dep);\n        } else if (mode === \"weak\") {\n          const dep = new ImportWeakDependency(param.string, expr.range, exports);\n          parser.state.current.addDependency(dep);\n        } else {\n          const depBlock = new AsyncDependenciesBlock({ ...groupOptions,\n            name: chunkName\n          }, expr.loc, param.string);\n          const dep = new ImportDependency(param.string, expr.range, exports);\n          dep.loc = expr.loc;\n          depBlock.addDependency(dep);\n          parser.state.current.addBlock(depBlock);\n        }\n\n        return true;\n      } else {\n        if (mode !== \"lazy\" && mode !== \"lazy-once\" && mode !== \"eager\" && mode !== \"weak\") {\n          parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackMode\\` expected 'lazy', 'lazy-once', 'eager' or 'weak', but received: ${mode}.`, expr.loc));\n          mode = \"lazy\";\n        }\n\n        if (mode === \"weak\") {\n          mode = \"async-weak\";\n        }\n\n        const dep = ContextDependencyHelpers.create(ImportContextDependency, expr.range, param, expr, this.options, {\n          chunkName,\n          groupOptions,\n          include,\n          exclude,\n          mode,\n          namespaceObject: parser.state.module.buildMeta.strictHarmonyModule ? \"strict\" : true,\n          typePrefix: \"import()\",\n          category: \"esm\",\n          referencedExports: exports\n        }, parser);\n        if (!dep) return;\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    });\n  }\n\n}\n\nmodule.exports = ImportParserPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/ImportParserPlugin.js"],"names":["AsyncDependenciesBlock","require","CommentCompilationWarning","UnsupportedFeatureWarning","ContextDependencyHelpers","ImportContextDependency","ImportDependency","ImportEagerDependency","ImportWeakDependency","ImportParserPlugin","constructor","options","apply","parser","hooks","importCall","tap","expr","param","evaluateExpression","source","chunkName","mode","include","exclude","exports","groupOptions","importOptions","errors","commentErrors","parseCommentOptions","range","e","comment","state","module","addWarning","value","message","loc","webpackIgnore","undefined","webpackChunkName","webpackMode","webpackPrefetch","prefetchOrder","webpackPreload","preloadOrder","webpackInclude","name","RegExp","webpackExclude","webpackExports","Array","isArray","every","item","from","isString","dep","string","current","addDependency","depBlock","addBlock","create","namespaceObject","buildMeta","strictHarmonyModule","typePrefix","category","referencedExports","optional","scope","inTry"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n\n/** @typedef {import(\"../ChunkGroup\").RawChunkGroupOptions} RawChunkGroupOptions */\n/** @typedef {import(\"../ContextModule\").ContextMode} ContextMode */\n\nclass ImportParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.importCall.tap(\"ImportParserPlugin\", expr => {\n\t\t\tconst param = parser.evaluateExpression(expr.source);\n\n\t\t\tlet chunkName = null;\n\t\t\t/** @type {ContextMode} */\n\t\t\tlet mode = \"lazy\";\n\t\t\tlet include = null;\n\t\t\tlet exclude = null;\n\t\t\t/** @type {string[][] | null} */\n\t\t\tlet exports = null;\n\t\t\t/** @type {RawChunkGroupOptions} */\n\t\t\tconst groupOptions = {};\n\n\t\t\tconst { options: importOptions, errors: commentErrors } =\n\t\t\t\tparser.parseCommentOptions(expr.range);\n\n\t\t\tif (commentErrors) {\n\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (importOptions) {\n\t\t\t\tif (importOptions.webpackIgnore !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Do not instrument `import()` if `webpackIgnore` is `true`\n\t\t\t\t\t\tif (importOptions.webpackIgnore) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackChunkName !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackChunkName !== \"string\") {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackChunkName\\` expected a string, but received: ${importOptions.webpackChunkName}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunkName = importOptions.webpackChunkName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackMode !== undefined) {\n\t\t\t\t\tif (typeof importOptions.webpackMode !== \"string\") {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackMode\\` expected a string, but received: ${importOptions.webpackMode}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmode = importOptions.webpackMode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPrefetch !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPrefetch === true) {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPrefetch === \"number\") {\n\t\t\t\t\t\tgroupOptions.prefetchOrder = importOptions.webpackPrefetch;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackPrefetch\\` expected true or a number, but received: ${importOptions.webpackPrefetch}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackPreload !== undefined) {\n\t\t\t\t\tif (importOptions.webpackPreload === true) {\n\t\t\t\t\t\tgroupOptions.preloadOrder = 0;\n\t\t\t\t\t} else if (typeof importOptions.webpackPreload === \"number\") {\n\t\t\t\t\t\tgroupOptions.preloadOrder = importOptions.webpackPreload;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackPreload\\` expected true or a number, but received: ${importOptions.webpackPreload}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackInclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackInclude ||\n\t\t\t\t\t\timportOptions.webpackInclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackInclude\\` expected a regular expression, but received: ${importOptions.webpackInclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinclude = new RegExp(importOptions.webpackInclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackExclude !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!importOptions.webpackExclude ||\n\t\t\t\t\t\timportOptions.webpackExclude.constructor.name !== \"RegExp\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackExclude\\` expected a regular expression, but received: ${importOptions.webpackExclude}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\texclude = new RegExp(importOptions.webpackExclude);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (importOptions.webpackExports !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\ttypeof importOptions.webpackExports === \"string\" ||\n\t\t\t\t\t\t\t(Array.isArray(importOptions.webpackExports) &&\n\t\t\t\t\t\t\t\timportOptions.webpackExports.every(\n\t\t\t\t\t\t\t\t\titem => typeof item === \"string\"\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t`\\`webpackExports\\` expected a string or an array of strings, but received: ${importOptions.webpackExports}.`,\n\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof importOptions.webpackExports === \"string\") {\n\t\t\t\t\t\t\texports = [[importOptions.webpackExports]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\texports = Array.from(importOptions.webpackExports, e => [e]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (param.isString()) {\n\t\t\t\tif (mode !== \"lazy\" && mode !== \"eager\" && mode !== \"weak\") {\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"eager\") {\n\t\t\t\t\tconst dep = new ImportEagerDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texports\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else if (mode === \"weak\") {\n\t\t\t\t\tconst dep = new ImportWeakDependency(\n\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texports\n\t\t\t\t\t);\n\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t} else {\n\t\t\t\t\tconst depBlock = new AsyncDependenciesBlock(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...groupOptions,\n\t\t\t\t\t\t\tname: chunkName\n\t\t\t\t\t\t},\n\t\t\t\t\t\texpr.loc,\n\t\t\t\t\t\tparam.string\n\t\t\t\t\t);\n\t\t\t\t\tconst dep = new ImportDependency(param.string, expr.range, exports);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tdepBlock.addDependency(dep);\n\t\t\t\t\tparser.state.current.addBlock(depBlock);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tmode !== \"lazy\" &&\n\t\t\t\t\tmode !== \"lazy-once\" &&\n\t\t\t\t\tmode !== \"eager\" &&\n\t\t\t\t\tmode !== \"weak\"\n\t\t\t\t) {\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t`\\`webpackMode\\` expected 'lazy', 'lazy-once', 'eager' or 'weak', but received: ${mode}.`,\n\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tmode = \"lazy\";\n\t\t\t\t}\n\n\t\t\t\tif (mode === \"weak\") {\n\t\t\t\t\tmode = \"async-weak\";\n\t\t\t\t}\n\t\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tparam,\n\t\t\t\t\texpr,\n\t\t\t\t\tthis.options,\n\t\t\t\t\t{\n\t\t\t\t\t\tchunkName,\n\t\t\t\t\t\tgroupOptions,\n\t\t\t\t\t\tinclude,\n\t\t\t\t\t\texclude,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tnamespaceObject: parser.state.module.buildMeta.strictHarmonyModule\n\t\t\t\t\t\t\t? \"strict\"\n\t\t\t\t\t\t\t: true,\n\t\t\t\t\t\ttypePrefix: \"import()\",\n\t\t\t\t\t\tcategory: \"esm\",\n\t\t\t\t\t\treferencedExports: exports\n\t\t\t\t\t},\n\t\t\t\t\tparser\n\t\t\t\t);\n\t\t\t\tif (!dep) return;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = ImportParserPlugin;\n"]},"metadata":{},"sourceType":"script"}