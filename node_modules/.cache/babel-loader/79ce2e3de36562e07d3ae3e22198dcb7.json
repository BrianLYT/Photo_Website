{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  compareModulesByIdentifier,\n  compareStrings\n} = require(\"../util/comparators\");\n\nclass ShareRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"sharing\");\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      compilation,\n      chunkGraph\n    } = this;\n    const {\n      runtimeTemplate,\n      codeGenerationResults,\n      outputOptions: {\n        uniqueName\n      }\n    } = compilation;\n    /** @type {Map<string, Map<number, Set<string>>>} */\n\n    const initCodePerScope = new Map();\n\n    for (const chunk of this.chunk.getAllReferencedChunks()) {\n      const modules = chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"share-init\", compareModulesByIdentifier);\n      if (!modules) continue;\n\n      for (const m of modules) {\n        const data = codeGenerationResults.getData(m, chunk.runtime, \"share-init\");\n        if (!data) continue;\n\n        for (const item of data) {\n          const {\n            shareScope,\n            initStage,\n            init\n          } = item;\n          let stages = initCodePerScope.get(shareScope);\n\n          if (stages === undefined) {\n            initCodePerScope.set(shareScope, stages = new Map());\n          }\n\n          let list = stages.get(initStage || 0);\n\n          if (list === undefined) {\n            stages.set(initStage || 0, list = new Set());\n          }\n\n          list.add(init);\n        }\n      }\n    }\n\n    return Template.asString([`${RuntimeGlobals.shareScopeMap} = {};`, \"var initPromises = {};\", \"var initTokens = {};\", `${RuntimeGlobals.initializeSharing} = ${runtimeTemplate.basicFunction(\"name, initScope\", [\"if(!initScope) initScope = [];\", \"// handling circular init calls\", \"var initToken = initTokens[name];\", \"if(!initToken) initToken = initTokens[name] = {};\", \"if(initScope.indexOf(initToken) >= 0) return;\", \"initScope.push(initToken);\", \"// only runs once\", \"if(initPromises[name]) return initPromises[name];\", \"// creates a new share scope if needed\", `if(!${RuntimeGlobals.hasOwnProperty}(${RuntimeGlobals.shareScopeMap}, name)) ${RuntimeGlobals.shareScopeMap}[name] = {};`, \"// runs all init snippets from all modules reachable\", `var scope = ${RuntimeGlobals.shareScopeMap}[name];`, `var warn = ${runtimeTemplate.returningFunction('typeof console !== \"undefined\" && console.warn && console.warn(msg)', \"msg\")};`, `var uniqueName = ${JSON.stringify(uniqueName || undefined)};`, `var register = ${runtimeTemplate.basicFunction(\"name, version, factory, eager\", [\"var versions = scope[name] = scope[name] || {};\", \"var activeVersion = versions[version];\", \"if(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\"])};`, `var initExternal = ${runtimeTemplate.basicFunction(\"id\", [`var handleError = ${runtimeTemplate.expressionFunction('warn(\"Initialization of sharing external failed: \" + err)', \"err\")};`, \"try {\", Template.indent([\"var module = __webpack_require__(id);\", \"if(!module) return;\", `var initFn = ${runtimeTemplate.returningFunction(`module && module.init && module.init(${RuntimeGlobals.shareScopeMap}[name], initScope)`, \"module\")}`, \"if(module.then) return promises.push(module.then(initFn, handleError));\", \"var initResult = initFn(module);\", \"if(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\"]), \"} catch(err) { handleError(err); }\"])}`, \"var promises = [];\", \"switch(name) {\", ...Array.from(initCodePerScope).sort((_ref, _ref2) => {\n      let [a] = _ref;\n      let [b] = _ref2;\n      return compareStrings(a, b);\n    }).map(_ref3 => {\n      let [name, stages] = _ref3;\n      return Template.indent([`case ${JSON.stringify(name)}: {`, Template.indent(Array.from(stages).sort((_ref4, _ref5) => {\n        let [a] = _ref4;\n        let [b] = _ref5;\n        return a - b;\n      }).map(_ref6 => {\n        let [, initCode] = _ref6;\n        return Template.asString(Array.from(initCode));\n      })), \"}\", \"break;\"]);\n    }), \"}\", \"if(!promises.length) return initPromises[name] = 1;\", `return initPromises[name] = Promise.all(promises).then(${runtimeTemplate.returningFunction(\"initPromises[name] = 1\")});`])};`]);\n  }\n\n}\n\nmodule.exports = ShareRuntimeModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/sharing/ShareRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","compareModulesByIdentifier","compareStrings","ShareRuntimeModule","constructor","generate","compilation","chunkGraph","runtimeTemplate","codeGenerationResults","outputOptions","uniqueName","initCodePerScope","Map","chunk","getAllReferencedChunks","modules","getOrderedChunkModulesIterableBySourceType","m","data","getData","runtime","item","shareScope","initStage","init","stages","get","undefined","set","list","Set","add","asString","shareScopeMap","initializeSharing","basicFunction","hasOwnProperty","returningFunction","JSON","stringify","expressionFunction","indent","Array","from","sort","a","b","map","name","initCode","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tcompareModulesByIdentifier,\n\tcompareStrings\n} = require(\"../util/comparators\");\n\nclass ShareRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"sharing\");\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { compilation, chunkGraph } = this;\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\tcodeGenerationResults,\n\t\t\toutputOptions: { uniqueName }\n\t\t} = compilation;\n\t\t/** @type {Map<string, Map<number, Set<string>>>} */\n\t\tconst initCodePerScope = new Map();\n\t\tfor (const chunk of this.chunk.getAllReferencedChunks()) {\n\t\t\tconst modules = chunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\tchunk,\n\t\t\t\t\"share-init\",\n\t\t\t\tcompareModulesByIdentifier\n\t\t\t);\n\t\t\tif (!modules) continue;\n\t\t\tfor (const m of modules) {\n\t\t\t\tconst data = codeGenerationResults.getData(\n\t\t\t\t\tm,\n\t\t\t\t\tchunk.runtime,\n\t\t\t\t\t\"share-init\"\n\t\t\t\t);\n\t\t\t\tif (!data) continue;\n\t\t\t\tfor (const item of data) {\n\t\t\t\t\tconst { shareScope, initStage, init } = item;\n\t\t\t\t\tlet stages = initCodePerScope.get(shareScope);\n\t\t\t\t\tif (stages === undefined) {\n\t\t\t\t\t\tinitCodePerScope.set(shareScope, (stages = new Map()));\n\t\t\t\t\t}\n\t\t\t\t\tlet list = stages.get(initStage || 0);\n\t\t\t\t\tif (list === undefined) {\n\t\t\t\t\t\tstages.set(initStage || 0, (list = new Set()));\n\t\t\t\t\t}\n\t\t\t\t\tlist.add(init);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Template.asString([\n\t\t\t`${RuntimeGlobals.shareScopeMap} = {};`,\n\t\t\t\"var initPromises = {};\",\n\t\t\t\"var initTokens = {};\",\n\t\t\t`${RuntimeGlobals.initializeSharing} = ${runtimeTemplate.basicFunction(\n\t\t\t\t\"name, initScope\",\n\t\t\t\t[\n\t\t\t\t\t\"if(!initScope) initScope = [];\",\n\t\t\t\t\t\"// handling circular init calls\",\n\t\t\t\t\t\"var initToken = initTokens[name];\",\n\t\t\t\t\t\"if(!initToken) initToken = initTokens[name] = {};\",\n\t\t\t\t\t\"if(initScope.indexOf(initToken) >= 0) return;\",\n\t\t\t\t\t\"initScope.push(initToken);\",\n\t\t\t\t\t\"// only runs once\",\n\t\t\t\t\t\"if(initPromises[name]) return initPromises[name];\",\n\t\t\t\t\t\"// creates a new share scope if needed\",\n\t\t\t\t\t`if(!${RuntimeGlobals.hasOwnProperty}(${RuntimeGlobals.shareScopeMap}, name)) ${RuntimeGlobals.shareScopeMap}[name] = {};`,\n\t\t\t\t\t\"// runs all init snippets from all modules reachable\",\n\t\t\t\t\t`var scope = ${RuntimeGlobals.shareScopeMap}[name];`,\n\t\t\t\t\t`var warn = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t'typeof console !== \"undefined\" && console.warn && console.warn(msg)',\n\t\t\t\t\t\t\"msg\"\n\t\t\t\t\t)};`,\n\t\t\t\t\t`var uniqueName = ${JSON.stringify(uniqueName || undefined)};`,\n\t\t\t\t\t`var register = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\"name, version, factory, eager\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"var versions = scope[name] = scope[name] || {};\",\n\t\t\t\t\t\t\t\"var activeVersion = versions[version];\",\n\t\t\t\t\t\t\t\"if(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\"\n\t\t\t\t\t\t]\n\t\t\t\t\t)};`,\n\t\t\t\t\t`var initExternal = ${runtimeTemplate.basicFunction(\"id\", [\n\t\t\t\t\t\t`var handleError = ${runtimeTemplate.expressionFunction(\n\t\t\t\t\t\t\t'warn(\"Initialization of sharing external failed: \" + err)',\n\t\t\t\t\t\t\t\"err\"\n\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\"try {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var module = __webpack_require__(id);\",\n\t\t\t\t\t\t\t\"if(!module) return;\",\n\t\t\t\t\t\t\t`var initFn = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t`module && module.init && module.init(${RuntimeGlobals.shareScopeMap}[name], initScope)`,\n\t\t\t\t\t\t\t\t\"module\"\n\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\"if(module.then) return promises.push(module.then(initFn, handleError));\",\n\t\t\t\t\t\t\t\"var initResult = initFn(module);\",\n\t\t\t\t\t\t\t\"if(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"} catch(err) { handleError(err); }\"\n\t\t\t\t\t])}`,\n\t\t\t\t\t\"var promises = [];\",\n\t\t\t\t\t\"switch(name) {\",\n\t\t\t\t\t...Array.from(initCodePerScope)\n\t\t\t\t\t\t.sort(([a], [b]) => compareStrings(a, b))\n\t\t\t\t\t\t.map(([name, stages]) =>\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`case ${JSON.stringify(name)}: {`,\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\tArray.from(stages)\n\t\t\t\t\t\t\t\t\t\t.sort(([a], [b]) => a - b)\n\t\t\t\t\t\t\t\t\t\t.map(([, initCode]) =>\n\t\t\t\t\t\t\t\t\t\t\tTemplate.asString(Array.from(initCode))\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"break;\"\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t),\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"if(!promises.length) return initPromises[name] = 1;\",\n\t\t\t\t\t`return initPromises[name] = Promise.all(promises).then(${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"initPromises[name] = 1\"\n\t\t\t\t\t)});`\n\t\t\t\t]\n\t\t\t)};`\n\t\t]);\n\t}\n}\n\nmodule.exports = ShareRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}