{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\n\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst {\n  evaluateToString,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nclass RequireEnsurePlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireEnsurePlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\n      compilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireEnsure !== undefined && !parserOptions.requireEnsure) return;\n        new RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n        parser.hooks.evaluateTypeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireEnsurePlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireEnsurePlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = RequireEnsurePlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/RequireEnsurePlugin.js"],"names":["RequireEnsureDependency","require","RequireEnsureItemDependency","RequireEnsureDependenciesBlockParserPlugin","evaluateToString","toConstantDependency","RequireEnsurePlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireEnsure","undefined","evaluateTypeof","for","typeof","JSON","stringify","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAAD,CAA3C;;AAEA,MAAME,0CAA0C,GAAGF,OAAO,CAAC,8CAAD,CAA1D;;AAEA,MAAM;AACLG,EAAAA,gBADK;AAELC,EAAAA;AAFK,IAGFJ,OAAO,CAAC,uCAAD,CAHX;;AAKA,MAAMK,mBAAN,CAA0B;AACzBC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,qBADD,EAEC,CAACD,WAAD,WAA0C;AAAA,UAA5B;AAAEE,QAAAA;AAAF,OAA4B;AACzCF,MAAAA,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCZ,2BADD,EAECU,mBAFD;AAIAF,MAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCZ,2BADD,EAEC,IAAIA,2BAA2B,CAACc,QAAhC,EAFD;AAKAN,MAAAA,WAAW,CAACK,mBAAZ,CAAgCD,GAAhC,CACCd,uBADD,EAEC,IAAIA,uBAAuB,CAACgB,QAA5B,EAFD;;AAKA,YAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C,YACCA,aAAa,CAACC,aAAd,KAAgCC,SAAhC,IACA,CAACF,aAAa,CAACC,aAFhB,EAIC;AAED,YAAIjB,0CAAJ,GAAiDI,KAAjD,CAAuDW,MAAvD;AACAA,QAAAA,MAAM,CAACT,KAAP,CAAaa,cAAb,CACEC,GADF,CACM,gBADN,EAEEZ,GAFF,CAEM,qBAFN,EAE6BP,gBAAgB,CAAC,UAAD,CAF7C;AAGAc,QAAAA,MAAM,CAACT,KAAP,CAAae,MAAb,CACED,GADF,CACM,gBADN,EAEEZ,GAFF,CAGE,qBAHF,EAIEN,oBAAoB,CAACa,MAAD,EAASO,IAAI,CAACC,SAAL,CAAe,UAAf,CAAT,CAJtB;AAMA,OAjBD;;AAmBAd,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEK,GADF,CACM,iBADN,EAEEZ,GAFF,CAEM,qBAFN,EAE6BM,OAF7B;AAGAL,MAAAA,mBAAmB,CAACH,KAApB,CAA0BS,MAA1B,CACEK,GADF,CACM,oBADN,EAEEZ,GAFF,CAEM,qBAFN,EAE6BM,OAF7B;AAGA,KA1CF;AA4CA;;AA9CwB;;AAgD1BU,MAAM,CAACC,OAAP,GAAiBtB,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst {\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nclass RequireEnsurePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireEnsurePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnew RequireEnsureItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew RequireEnsureDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireEnsure !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireEnsure\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\"RequireEnsurePlugin\", evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireEnsurePlugin;\n"]},"metadata":{},"sourceType":"script"}