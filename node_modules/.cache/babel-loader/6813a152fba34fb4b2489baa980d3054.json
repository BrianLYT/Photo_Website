{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  register\n} = require(\"./serialization\");\n\nconst Position =\n/** @type {TODO} */\nrequire(\"acorn\").Position;\n\nconst SourceLocation = require(\"acorn\").SourceLocation;\n\nconst ValidationError = require(\"schema-utils/dist/ValidationError\").default;\n\nconst {\n  CachedSource,\n  ConcatSource,\n  OriginalSource,\n  PrefixSource,\n  RawSource,\n  ReplaceSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\n/** @typedef {import(\"acorn\").Position} Position */\n\n/** @typedef {import(\"../Dependency\").RealDependencyLocation} RealDependencyLocation */\n\n/** @typedef {import(\"../Dependency\").SourcePosition} SourcePosition */\n\n/** @typedef {import(\"./serialization\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./serialization\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {ObjectSerializerContext & { writeLazy?: (any) => void }} WebpackObjectSerializerContext */\n\n\nconst CURRENT_MODULE = \"webpack/lib/util/registerExternalSerializer\";\nregister(CachedSource, CURRENT_MODULE, \"webpack-sources/CachedSource\", new class CachedSourceSerializer {\n  /**\n   * @param {CachedSource} source the cached source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref) {\n    let {\n      write,\n      writeLazy\n    } = _ref;\n\n    if (writeLazy) {\n      writeLazy(source.originalLazy());\n    } else {\n      write(source.original());\n    }\n\n    write(source.getCachedData());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {CachedSource} cached source\n   */\n\n\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    const source = read();\n    const cachedData = read();\n    return new CachedSource(source, cachedData);\n  }\n\n}());\nregister(RawSource, CURRENT_MODULE, \"webpack-sources/RawSource\", new class RawSourceSerializer {\n  /**\n   * @param {RawSource} source the raw source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref3) {\n    let {\n      write\n    } = _ref3;\n    write(source.buffer());\n    write(!source.isBuffer());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RawSource} raw source\n   */\n\n\n  deserialize(_ref4) {\n    let {\n      read\n    } = _ref4;\n    const source = read();\n    const convertToString = read();\n    return new RawSource(source, convertToString);\n  }\n\n}());\nregister(ConcatSource, CURRENT_MODULE, \"webpack-sources/ConcatSource\", new class ConcatSourceSerializer {\n  /**\n   * @param {ConcatSource} source the concat source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref5) {\n    let {\n      write\n    } = _ref5;\n    write(source.getChildren());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {ConcatSource} concat source\n   */\n\n\n  deserialize(_ref6) {\n    let {\n      read\n    } = _ref6;\n    const source = new ConcatSource();\n    source.addAllSkipOptimizing(read());\n    return source;\n  }\n\n}());\nregister(PrefixSource, CURRENT_MODULE, \"webpack-sources/PrefixSource\", new class PrefixSourceSerializer {\n  /**\n   * @param {PrefixSource} source the prefix source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref7) {\n    let {\n      write\n    } = _ref7;\n    write(source.getPrefix());\n    write(source.original());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {PrefixSource} prefix source\n   */\n\n\n  deserialize(_ref8) {\n    let {\n      read\n    } = _ref8;\n    return new PrefixSource(read(), read());\n  }\n\n}());\nregister(ReplaceSource, CURRENT_MODULE, \"webpack-sources/ReplaceSource\", new class ReplaceSourceSerializer {\n  /**\n   * @param {ReplaceSource} source the replace source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref9) {\n    let {\n      write\n    } = _ref9;\n    write(source.original());\n    write(source.getName());\n    const replacements = source.getReplacements();\n    write(replacements.length);\n\n    for (const repl of replacements) {\n      write(repl.start);\n      write(repl.end);\n    }\n\n    for (const repl of replacements) {\n      write(repl.content);\n      write(repl.name);\n    }\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {ReplaceSource} replace source\n   */\n\n\n  deserialize(_ref10) {\n    let {\n      read\n    } = _ref10;\n    const source = new ReplaceSource(read(), read());\n    const len = read();\n    const startEndBuffer = [];\n\n    for (let i = 0; i < len; i++) {\n      startEndBuffer.push(read(), read());\n    }\n\n    let j = 0;\n\n    for (let i = 0; i < len; i++) {\n      source.replace(startEndBuffer[j++], startEndBuffer[j++], read(), read());\n    }\n\n    return source;\n  }\n\n}());\nregister(OriginalSource, CURRENT_MODULE, \"webpack-sources/OriginalSource\", new class OriginalSourceSerializer {\n  /**\n   * @param {OriginalSource} source the original source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref11) {\n    let {\n      write\n    } = _ref11;\n    write(source.buffer());\n    write(source.getName());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {OriginalSource} original source\n   */\n\n\n  deserialize(_ref12) {\n    let {\n      read\n    } = _ref12;\n    const buffer = read();\n    const name = read();\n    return new OriginalSource(buffer, name);\n  }\n\n}());\nregister(SourceLocation, CURRENT_MODULE, \"acorn/SourceLocation\", new class SourceLocationSerializer {\n  /**\n   * @param {SourceLocation} loc the location to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(loc, _ref13) {\n    let {\n      write\n    } = _ref13;\n    write(loc.start.line);\n    write(loc.start.column);\n    write(loc.end.line);\n    write(loc.end.column);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RealDependencyLocation} location\n   */\n\n\n  deserialize(_ref14) {\n    let {\n      read\n    } = _ref14;\n    return {\n      start: {\n        line: read(),\n        column: read()\n      },\n      end: {\n        line: read(),\n        column: read()\n      }\n    };\n  }\n\n}());\nregister(Position, CURRENT_MODULE, \"acorn/Position\", new class PositionSerializer {\n  /**\n   * @param {Position} pos the position to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(pos, _ref15) {\n    let {\n      write\n    } = _ref15;\n    write(pos.line);\n    write(pos.column);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {SourcePosition} position\n   */\n\n\n  deserialize(_ref16) {\n    let {\n      read\n    } = _ref16;\n    return {\n      line: read(),\n      column: read()\n    };\n  }\n\n}());\nregister(SourceMapSource, CURRENT_MODULE, \"webpack-sources/SourceMapSource\", new class SourceMapSourceSerializer {\n  /**\n   * @param {SourceMapSource} source the source map source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref17) {\n    let {\n      write\n    } = _ref17;\n    write(source.getArgsAsBuffers());\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {SourceMapSource} source source map source\n   */\n\n\n  deserialize(_ref18) {\n    let {\n      read\n    } = _ref18;\n    // @ts-expect-error\n    return new SourceMapSource(...read());\n  }\n\n}());\nregister(ValidationError, CURRENT_MODULE, \"schema-utils/ValidationError\", new class ValidationErrorSerializer {\n  // TODO error should be ValidationError, but this fails the type checks\n\n  /**\n   * @param {TODO} error the source map source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(error, _ref19) {\n    let {\n      write\n    } = _ref19;\n    write(error.errors);\n    write(error.schema);\n    write({\n      name: error.headerName,\n      baseDataPath: error.baseDataPath,\n      postFormatter: error.postFormatter\n    });\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {TODO} error\n   */\n\n\n  deserialize(_ref20) {\n    let {\n      read\n    } = _ref20;\n    return new ValidationError(read(), read(), read());\n  }\n\n}());","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/registerExternalSerializer.js"],"names":["register","require","Position","SourceLocation","ValidationError","default","CachedSource","ConcatSource","OriginalSource","PrefixSource","RawSource","ReplaceSource","SourceMapSource","CURRENT_MODULE","CachedSourceSerializer","serialize","source","write","writeLazy","originalLazy","original","getCachedData","deserialize","read","cachedData","RawSourceSerializer","buffer","isBuffer","convertToString","ConcatSourceSerializer","getChildren","addAllSkipOptimizing","PrefixSourceSerializer","getPrefix","ReplaceSourceSerializer","getName","replacements","getReplacements","length","repl","start","end","content","name","len","startEndBuffer","i","push","j","replace","OriginalSourceSerializer","SourceLocationSerializer","loc","line","column","PositionSerializer","pos","SourceMapSourceSerializer","getArgsAsBuffers","ValidationErrorSerializer","error","errors","schema","headerName","baseDataPath","postFormatter"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { register } = require(\"./serialization\");\n\nconst Position = /** @type {TODO} */ (require(\"acorn\")).Position;\nconst SourceLocation = require(\"acorn\").SourceLocation;\nconst ValidationError = require(\"schema-utils/dist/ValidationError\").default;\nconst {\n\tCachedSource,\n\tConcatSource,\n\tOriginalSource,\n\tPrefixSource,\n\tRawSource,\n\tReplaceSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\n\n/** @typedef {import(\"acorn\").Position} Position */\n/** @typedef {import(\"../Dependency\").RealDependencyLocation} RealDependencyLocation */\n/** @typedef {import(\"../Dependency\").SourcePosition} SourcePosition */\n/** @typedef {import(\"./serialization\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {ObjectSerializerContext & { writeLazy?: (any) => void }} WebpackObjectSerializerContext */\n\nconst CURRENT_MODULE = \"webpack/lib/util/registerExternalSerializer\";\n\nregister(\n\tCachedSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/CachedSource\",\n\tnew (class CachedSourceSerializer {\n\t\t/**\n\t\t * @param {CachedSource} source the cached source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write, writeLazy }) {\n\t\t\tif (writeLazy) {\n\t\t\t\twriteLazy(source.originalLazy());\n\t\t\t} else {\n\t\t\t\twrite(source.original());\n\t\t\t}\n\t\t\twrite(source.getCachedData());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {CachedSource} cached source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = read();\n\t\t\tconst cachedData = read();\n\t\t\treturn new CachedSource(source, cachedData);\n\t\t}\n\t})()\n);\n\nregister(\n\tRawSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/RawSource\",\n\tnew (class RawSourceSerializer {\n\t\t/**\n\t\t * @param {RawSource} source the raw source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.buffer());\n\t\t\twrite(!source.isBuffer());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {RawSource} raw source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = read();\n\t\t\tconst convertToString = read();\n\t\t\treturn new RawSource(source, convertToString);\n\t\t}\n\t})()\n);\n\nregister(\n\tConcatSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/ConcatSource\",\n\tnew (class ConcatSourceSerializer {\n\t\t/**\n\t\t * @param {ConcatSource} source the concat source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getChildren());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {ConcatSource} concat source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = new ConcatSource();\n\t\t\tsource.addAllSkipOptimizing(read());\n\t\t\treturn source;\n\t\t}\n\t})()\n);\n\nregister(\n\tPrefixSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/PrefixSource\",\n\tnew (class PrefixSourceSerializer {\n\t\t/**\n\t\t * @param {PrefixSource} source the prefix source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getPrefix());\n\t\t\twrite(source.original());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {PrefixSource} prefix source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn new PrefixSource(read(), read());\n\t\t}\n\t})()\n);\n\nregister(\n\tReplaceSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/ReplaceSource\",\n\tnew (class ReplaceSourceSerializer {\n\t\t/**\n\t\t * @param {ReplaceSource} source the replace source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.original());\n\t\t\twrite(source.getName());\n\t\t\tconst replacements = source.getReplacements();\n\t\t\twrite(replacements.length);\n\t\t\tfor (const repl of replacements) {\n\t\t\t\twrite(repl.start);\n\t\t\t\twrite(repl.end);\n\t\t\t}\n\t\t\tfor (const repl of replacements) {\n\t\t\t\twrite(repl.content);\n\t\t\t\twrite(repl.name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {ReplaceSource} replace source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = new ReplaceSource(read(), read());\n\t\t\tconst len = read();\n\t\t\tconst startEndBuffer = [];\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tstartEndBuffer.push(read(), read());\n\t\t\t}\n\t\t\tlet j = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tsource.replace(\n\t\t\t\t\tstartEndBuffer[j++],\n\t\t\t\t\tstartEndBuffer[j++],\n\t\t\t\t\tread(),\n\t\t\t\t\tread()\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn source;\n\t\t}\n\t})()\n);\n\nregister(\n\tOriginalSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/OriginalSource\",\n\tnew (class OriginalSourceSerializer {\n\t\t/**\n\t\t * @param {OriginalSource} source the original source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.buffer());\n\t\t\twrite(source.getName());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {OriginalSource} original source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst buffer = read();\n\t\t\tconst name = read();\n\t\t\treturn new OriginalSource(buffer, name);\n\t\t}\n\t})()\n);\n\nregister(\n\tSourceLocation,\n\tCURRENT_MODULE,\n\t\"acorn/SourceLocation\",\n\tnew (class SourceLocationSerializer {\n\t\t/**\n\t\t * @param {SourceLocation} loc the location to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(loc, { write }) {\n\t\t\twrite(loc.start.line);\n\t\t\twrite(loc.start.column);\n\t\t\twrite(loc.end.line);\n\t\t\twrite(loc.end.column);\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {RealDependencyLocation} location\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn {\n\t\t\t\tstart: {\n\t\t\t\t\tline: read(),\n\t\t\t\t\tcolumn: read()\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tline: read(),\n\t\t\t\t\tcolumn: read()\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t})()\n);\n\nregister(\n\tPosition,\n\tCURRENT_MODULE,\n\t\"acorn/Position\",\n\tnew (class PositionSerializer {\n\t\t/**\n\t\t * @param {Position} pos the position to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(pos, { write }) {\n\t\t\twrite(pos.line);\n\t\t\twrite(pos.column);\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {SourcePosition} position\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn {\n\t\t\t\tline: read(),\n\t\t\t\tcolumn: read()\n\t\t\t};\n\t\t}\n\t})()\n);\n\nregister(\n\tSourceMapSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/SourceMapSource\",\n\tnew (class SourceMapSourceSerializer {\n\t\t/**\n\t\t * @param {SourceMapSource} source the source map source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getArgsAsBuffers());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {SourceMapSource} source source map source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\t// @ts-expect-error\n\t\t\treturn new SourceMapSource(...read());\n\t\t}\n\t})()\n);\n\nregister(\n\tValidationError,\n\tCURRENT_MODULE,\n\t\"schema-utils/ValidationError\",\n\tnew (class ValidationErrorSerializer {\n\t\t// TODO error should be ValidationError, but this fails the type checks\n\t\t/**\n\t\t * @param {TODO} error the source map source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(error, { write }) {\n\t\t\twrite(error.errors);\n\t\t\twrite(error.schema);\n\t\t\twrite({\n\t\t\t\tname: error.headerName,\n\t\t\t\tbaseDataPath: error.baseDataPath,\n\t\t\t\tpostFormatter: error.postFormatter\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {TODO} error\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn new ValidationError(read(), read(), read());\n\t\t}\n\t})()\n);\n"]},"metadata":{},"sourceType":"script"}