{"ast":null,"code":"function _sliceIterator(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _slicedToArray(arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    return _sliceIterator(arr, i);\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { signatures } from \"./signatures\";\nimport { traverse } from \"./traverse\";\nimport constants from \"@webassemblyjs/helper-wasm-bytecode\";\nimport { getSectionForNode } from \"@webassemblyjs/helper-wasm-bytecode\";\nexport function isAnonymous(ident) {\n  return ident.raw === \"\";\n}\nexport function getSectionMetadata(ast, name) {\n  var section;\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata) {\n      function SectionMetadata(_x) {\n        return _SectionMetadata.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref) {\n      var node = _ref.node;\n\n      if (node.section === name) {\n        section = node;\n      }\n    })\n  });\n  return section;\n}\nexport function getSectionMetadatas(ast, name) {\n  var sections = [];\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata2) {\n      function SectionMetadata(_x2) {\n        return _SectionMetadata2.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata2.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref2) {\n      var node = _ref2.node;\n\n      if (node.section === name) {\n        sections.push(node);\n      }\n    })\n  });\n  return sections;\n}\nexport function sortSectionMetadata(m) {\n  if (m.metadata == null) {\n    console.warn(\"sortSectionMetadata: no metadata to sort\");\n    return;\n  } // $FlowIgnore\n\n\n  m.metadata.sections.sort(function (a, b) {\n    var aId = constants.sections[a.section];\n    var bId = constants.sections[b.section];\n\n    if (typeof aId !== \"number\" || typeof bId !== \"number\") {\n      throw new Error(\"Section id not found\");\n    }\n\n    return aId - bId;\n  });\n}\nexport function orderedInsertNode(m, n) {\n  assertHasLoc(n);\n  var didInsert = false;\n\n  if (n.type === \"ModuleExport\") {\n    m.fields.push(n);\n    return;\n  }\n\n  m.fields = m.fields.reduce(function (acc, field) {\n    var fieldEndCol = Infinity;\n\n    if (field.loc != null) {\n      // $FlowIgnore\n      fieldEndCol = field.loc.end.column;\n    } // $FlowIgnore: assertHasLoc ensures that\n\n\n    if (didInsert === false && n.loc.start.column < fieldEndCol) {\n      didInsert = true;\n      acc.push(n);\n    }\n\n    acc.push(field);\n    return acc;\n  }, []); // Handles empty modules or n is the last element\n\n  if (didInsert === false) {\n    m.fields.push(n);\n  }\n}\nexport function assertHasLoc(n) {\n  if (n.loc == null || n.loc.start == null || n.loc.end == null) {\n    throw new Error(\"Internal failure: node (\".concat(JSON.stringify(n.type), \") has no location information\"));\n  }\n}\nexport function getEndOfSection(s) {\n  assertHasLoc(s.size);\n  return s.startOffset + s.size.value + ( // $FlowIgnore\n  s.size.loc.end.column - s.size.loc.start.column);\n}\nexport function shiftLoc(node, delta) {\n  // $FlowIgnore\n  node.loc.start.column += delta; // $FlowIgnore\n\n  node.loc.end.column += delta;\n}\nexport function shiftSection(ast, node, delta) {\n  if (node.type !== \"SectionMetadata\") {\n    throw new Error(\"Can not shift node \" + JSON.stringify(node.type));\n  }\n\n  node.startOffset += delta;\n\n  if (_typeof(node.size.loc) === \"object\") {\n    shiftLoc(node.size, delta);\n  } // Custom sections doesn't have vectorOfSize\n\n\n  if (_typeof(node.vectorOfSize) === \"object\" && _typeof(node.vectorOfSize.loc) === \"object\") {\n    shiftLoc(node.vectorOfSize, delta);\n  }\n\n  var sectionName = node.section; // shift node locations within that section\n\n  traverse(ast, {\n    Node: function Node(_ref3) {\n      var node = _ref3.node;\n      var section = getSectionForNode(node);\n\n      if (section === sectionName && _typeof(node.loc) === \"object\") {\n        shiftLoc(node, delta);\n      }\n    }\n  });\n}\nexport function signatureForOpcode(object, name) {\n  var opcodeName = name;\n\n  if (object !== undefined && object !== \"\") {\n    opcodeName = object + \".\" + name;\n  }\n\n  var sign = signatures[opcodeName];\n\n  if (sign == undefined) {\n    // TODO: Uncomment this when br_table and others has been done\n    //throw new Error(\"Invalid opcode: \"+opcodeName);\n    return [object, object];\n  }\n\n  return sign[0];\n}\nexport function getUniqueNameGenerator() {\n  var inc = {};\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"temp\";\n\n    if (!(prefix in inc)) {\n      inc[prefix] = 0;\n    } else {\n      inc[prefix] = inc[prefix] + 1;\n    }\n\n    return prefix + \"_\" + inc[prefix];\n  };\n}\nexport function getStartByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.start === \"undefined\") {\n    throw new Error( // $FlowIgnore\n    \"Can not get byte offset without loc informations, node: \" + String(n.id));\n  }\n\n  return n.loc.start.column;\n}\nexport function getEndByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.end === \"undefined\") {\n    throw new Error(\"Can not get byte offset without loc informations, node: \" + n.type);\n  }\n\n  return n.loc.end.column;\n}\nexport function getFunctionBeginingByteOffset(n) {\n  if (!(n.body.length > 0)) {\n    throw new Error('n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var _n$body = _slicedToArray(n.body, 1),\n      firstInstruction = _n$body[0];\n\n  return getStartByteOffset(firstInstruction);\n}\nexport function getEndBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var lastInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    lastInstruction = n.instr[n.instr.length - 1];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    lastInstruction = n.body[n.body.length - 1];\n  }\n\n  if (!(_typeof(lastInstruction) === \"object\")) {\n    throw new Error('typeof lastInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  } // $FlowIgnore\n\n\n  return getStartByteOffset(lastInstruction);\n}\nexport function getStartBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var fistInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    var _n$instr = _slicedToArray(n.instr, 1);\n\n    fistInstruction = _n$instr[0];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    var _n$body2 = _slicedToArray(n.body, 1);\n\n    fistInstruction = _n$body2[0];\n  }\n\n  if (!(_typeof(fistInstruction) === \"object\")) {\n    throw new Error('typeof fistInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  } // $FlowIgnore\n\n\n  return getStartByteOffset(fistInstruction);\n}","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/@webassemblyjs/ast/esm/utils.js"],"names":["_sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","_slicedToArray","Array","isArray","Object","TypeError","_typeof","obj","constructor","prototype","signatures","traverse","constants","getSectionForNode","isAnonymous","ident","raw","getSectionMetadata","ast","name","section","SectionMetadata","_SectionMetadata","_x","apply","arguments","toString","_ref","node","getSectionMetadatas","sections","_SectionMetadata2","_x2","_ref2","sortSectionMetadata","m","metadata","console","warn","sort","a","b","aId","bId","Error","orderedInsertNode","n","assertHasLoc","didInsert","type","fields","reduce","acc","field","fieldEndCol","Infinity","loc","end","column","start","concat","JSON","stringify","getEndOfSection","s","size","startOffset","shiftLoc","delta","shiftSection","vectorOfSize","sectionName","Node","_ref3","signatureForOpcode","object","opcodeName","sign","getUniqueNameGenerator","inc","prefix","getStartByteOffset","String","id","getEndByteOffset","getFunctionBeginingByteOffset","body","_n$body","firstInstruction","getEndBlockByteOffset","instr","lastInstruction","getStartBlockByteOffset","fistInstruction","_n$instr","_n$body2"],"mappings":"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","sourcesContent":["function _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { signatures } from \"./signatures\";\nimport { traverse } from \"./traverse\";\nimport constants from \"@webassemblyjs/helper-wasm-bytecode\";\nimport { getSectionForNode } from \"@webassemblyjs/helper-wasm-bytecode\";\nexport function isAnonymous(ident) {\n  return ident.raw === \"\";\n}\nexport function getSectionMetadata(ast, name) {\n  var section;\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata) {\n      function SectionMetadata(_x) {\n        return _SectionMetadata.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref) {\n      var node = _ref.node;\n\n      if (node.section === name) {\n        section = node;\n      }\n    })\n  });\n  return section;\n}\nexport function getSectionMetadatas(ast, name) {\n  var sections = [];\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata2) {\n      function SectionMetadata(_x2) {\n        return _SectionMetadata2.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata2.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref2) {\n      var node = _ref2.node;\n\n      if (node.section === name) {\n        sections.push(node);\n      }\n    })\n  });\n  return sections;\n}\nexport function sortSectionMetadata(m) {\n  if (m.metadata == null) {\n    console.warn(\"sortSectionMetadata: no metadata to sort\");\n    return;\n  } // $FlowIgnore\n\n\n  m.metadata.sections.sort(function (a, b) {\n    var aId = constants.sections[a.section];\n    var bId = constants.sections[b.section];\n\n    if (typeof aId !== \"number\" || typeof bId !== \"number\") {\n      throw new Error(\"Section id not found\");\n    }\n\n    return aId - bId;\n  });\n}\nexport function orderedInsertNode(m, n) {\n  assertHasLoc(n);\n  var didInsert = false;\n\n  if (n.type === \"ModuleExport\") {\n    m.fields.push(n);\n    return;\n  }\n\n  m.fields = m.fields.reduce(function (acc, field) {\n    var fieldEndCol = Infinity;\n\n    if (field.loc != null) {\n      // $FlowIgnore\n      fieldEndCol = field.loc.end.column;\n    } // $FlowIgnore: assertHasLoc ensures that\n\n\n    if (didInsert === false && n.loc.start.column < fieldEndCol) {\n      didInsert = true;\n      acc.push(n);\n    }\n\n    acc.push(field);\n    return acc;\n  }, []); // Handles empty modules or n is the last element\n\n  if (didInsert === false) {\n    m.fields.push(n);\n  }\n}\nexport function assertHasLoc(n) {\n  if (n.loc == null || n.loc.start == null || n.loc.end == null) {\n    throw new Error(\"Internal failure: node (\".concat(JSON.stringify(n.type), \") has no location information\"));\n  }\n}\nexport function getEndOfSection(s) {\n  assertHasLoc(s.size);\n  return s.startOffset + s.size.value + ( // $FlowIgnore\n  s.size.loc.end.column - s.size.loc.start.column);\n}\nexport function shiftLoc(node, delta) {\n  // $FlowIgnore\n  node.loc.start.column += delta; // $FlowIgnore\n\n  node.loc.end.column += delta;\n}\nexport function shiftSection(ast, node, delta) {\n  if (node.type !== \"SectionMetadata\") {\n    throw new Error(\"Can not shift node \" + JSON.stringify(node.type));\n  }\n\n  node.startOffset += delta;\n\n  if (_typeof(node.size.loc) === \"object\") {\n    shiftLoc(node.size, delta);\n  } // Custom sections doesn't have vectorOfSize\n\n\n  if (_typeof(node.vectorOfSize) === \"object\" && _typeof(node.vectorOfSize.loc) === \"object\") {\n    shiftLoc(node.vectorOfSize, delta);\n  }\n\n  var sectionName = node.section; // shift node locations within that section\n\n  traverse(ast, {\n    Node: function Node(_ref3) {\n      var node = _ref3.node;\n      var section = getSectionForNode(node);\n\n      if (section === sectionName && _typeof(node.loc) === \"object\") {\n        shiftLoc(node, delta);\n      }\n    }\n  });\n}\nexport function signatureForOpcode(object, name) {\n  var opcodeName = name;\n\n  if (object !== undefined && object !== \"\") {\n    opcodeName = object + \".\" + name;\n  }\n\n  var sign = signatures[opcodeName];\n\n  if (sign == undefined) {\n    // TODO: Uncomment this when br_table and others has been done\n    //throw new Error(\"Invalid opcode: \"+opcodeName);\n    return [object, object];\n  }\n\n  return sign[0];\n}\nexport function getUniqueNameGenerator() {\n  var inc = {};\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"temp\";\n\n    if (!(prefix in inc)) {\n      inc[prefix] = 0;\n    } else {\n      inc[prefix] = inc[prefix] + 1;\n    }\n\n    return prefix + \"_\" + inc[prefix];\n  };\n}\nexport function getStartByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.start === \"undefined\") {\n    throw new Error( // $FlowIgnore\n    \"Can not get byte offset without loc informations, node: \" + String(n.id));\n  }\n\n  return n.loc.start.column;\n}\nexport function getEndByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.end === \"undefined\") {\n    throw new Error(\"Can not get byte offset without loc informations, node: \" + n.type);\n  }\n\n  return n.loc.end.column;\n}\nexport function getFunctionBeginingByteOffset(n) {\n  if (!(n.body.length > 0)) {\n    throw new Error('n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var _n$body = _slicedToArray(n.body, 1),\n      firstInstruction = _n$body[0];\n\n  return getStartByteOffset(firstInstruction);\n}\nexport function getEndBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var lastInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    lastInstruction = n.instr[n.instr.length - 1];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    lastInstruction = n.body[n.body.length - 1];\n  }\n\n  if (!(_typeof(lastInstruction) === \"object\")) {\n    throw new Error('typeof lastInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(lastInstruction);\n}\nexport function getStartBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var fistInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    var _n$instr = _slicedToArray(n.instr, 1);\n\n    fistInstruction = _n$instr[0];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    var _n$body2 = _slicedToArray(n.body, 1);\n\n    fistInstruction = _n$body2[0];\n  }\n\n  if (!(_typeof(fistInstruction) === \"object\")) {\n    throw new Error('typeof fistInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(fistInstruction);\n}"]},"metadata":{},"sourceType":"module"}