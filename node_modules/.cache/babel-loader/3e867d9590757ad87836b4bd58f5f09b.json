{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\n\nconst {\n  getContext,\n  runLoaders\n} = require(\"loader-runner\");\n\nconst querystring = require(\"querystring\");\n\nconst {\n  HookMap,\n  SyncHook,\n  AsyncSeriesBailHook\n} = require(\"tapable\");\n\nconst {\n  CachedSource,\n  OriginalSource,\n  RawSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\n\nconst Compilation = require(\"./Compilation\");\n\nconst HookWebpackError = require(\"./HookWebpackError\");\n\nconst Module = require(\"./Module\");\n\nconst ModuleBuildError = require(\"./ModuleBuildError\");\n\nconst ModuleError = require(\"./ModuleError\");\n\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\n\nconst ModuleParseError = require(\"./ModuleParseError\");\n\nconst ModuleWarning = require(\"./ModuleWarning\");\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\n\nconst WebpackError = require(\"./WebpackError\");\n\nconst formatLocation = require(\"./formatLocation\");\n\nconst LazySet = require(\"./util/LazySet\");\n\nconst {\n  isSubset\n} = require(\"./util/SetHelpers\");\n\nconst {\n  getScheme\n} = require(\"./util/URLAbsoluteSpecifier\");\n\nconst {\n  compareLocations,\n  concatComparators,\n  compareSelect,\n  keepOriginalOrder\n} = require(\"./util/comparators\");\n\nconst createHash = require(\"./util/createHash\");\n\nconst {\n  createFakeHook\n} = require(\"./util/deprecation\");\n\nconst {\n  join\n} = require(\"./util/fs\");\n\nconst {\n  contextify,\n  absolutify,\n  makePathsRelative\n} = require(\"./util/identifier\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n\nconst memoize = require(\"./util/memoize\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext} NormalModuleLoaderContext */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./Generator\")} Generator */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n\n/** @typedef {import(\"./Parser\")} Parser */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\n\nconst getInvalidDependenciesModuleWarning = memoize(() => require(\"./InvalidDependenciesModuleWarning\"));\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\n\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n  if (source.startsWith(\"webpack://\")) return source;\n  return `webpack://${makePathsRelative(context, source, associatedObjectForCache)}`;\n};\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\n\n\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n  if (!Array.isArray(sourceMap.sources)) return sourceMap;\n  const {\n    sourceRoot\n  } = sourceMap;\n  /** @type {function(string): string} */\n\n  const mapper = !sourceRoot ? source => source : sourceRoot.endsWith(\"/\") ? source => source.startsWith(\"/\") ? `${sourceRoot.slice(0, -1)}${source}` : `${sourceRoot}${source}` : source => source.startsWith(\"/\") ? `${sourceRoot}${source}` : `${sourceRoot}/${source}`;\n  const newSources = sourceMap.sources.map(source => contextifySourceUrl(context, mapper(source), associatedObjectForCache));\n  return { ...sourceMap,\n    file: \"x\",\n    sourceRoot: undefined,\n    sources: newSources\n  };\n};\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\n\n\nconst asString = input => {\n  if (Buffer.isBuffer(input)) {\n    return input.toString(\"utf-8\");\n  }\n\n  return input;\n};\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\n\n\nconst asBuffer = input => {\n  if (!Buffer.isBuffer(input)) {\n    return Buffer.from(input, \"utf-8\");\n  }\n\n  return input;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n  constructor(error) {\n    super();\n    this.name = \"NonErrorEmittedError\";\n    this.message = \"(Emitted value instead of an instance of Error) \" + error;\n  }\n\n}\n\nmakeSerializable(NonErrorEmittedError, \"webpack/lib/NormalModule\", \"NonErrorEmittedError\");\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {string} type module type\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {Record<string, any>=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {Record<string, any>=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\n\nconst compilationHooksMap = new WeakMap();\n\nclass NormalModule extends Module {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {NormalModuleCompilationHooks} the attached hooks\n   */\n  static getCompilationHooks(compilation) {\n    if (!(compilation instanceof Compilation)) {\n      throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n    }\n\n    let hooks = compilationHooksMap.get(compilation);\n\n    if (hooks === undefined) {\n      hooks = {\n        loader: new SyncHook([\"loaderContext\", \"module\"]),\n        beforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n        beforeParse: new SyncHook([\"module\"]),\n        beforeSnapshot: new SyncHook([\"module\"]),\n        // TODO webpack 6 deprecate\n        readResourceForScheme: new HookMap(scheme => {\n          const hook = hooks.readResource.for(scheme);\n          return createFakeHook(\n          /** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */\n          {\n            tap: (options, fn) => hook.tap(options, loaderContext => fn(loaderContext.resource, loaderContext._module)),\n            tapAsync: (options, fn) => hook.tapAsync(options, (loaderContext, callback) => fn(loaderContext.resource, loaderContext._module, callback)),\n            tapPromise: (options, fn) => hook.tapPromise(options, loaderContext => fn(loaderContext.resource, loaderContext._module))\n          });\n        }),\n        readResource: new HookMap(() => new AsyncSeriesBailHook([\"loaderContext\"])),\n        needBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n\n    return hooks;\n  }\n  /**\n   * @param {NormalModuleCreateData} options options object\n   */\n\n\n  constructor(_ref) {\n    let {\n      layer,\n      type,\n      request,\n      userRequest,\n      rawRequest,\n      loaders,\n      resource,\n      resourceResolveData,\n      context,\n      matchResource,\n      parser,\n      parserOptions,\n      generator,\n      generatorOptions,\n      resolveOptions\n    } = _ref;\n    super(type, context || getContext(resource), layer); // Info from Factory\n\n    /** @type {string} */\n\n    this.request = request;\n    /** @type {string} */\n\n    this.userRequest = userRequest;\n    /** @type {string} */\n\n    this.rawRequest = rawRequest;\n    /** @type {boolean} */\n\n    this.binary = /^(asset|webassembly)\\b/.test(type);\n    /** @type {Parser} */\n\n    this.parser = parser;\n    this.parserOptions = parserOptions;\n    /** @type {Generator} */\n\n    this.generator = generator;\n    this.generatorOptions = generatorOptions;\n    /** @type {string} */\n\n    this.resource = resource;\n    this.resourceResolveData = resourceResolveData;\n    /** @type {string | undefined} */\n\n    this.matchResource = matchResource;\n    /** @type {LoaderItem[]} */\n\n    this.loaders = loaders;\n\n    if (resolveOptions !== undefined) {\n      // already declared in super class\n      this.resolveOptions = resolveOptions;\n    } // Info from Build\n\n    /** @type {(WebpackError | null)=} */\n\n\n    this.error = null;\n    /** @private @type {Source=} */\n\n    this._source = null;\n    /** @private @type {Map<string, number> | undefined} **/\n\n    this._sourceSizes = undefined;\n    /** @private @type {Set<string>} */\n\n    this._sourceTypes = undefined; // Cache\n\n    this._lastSuccessfulBuildMeta = {};\n    this._forceBuild = true;\n    this._isEvaluatingSideEffects = false;\n    /** @type {WeakSet<ModuleGraph> | undefined} */\n\n    this._addedSideEffectsBailout = undefined;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    if (this.layer === null) {\n      if (this.type === \"javascript/auto\") {\n        return this.request;\n      } else {\n        return `${this.type}|${this.request}`;\n      }\n    } else {\n      return `${this.type}|${this.request}|${this.layer}`;\n    }\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return requestShortener.shorten(this.userRequest);\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    let ident = contextify(options.context, this.userRequest, options.associatedObjectForCache);\n    if (this.layer) ident = `(${this.layer})/${ident}`;\n    return ident;\n  }\n  /**\n   * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n   */\n\n\n  nameForCondition() {\n    const resource = this.matchResource || this.resource;\n    const idx = resource.indexOf(\"?\");\n    if (idx >= 0) return resource.substr(0, idx);\n    return resource;\n  }\n  /**\n   * Assuming this module is in the cache. Update the (cached) module with\n   * the fresh module from the factory. Usually updates internal references\n   * and properties.\n   * @param {Module} module fresh module\n   * @returns {void}\n   */\n\n\n  updateCacheModule(module) {\n    super.updateCacheModule(module);\n    const m =\n    /** @type {NormalModule} */\n    module;\n    this.binary = m.binary;\n    this.request = m.request;\n    this.userRequest = m.userRequest;\n    this.rawRequest = m.rawRequest;\n    this.parser = m.parser;\n    this.parserOptions = m.parserOptions;\n    this.generator = m.generator;\n    this.generatorOptions = m.generatorOptions;\n    this.resource = m.resource;\n    this.resourceResolveData = m.resourceResolveData;\n    this.context = m.context;\n    this.matchResource = m.matchResource;\n    this.loaders = m.loaders;\n  }\n  /**\n   * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n   */\n\n\n  cleanupForCache() {\n    // Make sure to cache types and sizes before cleanup when this module has been built\n    // They are accessed by the stats and we don't want them to crash after cleanup\n    // TODO reconsider this for webpack 6\n    if (this.buildInfo) {\n      if (this._sourceTypes === undefined) this.getSourceTypes();\n\n      for (const type of this._sourceTypes) {\n        this.size(type);\n      }\n    }\n\n    super.cleanupForCache();\n    this.parser = undefined;\n    this.parserOptions = undefined;\n    this.generator = undefined;\n    this.generatorOptions = undefined;\n  }\n  /**\n   * Module should be unsafe cached. Get data that's needed for that.\n   * This data will be passed to restoreFromUnsafeCache later.\n   * @returns {object} cached data\n   */\n\n\n  getUnsafeCacheData() {\n    const data = super.getUnsafeCacheData();\n    data.parserOptions = this.parserOptions;\n    data.generatorOptions = this.generatorOptions;\n    return data;\n  }\n\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n  /**\n   * restore unsafe cache data\n   * @param {object} unsafeCacheData data from getUnsafeCacheData\n   * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n   */\n\n\n  _restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    super._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\n    this.parserOptions = unsafeCacheData.parserOptions;\n    this.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n    this.generatorOptions = unsafeCacheData.generatorOptions;\n    this.generator = normalModuleFactory.getGenerator(this.type, this.generatorOptions); // we assume the generator behaves identically and keep cached sourceTypes/Sizes\n  }\n  /**\n   * @param {string} context the compilation context\n   * @param {string} name the asset name\n   * @param {string} content the content\n   * @param {string | TODO} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n\n\n  createSourceForAsset(context, name, content, sourceMap, associatedObjectForCache) {\n    if (sourceMap) {\n      if (typeof sourceMap === \"string\" && (this.useSourceMap || this.useSimpleSourceMap)) {\n        return new OriginalSource(content, contextifySourceUrl(context, sourceMap, associatedObjectForCache));\n      }\n\n      if (this.useSourceMap) {\n        return new SourceMapSource(content, name, contextifySourceMap(context, sourceMap, associatedObjectForCache));\n      }\n    }\n\n    return new RawSource(content);\n  }\n  /**\n   * @param {ResolverWithOptions} resolver a resolver\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {InputFileSystem} fs file system from reading\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @returns {NormalModuleLoaderContext} loader context\n   */\n\n\n  _createLoaderContext(resolver, options, compilation, fs, hooks) {\n    const {\n      requestShortener\n    } = compilation.runtimeTemplate;\n\n    const getCurrentLoaderName = () => {\n      const currentLoader = this.getCurrentLoader(loaderContext);\n      if (!currentLoader) return \"(not in loader scope)\";\n      return requestShortener.shorten(currentLoader.loader);\n    };\n\n    const getResolveContext = () => {\n      return {\n        fileDependencies: {\n          add: d => loaderContext.addDependency(d)\n        },\n        contextDependencies: {\n          add: d => loaderContext.addContextDependency(d)\n        },\n        missingDependencies: {\n          add: d => loaderContext.addMissingDependency(d)\n        }\n      };\n    };\n\n    const getAbsolutify = memoize(() => absolutify.bindCache(compilation.compiler.root));\n    const getAbsolutifyInContext = memoize(() => absolutify.bindContextCache(this.context, compilation.compiler.root));\n    const getContextify = memoize(() => contextify.bindCache(compilation.compiler.root));\n    const getContextifyInContext = memoize(() => contextify.bindContextCache(this.context, compilation.compiler.root));\n    const utils = {\n      absolutify: (context, request) => {\n        return context === this.context ? getAbsolutifyInContext()(request) : getAbsolutify()(context, request);\n      },\n      contextify: (context, request) => {\n        return context === this.context ? getContextifyInContext()(request) : getContextify()(context, request);\n      },\n      createHash: type => {\n        return createHash(type || compilation.outputOptions.hashFunction);\n      }\n    };\n    const loaderContext = {\n      version: 2,\n      getOptions: schema => {\n        const loader = this.getCurrentLoader(loaderContext);\n        let {\n          options\n        } = loader;\n\n        if (typeof options === \"string\") {\n          if (options.substr(0, 1) === \"{\" && options.substr(-1) === \"}\") {\n            try {\n              options = parseJson(options);\n            } catch (e) {\n              throw new Error(`Cannot parse string options: ${e.message}`);\n            }\n          } else {\n            options = querystring.parse(options, \"&\", \"=\", {\n              maxKeys: 0\n            });\n          }\n        }\n\n        if (options === null || options === undefined) {\n          options = {};\n        }\n\n        if (schema) {\n          let name = \"Loader\";\n          let baseDataPath = \"options\";\n          let match;\n\n          if (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n            [, name, baseDataPath] = match;\n          }\n\n          getValidate()(schema, options, {\n            name,\n            baseDataPath\n          });\n        }\n\n        return options;\n      },\n      emitWarning: warning => {\n        if (!(warning instanceof Error)) {\n          warning = new NonErrorEmittedError(warning);\n        }\n\n        this.addWarning(new ModuleWarning(warning, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      emitError: error => {\n        if (!(error instanceof Error)) {\n          error = new NonErrorEmittedError(error);\n        }\n\n        this.addError(new ModuleError(error, {\n          from: getCurrentLoaderName()\n        }));\n      },\n      getLogger: name => {\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        return compilation.getLogger(() => [currentLoader && currentLoader.loader, name, this.identifier()].filter(Boolean).join(\"|\"));\n      },\n\n      resolve(context, request, callback) {\n        resolver.resolve({}, context, request, getResolveContext(), callback);\n      },\n\n      getResolve(options) {\n        const child = options ? resolver.withOptions(options) : resolver;\n        return (context, request, callback) => {\n          if (callback) {\n            child.resolve({}, context, request, getResolveContext(), callback);\n          } else {\n            return new Promise((resolve, reject) => {\n              child.resolve({}, context, request, getResolveContext(), (err, result) => {\n                if (err) reject(err);else resolve(result);\n              });\n            });\n          }\n        };\n      },\n\n      emitFile: (name, content, sourceMap, assetInfo) => {\n        if (!this.buildInfo.assets) {\n          this.buildInfo.assets = Object.create(null);\n          this.buildInfo.assetsInfo = new Map();\n        }\n\n        this.buildInfo.assets[name] = this.createSourceForAsset(options.context, name, content, sourceMap, compilation.compiler.root);\n        this.buildInfo.assetsInfo.set(name, assetInfo);\n      },\n      addBuildDependency: dep => {\n        if (this.buildInfo.buildDependencies === undefined) {\n          this.buildInfo.buildDependencies = new LazySet();\n        }\n\n        this.buildInfo.buildDependencies.add(dep);\n      },\n      utils,\n      rootContext: options.context,\n      webpack: true,\n      sourceMap: !!this.useSourceMap,\n      mode: options.mode || \"production\",\n      _module: this,\n      _compilation: compilation,\n      _compiler: compilation.compiler,\n      fs: fs\n    };\n    Object.assign(loaderContext, options.loader);\n    hooks.loader.call(loaderContext, this);\n    return loaderContext;\n  }\n\n  getCurrentLoader(loaderContext) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : loaderContext.loaderIndex;\n\n    if (this.loaders && this.loaders.length && index < this.loaders.length && index >= 0 && this.loaders[index]) {\n      return this.loaders[index];\n    }\n\n    return null;\n  }\n  /**\n   * @param {string} context the compilation context\n   * @param {string | Buffer} content the content\n   * @param {string | TODO} sourceMap an optional source map\n   * @param {Object=} associatedObjectForCache object for caching\n   * @returns {Source} the created source\n   */\n\n\n  createSource(context, content, sourceMap, associatedObjectForCache) {\n    if (Buffer.isBuffer(content)) {\n      return new RawSource(content);\n    } // if there is no identifier return raw source\n\n\n    if (!this.identifier) {\n      return new RawSource(content);\n    } // from here on we assume we have an identifier\n\n\n    const identifier = this.identifier();\n\n    if (this.useSourceMap && sourceMap) {\n      return new SourceMapSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache), contextifySourceMap(context, sourceMap, associatedObjectForCache));\n    }\n\n    if (this.useSourceMap || this.useSimpleSourceMap) {\n      return new OriginalSource(content, contextifySourceUrl(context, identifier, associatedObjectForCache));\n    }\n\n    return new RawSource(content);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {NormalModuleCompilationHooks} hooks the hooks\n   * @param {function((WebpackError | null)=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  _doBuild(options, compilation, resolver, fs, hooks, callback) {\n    const loaderContext = this._createLoaderContext(resolver, options, compilation, fs, hooks);\n\n    const processResult = (err, result) => {\n      if (err) {\n        if (!(err instanceof Error)) {\n          err = new NonErrorEmittedError(err);\n        }\n\n        const currentLoader = this.getCurrentLoader(loaderContext);\n        const error = new ModuleBuildError(err, {\n          from: currentLoader && compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader)\n        });\n        return callback(error);\n      }\n\n      const source = result[0];\n      const sourceMap = result.length >= 1 ? result[1] : null;\n      const extraInfo = result.length >= 2 ? result[2] : null;\n\n      if (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n        const currentLoader = this.getCurrentLoader(loaderContext, 0);\n        const err = new Error(`Final loader (${currentLoader ? compilation.runtimeTemplate.requestShortener.shorten(currentLoader.loader) : \"unknown\"}) didn't return a Buffer or String`);\n        const error = new ModuleBuildError(err);\n        return callback(error);\n      }\n\n      this._source = this.createSource(options.context, this.binary ? asBuffer(source) : asString(source), sourceMap, compilation.compiler.root);\n      if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n      this._ast = typeof extraInfo === \"object\" && extraInfo !== null && extraInfo.webpackAST !== undefined ? extraInfo.webpackAST : null;\n      return callback();\n    };\n\n    this.buildInfo.fileDependencies = new LazySet();\n    this.buildInfo.contextDependencies = new LazySet();\n    this.buildInfo.missingDependencies = new LazySet();\n    this.buildInfo.cacheable = true;\n\n    try {\n      hooks.beforeLoaders.call(this.loaders, this, loaderContext);\n    } catch (err) {\n      processResult(err);\n      return;\n    }\n\n    if (this.loaders.length > 0) {\n      this.buildInfo.buildDependencies = new LazySet();\n    }\n\n    runLoaders({\n      resource: this.resource,\n      loaders: this.loaders,\n      context: loaderContext,\n      processResource: (loaderContext, resourcePath, callback) => {\n        const resource = loaderContext.resource;\n        const scheme = getScheme(resource);\n        hooks.readResource.for(scheme).callAsync(loaderContext, (err, result) => {\n          if (err) return callback(err);\n\n          if (typeof result !== \"string\" && !result) {\n            return callback(new UnhandledSchemeError(scheme, resource));\n          }\n\n          return callback(null, result);\n        });\n      }\n    }, (err, result) => {\n      // Cleanup loaderContext to avoid leaking memory in ICs\n      loaderContext._compilation = loaderContext._compiler = loaderContext._module = loaderContext.fs = undefined;\n\n      if (!result) {\n        this.buildInfo.cacheable = false;\n        return processResult(err || new Error(\"No result from loader-runner processing\"), null);\n      }\n\n      this.buildInfo.fileDependencies.addAll(result.fileDependencies);\n      this.buildInfo.contextDependencies.addAll(result.contextDependencies);\n      this.buildInfo.missingDependencies.addAll(result.missingDependencies);\n\n      for (const loader of this.loaders) {\n        this.buildInfo.buildDependencies.add(loader.loader);\n      }\n\n      this.buildInfo.cacheable = this.buildInfo.cacheable && result.cacheable;\n      processResult(err, result.result);\n    });\n  }\n  /**\n   * @param {WebpackError} error the error\n   * @returns {void}\n   */\n\n\n  markModuleAsErrored(error) {\n    // Restore build meta from successful build to keep importing state\n    this.buildMeta = { ...this._lastSuccessfulBuildMeta\n    };\n    this.error = error;\n    this.addError(error);\n  }\n\n  applyNoParseRule(rule, content) {\n    // must start with \"rule\" if rule is a string\n    if (typeof rule === \"string\") {\n      return content.startsWith(rule);\n    }\n\n    if (typeof rule === \"function\") {\n      return rule(content);\n    } // we assume rule is a regexp\n\n\n    return rule.test(content);\n  } // check if module should not be parsed\n  // returns \"true\" if the module should !not! be parsed\n  // returns \"false\" if the module !must! be parsed\n\n\n  shouldPreventParsing(noParseRule, request) {\n    // if no noParseRule exists, return false\n    // the module !must! be parsed.\n    if (!noParseRule) {\n      return false;\n    } // we only have one rule to check\n\n\n    if (!Array.isArray(noParseRule)) {\n      // returns \"true\" if the module is !not! to be parsed\n      return this.applyNoParseRule(noParseRule, request);\n    }\n\n    for (let i = 0; i < noParseRule.length; i++) {\n      const rule = noParseRule[i]; // early exit on first truthy match\n      // this module is !not! to be parsed\n\n      if (this.applyNoParseRule(rule, request)) {\n        return true;\n      }\n    } // no match found, so this module !should! be parsed\n\n\n    return false;\n  }\n\n  _initBuildHash(compilation) {\n    const hash = createHash(compilation.outputOptions.hashFunction);\n\n    if (this._source) {\n      hash.update(\"source\");\n\n      this._source.updateHash(hash);\n    }\n\n    hash.update(\"meta\");\n    hash.update(JSON.stringify(this.buildMeta));\n    this.buildInfo.hash =\n    /** @type {string} */\n    hash.digest(\"hex\");\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this._forceBuild = false;\n    this._source = null;\n    if (this._sourceSizes !== undefined) this._sourceSizes.clear();\n    this._sourceTypes = undefined;\n    this._ast = null;\n    this.error = null;\n    this.clearWarningsAndErrors();\n    this.clearDependenciesAndBlocks();\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: false,\n      parsed: true,\n      fileDependencies: undefined,\n      contextDependencies: undefined,\n      missingDependencies: undefined,\n      buildDependencies: undefined,\n      valueDependencies: undefined,\n      hash: undefined,\n      assets: undefined,\n      assetsInfo: undefined\n    };\n    const startTime = compilation.compiler.fsStartTime || Date.now();\n    const hooks = NormalModule.getCompilationHooks(compilation);\n    return this._doBuild(options, compilation, resolver, fs, hooks, err => {\n      // if we have an error mark module as failed and exit\n      if (err) {\n        this.markModuleAsErrored(err);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      }\n\n      const handleParseError = e => {\n        const source = this._source.source();\n\n        const loaders = this.loaders.map(item => contextify(options.context, item.loader, compilation.compiler.root));\n        const error = new ModuleParseError(source, e, loaders, this.type);\n        this.markModuleAsErrored(error);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      };\n\n      const handleParseResult = result => {\n        this.dependencies.sort(concatComparators(compareSelect(a => a.loc, compareLocations), keepOriginalOrder(this.dependencies)));\n\n        this._initBuildHash(compilation);\n\n        this._lastSuccessfulBuildMeta = this.buildMeta;\n        return handleBuildDone();\n      };\n\n      const handleBuildDone = () => {\n        try {\n          hooks.beforeSnapshot.call(this);\n        } catch (err) {\n          this.markModuleAsErrored(err);\n          return callback();\n        }\n\n        const snapshotOptions = compilation.options.snapshot.module;\n\n        if (!this.buildInfo.cacheable || !snapshotOptions) {\n          return callback();\n        } // add warning for all non-absolute paths in fileDependencies, etc\n        // This makes it easier to find problems with watching and/or caching\n\n\n        let nonAbsoluteDependencies = undefined;\n\n        const checkDependencies = deps => {\n          for (const dep of deps) {\n            if (!ABSOLUTE_PATH_REGEX.test(dep)) {\n              if (nonAbsoluteDependencies === undefined) nonAbsoluteDependencies = new Set();\n              nonAbsoluteDependencies.add(dep);\n              deps.delete(dep);\n\n              try {\n                const depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n                const absolute = join(compilation.fileSystemInfo.fs, this.context, depWithoutGlob);\n\n                if (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n                  (depWithoutGlob !== dep ? this.buildInfo.contextDependencies : deps).add(absolute);\n                }\n              } catch (e) {// ignore\n              }\n            }\n          }\n        };\n\n        checkDependencies(this.buildInfo.fileDependencies);\n        checkDependencies(this.buildInfo.missingDependencies);\n        checkDependencies(this.buildInfo.contextDependencies);\n\n        if (nonAbsoluteDependencies !== undefined) {\n          const InvalidDependenciesModuleWarning = getInvalidDependenciesModuleWarning();\n          this.addWarning(new InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies));\n        } // convert file/context/missingDependencies into filesystem snapshot\n\n\n        compilation.fileSystemInfo.createSnapshot(startTime, this.buildInfo.fileDependencies, this.buildInfo.contextDependencies, this.buildInfo.missingDependencies, snapshotOptions, (err, snapshot) => {\n          if (err) {\n            this.markModuleAsErrored(err);\n            return;\n          }\n\n          this.buildInfo.fileDependencies = undefined;\n          this.buildInfo.contextDependencies = undefined;\n          this.buildInfo.missingDependencies = undefined;\n          this.buildInfo.snapshot = snapshot;\n          return callback();\n        });\n      };\n\n      try {\n        hooks.beforeParse.call(this);\n      } catch (err) {\n        this.markModuleAsErrored(err);\n\n        this._initBuildHash(compilation);\n\n        return callback();\n      } // check if this module should !not! be parsed.\n      // if so, exit here;\n\n\n      const noParseRule = options.module && options.module.noParse;\n\n      if (this.shouldPreventParsing(noParseRule, this.request)) {\n        // We assume that we need module and exports\n        this.buildInfo.parsed = false;\n\n        this._initBuildHash(compilation);\n\n        return handleBuildDone();\n      }\n\n      let result;\n\n      try {\n        const source = this._source.source();\n\n        result = this.parser.parse(this._ast || source, {\n          source,\n          current: this,\n          module: this,\n          compilation: compilation,\n          options: options\n        });\n      } catch (e) {\n        handleParseError(e);\n        return;\n      }\n\n      handleParseResult(result);\n    });\n  }\n  /**\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n\n\n  getConcatenationBailoutReason(context) {\n    return this.generator.getConcatenationBailoutReason(this, context);\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n   */\n\n\n  getSideEffectsConnectionState(moduleGraph) {\n    if (this.factoryMeta !== undefined) {\n      if (this.factoryMeta.sideEffectFree) return false;\n      if (this.factoryMeta.sideEffectFree === false) return true;\n    }\n\n    if (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n      if (this._isEvaluatingSideEffects) return ModuleGraphConnection.CIRCULAR_CONNECTION;\n      this._isEvaluatingSideEffects = true;\n      /** @type {ConnectionState} */\n\n      let current = false;\n\n      for (const dep of this.dependencies) {\n        const state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n\n        if (state === true) {\n          if (this._addedSideEffectsBailout === undefined ? (this._addedSideEffectsBailout = new WeakSet(), true) : !this._addedSideEffectsBailout.has(moduleGraph)) {\n            this._addedSideEffectsBailout.add(moduleGraph);\n\n            moduleGraph.getOptimizationBailout(this).push(() => `Dependency (${dep.type}) with side effects at ${formatLocation(dep.loc)}`);\n          }\n\n          this._isEvaluatingSideEffects = false;\n          return true;\n        } else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n          current = ModuleGraphConnection.addConnectionStates(current, state);\n        }\n      }\n\n      this._isEvaluatingSideEffects = false; // When caching is implemented here, make sure to not cache when\n      // at least one circular connection was in the loop above\n\n      return current;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    if (this._sourceTypes === undefined) {\n      this._sourceTypes = this.generator.getTypes(this);\n    }\n\n    return this._sourceTypes;\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref2) {\n    let {\n      dependencyTemplates,\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtime,\n      concatenationScope,\n      codeGenerationResults\n    } = _ref2;\n\n    /** @type {Set<string>} */\n    const runtimeRequirements = new Set();\n\n    if (!this.buildInfo.parsed) {\n      runtimeRequirements.add(RuntimeGlobals.module);\n      runtimeRequirements.add(RuntimeGlobals.exports);\n      runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n    }\n    /** @type {Map<string, any>} */\n\n\n    let data;\n\n    const getData = () => {\n      if (data === undefined) data = new Map();\n      return data;\n    };\n\n    const sources = new Map();\n\n    for (const type of this.generator.getTypes(this)) {\n      const source = this.error ? new RawSource(\"throw new Error(\" + JSON.stringify(this.error.message) + \");\") : this.generator.generate(this, {\n        dependencyTemplates,\n        runtimeTemplate,\n        moduleGraph,\n        chunkGraph,\n        runtimeRequirements,\n        runtime,\n        concatenationScope,\n        codeGenerationResults,\n        getData,\n        type\n      });\n\n      if (source) {\n        sources.set(type, new CachedSource(source));\n      }\n    }\n    /** @type {CodeGenerationResult} */\n\n\n    const resultEntry = {\n      sources,\n      runtimeRequirements,\n      data\n    };\n    return resultEntry;\n  }\n  /**\n   * @returns {Source | null} the original source for the module before webpack transformation\n   */\n\n\n  originalSource() {\n    return this._source;\n  }\n  /**\n   * @returns {void}\n   */\n\n\n  invalidateBuild() {\n    this._forceBuild = true;\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    const {\n      fileSystemInfo,\n      compilation,\n      valueCacheVersions\n    } = context; // build if enforced\n\n    if (this._forceBuild) return callback(null, true); // always try to build in case of an error\n\n    if (this.error) return callback(null, true); // always build when module is not cacheable\n\n    if (!this.buildInfo.cacheable) return callback(null, true); // build when there is no snapshot to check\n\n    if (!this.buildInfo.snapshot) return callback(null, true); // build when valueDependencies have changed\n\n    /** @type {Map<string, string | Set<string>>} */\n\n    const valueDependencies = this.buildInfo.valueDependencies;\n\n    if (valueDependencies) {\n      if (!valueCacheVersions) return callback(null, true);\n\n      for (const [key, value] of valueDependencies) {\n        if (value === undefined) return callback(null, true);\n        const current = valueCacheVersions.get(key);\n\n        if (value !== current && (typeof value === \"string\" || typeof current === \"string\" || current === undefined || !isSubset(value, current))) {\n          return callback(null, true);\n        }\n      }\n    } // check snapshot for validity\n\n\n    fileSystemInfo.checkSnapshotValid(this.buildInfo.snapshot, (err, valid) => {\n      if (err) return callback(err);\n      if (!valid) return callback(null, true);\n      const hooks = NormalModule.getCompilationHooks(compilation);\n      hooks.needBuild.callAsync(this, context, (err, needBuild) => {\n        if (err) {\n          return callback(HookWebpackError.makeWebpackError(err, \"NormalModule.getCompilationHooks().needBuild\"));\n        }\n\n        callback(null, !!needBuild);\n      });\n    });\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    const cachedSize = this._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n\n    if (cachedSize !== undefined) {\n      return cachedSize;\n    }\n\n    const size = Math.max(1, this.generator.getSize(this, type));\n\n    if (this._sourceSizes === undefined) {\n      this._sourceSizes = new Map();\n    }\n\n    this._sourceSizes.set(type, size);\n\n    return size;\n  }\n  /**\n   * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n   * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n   * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n   * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n   */\n\n\n  addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies) {\n    const {\n      snapshot,\n      buildDependencies: buildDeps\n    } = this.buildInfo;\n\n    if (snapshot) {\n      fileDependencies.addAll(snapshot.getFileIterable());\n      contextDependencies.addAll(snapshot.getContextIterable());\n      missingDependencies.addAll(snapshot.getMissingIterable());\n    } else {\n      const {\n        fileDependencies: fileDeps,\n        contextDependencies: contextDeps,\n        missingDependencies: missingDeps\n      } = this.buildInfo;\n      if (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n      if (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n      if (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n    }\n\n    if (buildDeps !== undefined) {\n      buildDependencies.addAll(buildDeps);\n    }\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(this.buildInfo.hash);\n    this.generator.updateHash(hash, {\n      module: this,\n      ...context\n    });\n    super.updateHash(hash, context);\n  }\n\n  serialize(context) {\n    const {\n      write\n    } = context; // deserialize\n\n    write(this._source);\n    write(this.error);\n    write(this._lastSuccessfulBuildMeta);\n    write(this._forceBuild);\n    super.serialize(context);\n  }\n\n  static deserialize(context) {\n    const obj = new NormalModule({\n      // will be deserialized by Module\n      layer: null,\n      type: \"\",\n      // will be filled by updateCacheModule\n      resource: \"\",\n      context: \"\",\n      request: null,\n      userRequest: null,\n      rawRequest: null,\n      loaders: null,\n      matchResource: null,\n      parser: null,\n      parserOptions: null,\n      generator: null,\n      generatorOptions: null,\n      resolveOptions: null\n    });\n    obj.deserialize(context);\n    return obj;\n  }\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this._source = read();\n    this.error = read();\n    this._lastSuccessfulBuildMeta = read();\n    this._forceBuild = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\nmodule.exports = NormalModule;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/NormalModule.js"],"names":["parseJson","require","getContext","runLoaders","querystring","HookMap","SyncHook","AsyncSeriesBailHook","CachedSource","OriginalSource","RawSource","SourceMapSource","Compilation","HookWebpackError","Module","ModuleBuildError","ModuleError","ModuleGraphConnection","ModuleParseError","ModuleWarning","RuntimeGlobals","UnhandledSchemeError","WebpackError","formatLocation","LazySet","isSubset","getScheme","compareLocations","concatComparators","compareSelect","keepOriginalOrder","createHash","createFakeHook","join","contextify","absolutify","makePathsRelative","makeSerializable","memoize","getInvalidDependenciesModuleWarning","getValidate","validate","ABSOLUTE_PATH_REGEX","contextifySourceUrl","context","source","associatedObjectForCache","startsWith","contextifySourceMap","sourceMap","Array","isArray","sources","sourceRoot","mapper","endsWith","slice","newSources","map","file","undefined","asString","input","Buffer","isBuffer","toString","asBuffer","from","NonErrorEmittedError","constructor","error","name","message","compilationHooksMap","WeakMap","NormalModule","getCompilationHooks","compilation","TypeError","hooks","get","loader","beforeLoaders","beforeParse","beforeSnapshot","readResourceForScheme","scheme","hook","readResource","for","tap","options","fn","loaderContext","resource","_module","tapAsync","callback","tapPromise","needBuild","set","layer","type","request","userRequest","rawRequest","loaders","resourceResolveData","matchResource","parser","parserOptions","generator","generatorOptions","resolveOptions","binary","test","_source","_sourceSizes","_sourceTypes","_lastSuccessfulBuildMeta","_forceBuild","_isEvaluatingSideEffects","_addedSideEffectsBailout","identifier","readableIdentifier","requestShortener","shorten","libIdent","ident","nameForCondition","idx","indexOf","substr","updateCacheModule","module","m","cleanupForCache","buildInfo","getSourceTypes","size","getUnsafeCacheData","data","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getParser","getGenerator","createSourceForAsset","content","useSourceMap","useSimpleSourceMap","_createLoaderContext","resolver","fs","runtimeTemplate","getCurrentLoaderName","currentLoader","getCurrentLoader","getResolveContext","fileDependencies","add","d","addDependency","contextDependencies","addContextDependency","missingDependencies","addMissingDependency","getAbsolutify","bindCache","compiler","root","getAbsolutifyInContext","bindContextCache","getContextify","getContextifyInContext","utils","outputOptions","hashFunction","version","getOptions","schema","e","Error","parse","maxKeys","baseDataPath","match","title","exec","emitWarning","warning","addWarning","emitError","addError","getLogger","filter","Boolean","resolve","getResolve","child","withOptions","Promise","reject","err","result","emitFile","assetInfo","assets","Object","create","assetsInfo","Map","addBuildDependency","dep","buildDependencies","rootContext","webpack","mode","_compilation","_compiler","assign","call","index","loaderIndex","length","createSource","_doBuild","processResult","extraInfo","clear","_ast","webpackAST","cacheable","processResource","resourcePath","callAsync","addAll","markModuleAsErrored","buildMeta","applyNoParseRule","rule","shouldPreventParsing","noParseRule","i","_initBuildHash","hash","update","updateHash","JSON","stringify","digest","build","clearWarningsAndErrors","clearDependenciesAndBlocks","parsed","valueDependencies","startTime","fsStartTime","Date","now","handleParseError","item","handleParseResult","dependencies","sort","a","loc","handleBuildDone","snapshotOptions","snapshot","nonAbsoluteDependencies","checkDependencies","deps","Set","delete","depWithoutGlob","replace","absolute","fileSystemInfo","InvalidDependenciesModuleWarning","createSnapshot","noParse","current","getConcatenationBailoutReason","getSideEffectsConnectionState","moduleGraph","factoryMeta","sideEffectFree","CIRCULAR_CONNECTION","state","getModuleEvaluationSideEffectsState","WeakSet","has","getOptimizationBailout","push","addConnectionStates","getTypes","codeGeneration","dependencyTemplates","chunkGraph","runtime","concatenationScope","codeGenerationResults","runtimeRequirements","exports","thisAsExports","getData","generate","resultEntry","originalSource","invalidateBuild","valueCacheVersions","key","value","checkSnapshotValid","valid","makeWebpackError","cachedSize","Math","max","getSize","addCacheDependencies","buildDeps","getFileIterable","getContextIterable","getMissingIterable","fileDeps","contextDeps","missingDeps","serialize","write","deserialize","obj","read"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst parseJson = require(\"json-parse-better-errors\");\nconst { getContext, runLoaders } = require(\"loader-runner\");\nconst querystring = require(\"querystring\");\nconst { HookMap, SyncHook, AsyncSeriesBailHook } = require(\"tapable\");\nconst {\n\tCachedSource,\n\tOriginalSource,\n\tRawSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\nconst Compilation = require(\"./Compilation\");\nconst HookWebpackError = require(\"./HookWebpackError\");\nconst Module = require(\"./Module\");\nconst ModuleBuildError = require(\"./ModuleBuildError\");\nconst ModuleError = require(\"./ModuleError\");\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nconst ModuleParseError = require(\"./ModuleParseError\");\nconst ModuleWarning = require(\"./ModuleWarning\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst UnhandledSchemeError = require(\"./UnhandledSchemeError\");\nconst WebpackError = require(\"./WebpackError\");\nconst formatLocation = require(\"./formatLocation\");\nconst LazySet = require(\"./util/LazySet\");\nconst { isSubset } = require(\"./util/SetHelpers\");\nconst { getScheme } = require(\"./util/URLAbsoluteSpecifier\");\nconst {\n\tcompareLocations,\n\tconcatComparators,\n\tcompareSelect,\n\tkeepOriginalOrder\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst { createFakeHook } = require(\"./util/deprecation\");\nconst { join } = require(\"./util/fs\");\nconst {\n\tcontextify,\n\tabsolutify,\n\tmakePathsRelative\n} = require(\"./util/identifier\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/LoaderContext\").NormalModuleLoaderContext} NormalModuleLoaderContext */\n/** @typedef {import(\"../declarations/WebpackOptions\").Mode} Mode */\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Generator\")} Generator */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./Parser\")} Parser */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./logging/Logger\").Logger} WebpackLogger */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceMap\n * @property {number} version\n * @property {string[]} sources\n * @property {string} mappings\n * @property {string=} file\n * @property {string=} sourceRoot\n * @property {string[]=} sourcesContent\n * @property {string[]=} names\n */\n\nconst getInvalidDependenciesModuleWarning = memoize(() =>\n\trequire(\"./InvalidDependenciesModuleWarning\")\n);\nconst getValidate = memoize(() => require(\"schema-utils\").validate);\n\nconst ABSOLUTE_PATH_REGEX = /^([a-zA-Z]:\\\\|\\\\\\\\|\\/)/;\n\n/**\n * @typedef {Object} LoaderItem\n * @property {string} loader\n * @property {any} options\n * @property {string?} ident\n * @property {string?} type\n */\n\n/**\n * @param {string} context absolute context path\n * @param {string} source a source path\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {string} new source path\n */\nconst contextifySourceUrl = (context, source, associatedObjectForCache) => {\n\tif (source.startsWith(\"webpack://\")) return source;\n\treturn `webpack://${makePathsRelative(\n\t\tcontext,\n\t\tsource,\n\t\tassociatedObjectForCache\n\t)}`;\n};\n\n/**\n * @param {string} context absolute context path\n * @param {SourceMap} sourceMap a source map\n * @param {Object=} associatedObjectForCache an object to which the cache will be attached\n * @returns {SourceMap} new source map\n */\nconst contextifySourceMap = (context, sourceMap, associatedObjectForCache) => {\n\tif (!Array.isArray(sourceMap.sources)) return sourceMap;\n\tconst { sourceRoot } = sourceMap;\n\t/** @type {function(string): string} */\n\tconst mapper = !sourceRoot\n\t\t? source => source\n\t\t: sourceRoot.endsWith(\"/\")\n\t\t? source =>\n\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t? `${sourceRoot.slice(0, -1)}${source}`\n\t\t\t\t\t: `${sourceRoot}${source}`\n\t\t: source =>\n\t\t\t\tsource.startsWith(\"/\")\n\t\t\t\t\t? `${sourceRoot}${source}`\n\t\t\t\t\t: `${sourceRoot}/${source}`;\n\tconst newSources = sourceMap.sources.map(source =>\n\t\tcontextifySourceUrl(context, mapper(source), associatedObjectForCache)\n\t);\n\treturn {\n\t\t...sourceMap,\n\t\tfile: \"x\",\n\t\tsourceRoot: undefined,\n\t\tsources: newSources\n\t};\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {string} the converted string\n */\nconst asString = input => {\n\tif (Buffer.isBuffer(input)) {\n\t\treturn input.toString(\"utf-8\");\n\t}\n\treturn input;\n};\n\n/**\n * @param {string | Buffer} input the input\n * @returns {Buffer} the converted buffer\n */\nconst asBuffer = input => {\n\tif (!Buffer.isBuffer(input)) {\n\t\treturn Buffer.from(input, \"utf-8\");\n\t}\n\treturn input;\n};\n\nclass NonErrorEmittedError extends WebpackError {\n\tconstructor(error) {\n\t\tsuper();\n\n\t\tthis.name = \"NonErrorEmittedError\";\n\t\tthis.message = \"(Emitted value instead of an instance of Error) \" + error;\n\t}\n}\n\nmakeSerializable(\n\tNonErrorEmittedError,\n\t\"webpack/lib/NormalModule\",\n\t\"NonErrorEmittedError\"\n);\n\n/**\n * @typedef {Object} NormalModuleCompilationHooks\n * @property {SyncHook<[object, NormalModule]>} loader\n * @property {SyncHook<[LoaderItem[], NormalModule, object]>} beforeLoaders\n * @property {SyncHook<[NormalModule]>} beforeParse\n * @property {SyncHook<[NormalModule]>} beforeSnapshot\n * @property {HookMap<AsyncSeriesBailHook<[string, NormalModule], string | Buffer>>} readResourceForScheme\n * @property {HookMap<AsyncSeriesBailHook<[object], string | Buffer>>} readResource\n * @property {AsyncSeriesBailHook<[NormalModule, NeedBuildContext], boolean>} needBuild\n */\n\n/**\n * @typedef {Object} NormalModuleCreateData\n * @property {string=} layer an optional layer in which the module is\n * @property {string} type module type\n * @property {string} request request string\n * @property {string} userRequest request intended by user (without loaders from config)\n * @property {string} rawRequest request without resolving\n * @property {LoaderItem[]} loaders list of loaders\n * @property {string} resource path + query of the real resource\n * @property {Record<string, any>=} resourceResolveData resource resolve data\n * @property {string} context context directory for resolving\n * @property {string=} matchResource path + query of the matched resource (virtual)\n * @property {Parser} parser the parser used\n * @property {Record<string, any>=} parserOptions the options of the parser used\n * @property {Generator} generator the generator used\n * @property {Record<string, any>=} generatorOptions the options of the generator used\n * @property {ResolveOptions=} resolveOptions options used for resolving requests from this module\n */\n\n/** @type {WeakMap<Compilation, NormalModuleCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass NormalModule extends Module {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {NormalModuleCompilationHooks} the attached hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tloader: new SyncHook([\"loaderContext\", \"module\"]),\n\t\t\t\tbeforeLoaders: new SyncHook([\"loaders\", \"module\", \"loaderContext\"]),\n\t\t\t\tbeforeParse: new SyncHook([\"module\"]),\n\t\t\t\tbeforeSnapshot: new SyncHook([\"module\"]),\n\t\t\t\t// TODO webpack 6 deprecate\n\t\t\t\treadResourceForScheme: new HookMap(scheme => {\n\t\t\t\t\tconst hook = hooks.readResource.for(scheme);\n\t\t\t\t\treturn createFakeHook(\n\t\t\t\t\t\t/** @type {AsyncSeriesBailHook<[string, NormalModule], string | Buffer>} */ ({\n\t\t\t\t\t\t\ttap: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tap(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapAsync: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapAsync(options, (loaderContext, callback) =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module, callback)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttapPromise: (options, fn) =>\n\t\t\t\t\t\t\t\thook.tapPromise(options, loaderContext =>\n\t\t\t\t\t\t\t\t\tfn(loaderContext.resource, loaderContext._module)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t\treadResource: new HookMap(\n\t\t\t\t\t() => new AsyncSeriesBailHook([\"loaderContext\"])\n\t\t\t\t),\n\t\t\t\tneedBuild: new AsyncSeriesBailHook([\"module\", \"context\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\t/**\n\t * @param {NormalModuleCreateData} options options object\n\t */\n\tconstructor({\n\t\tlayer,\n\t\ttype,\n\t\trequest,\n\t\tuserRequest,\n\t\trawRequest,\n\t\tloaders,\n\t\tresource,\n\t\tresourceResolveData,\n\t\tcontext,\n\t\tmatchResource,\n\t\tparser,\n\t\tparserOptions,\n\t\tgenerator,\n\t\tgeneratorOptions,\n\t\tresolveOptions\n\t}) {\n\t\tsuper(type, context || getContext(resource), layer);\n\n\t\t// Info from Factory\n\t\t/** @type {string} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t\t/** @type {string} */\n\t\tthis.rawRequest = rawRequest;\n\t\t/** @type {boolean} */\n\t\tthis.binary = /^(asset|webassembly)\\b/.test(type);\n\t\t/** @type {Parser} */\n\t\tthis.parser = parser;\n\t\tthis.parserOptions = parserOptions;\n\t\t/** @type {Generator} */\n\t\tthis.generator = generator;\n\t\tthis.generatorOptions = generatorOptions;\n\t\t/** @type {string} */\n\t\tthis.resource = resource;\n\t\tthis.resourceResolveData = resourceResolveData;\n\t\t/** @type {string | undefined} */\n\t\tthis.matchResource = matchResource;\n\t\t/** @type {LoaderItem[]} */\n\t\tthis.loaders = loaders;\n\t\tif (resolveOptions !== undefined) {\n\t\t\t// already declared in super class\n\t\t\tthis.resolveOptions = resolveOptions;\n\t\t}\n\n\t\t// Info from Build\n\t\t/** @type {(WebpackError | null)=} */\n\t\tthis.error = null;\n\t\t/** @private @type {Source=} */\n\t\tthis._source = null;\n\t\t/** @private @type {Map<string, number> | undefined} **/\n\t\tthis._sourceSizes = undefined;\n\t\t/** @private @type {Set<string>} */\n\t\tthis._sourceTypes = undefined;\n\n\t\t// Cache\n\t\tthis._lastSuccessfulBuildMeta = {};\n\t\tthis._forceBuild = true;\n\t\tthis._isEvaluatingSideEffects = false;\n\t\t/** @type {WeakSet<ModuleGraph> | undefined} */\n\t\tthis._addedSideEffectsBailout = undefined;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\tif (this.layer === null) {\n\t\t\tif (this.type === \"javascript/auto\") {\n\t\t\t\treturn this.request;\n\t\t\t} else {\n\t\t\t\treturn `${this.type}|${this.request}`;\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${this.type}|${this.request}|${this.layer}`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn requestShortener.shorten(this.userRequest);\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\tlet ident = contextify(\n\t\t\toptions.context,\n\t\t\tthis.userRequest,\n\t\t\toptions.associatedObjectForCache\n\t\t);\n\t\tif (this.layer) ident = `(${this.layer})/${ident}`;\n\t\treturn ident;\n\t}\n\n\t/**\n\t * @returns {string | null} absolute path which should be used for condition matching (usually the resource path)\n\t */\n\tnameForCondition() {\n\t\tconst resource = this.matchResource || this.resource;\n\t\tconst idx = resource.indexOf(\"?\");\n\t\tif (idx >= 0) return resource.substr(0, idx);\n\t\treturn resource;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Update the (cached) module with\n\t * the fresh module from the factory. Usually updates internal references\n\t * and properties.\n\t * @param {Module} module fresh module\n\t * @returns {void}\n\t */\n\tupdateCacheModule(module) {\n\t\tsuper.updateCacheModule(module);\n\t\tconst m = /** @type {NormalModule} */ (module);\n\t\tthis.binary = m.binary;\n\t\tthis.request = m.request;\n\t\tthis.userRequest = m.userRequest;\n\t\tthis.rawRequest = m.rawRequest;\n\t\tthis.parser = m.parser;\n\t\tthis.parserOptions = m.parserOptions;\n\t\tthis.generator = m.generator;\n\t\tthis.generatorOptions = m.generatorOptions;\n\t\tthis.resource = m.resource;\n\t\tthis.resourceResolveData = m.resourceResolveData;\n\t\tthis.context = m.context;\n\t\tthis.matchResource = m.matchResource;\n\t\tthis.loaders = m.loaders;\n\t}\n\n\t/**\n\t * Assuming this module is in the cache. Remove internal references to allow freeing some memory.\n\t */\n\tcleanupForCache() {\n\t\t// Make sure to cache types and sizes before cleanup when this module has been built\n\t\t// They are accessed by the stats and we don't want them to crash after cleanup\n\t\t// TODO reconsider this for webpack 6\n\t\tif (this.buildInfo) {\n\t\t\tif (this._sourceTypes === undefined) this.getSourceTypes();\n\t\t\tfor (const type of this._sourceTypes) {\n\t\t\t\tthis.size(type);\n\t\t\t}\n\t\t}\n\t\tsuper.cleanupForCache();\n\t\tthis.parser = undefined;\n\t\tthis.parserOptions = undefined;\n\t\tthis.generator = undefined;\n\t\tthis.generatorOptions = undefined;\n\t}\n\n\t/**\n\t * Module should be unsafe cached. Get data that's needed for that.\n\t * This data will be passed to restoreFromUnsafeCache later.\n\t * @returns {object} cached data\n\t */\n\tgetUnsafeCacheData() {\n\t\tconst data = super.getUnsafeCacheData();\n\t\tdata.parserOptions = this.parserOptions;\n\t\tdata.generatorOptions = this.generatorOptions;\n\t\treturn data;\n\t}\n\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * restore unsafe cache data\n\t * @param {object} unsafeCacheData data from getUnsafeCacheData\n\t * @param {NormalModuleFactory} normalModuleFactory the normal module factory handling the unsafe caching\n\t */\n\t_restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tsuper._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t\tthis.parserOptions = unsafeCacheData.parserOptions;\n\t\tthis.parser = normalModuleFactory.getParser(this.type, this.parserOptions);\n\t\tthis.generatorOptions = unsafeCacheData.generatorOptions;\n\t\tthis.generator = normalModuleFactory.getGenerator(\n\t\t\tthis.type,\n\t\t\tthis.generatorOptions\n\t\t);\n\t\t// we assume the generator behaves identically and keep cached sourceTypes/Sizes\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string} name the asset name\n\t * @param {string} content the content\n\t * @param {string | TODO} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSourceForAsset(\n\t\tcontext,\n\t\tname,\n\t\tcontent,\n\t\tsourceMap,\n\t\tassociatedObjectForCache\n\t) {\n\t\tif (sourceMap) {\n\t\t\tif (\n\t\t\t\ttypeof sourceMap === \"string\" &&\n\t\t\t\t(this.useSourceMap || this.useSimpleSourceMap)\n\t\t\t) {\n\t\t\t\treturn new OriginalSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tcontextifySourceUrl(context, sourceMap, associatedObjectForCache)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.useSourceMap) {\n\t\t\t\treturn new SourceMapSource(\n\t\t\t\t\tcontent,\n\t\t\t\t\tname,\n\t\t\t\t\tcontextifySourceMap(context, sourceMap, associatedObjectForCache)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @param {ResolverWithOptions} resolver a resolver\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {InputFileSystem} fs file system from reading\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @returns {NormalModuleLoaderContext} loader context\n\t */\n\t_createLoaderContext(resolver, options, compilation, fs, hooks) {\n\t\tconst { requestShortener } = compilation.runtimeTemplate;\n\t\tconst getCurrentLoaderName = () => {\n\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\tif (!currentLoader) return \"(not in loader scope)\";\n\t\t\treturn requestShortener.shorten(currentLoader.loader);\n\t\t};\n\t\tconst getResolveContext = () => {\n\t\t\treturn {\n\t\t\t\tfileDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addDependency(d)\n\t\t\t\t},\n\t\t\t\tcontextDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addContextDependency(d)\n\t\t\t\t},\n\t\t\t\tmissingDependencies: {\n\t\t\t\t\tadd: d => loaderContext.addMissingDependency(d)\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst getAbsolutify = memoize(() =>\n\t\t\tabsolutify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getAbsolutifyInContext = memoize(() =>\n\t\t\tabsolutify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst getContextify = memoize(() =>\n\t\t\tcontextify.bindCache(compilation.compiler.root)\n\t\t);\n\t\tconst getContextifyInContext = memoize(() =>\n\t\t\tcontextify.bindContextCache(this.context, compilation.compiler.root)\n\t\t);\n\t\tconst utils = {\n\t\t\tabsolutify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getAbsolutifyInContext()(request)\n\t\t\t\t\t: getAbsolutify()(context, request);\n\t\t\t},\n\t\t\tcontextify: (context, request) => {\n\t\t\t\treturn context === this.context\n\t\t\t\t\t? getContextifyInContext()(request)\n\t\t\t\t\t: getContextify()(context, request);\n\t\t\t},\n\t\t\tcreateHash: type => {\n\t\t\t\treturn createHash(type || compilation.outputOptions.hashFunction);\n\t\t\t}\n\t\t};\n\t\tconst loaderContext = {\n\t\t\tversion: 2,\n\t\t\tgetOptions: schema => {\n\t\t\t\tconst loader = this.getCurrentLoader(loaderContext);\n\n\t\t\t\tlet { options } = loader;\n\n\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\tif (options.substr(0, 1) === \"{\" && options.substr(-1) === \"}\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toptions = parseJson(options);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new Error(`Cannot parse string options: ${e.message}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\toptions = querystring.parse(options, \"&\", \"=\", {\n\t\t\t\t\t\t\tmaxKeys: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (options === null || options === undefined) {\n\t\t\t\t\toptions = {};\n\t\t\t\t}\n\n\t\t\t\tif (schema) {\n\t\t\t\t\tlet name = \"Loader\";\n\t\t\t\t\tlet baseDataPath = \"options\";\n\t\t\t\t\tlet match;\n\t\t\t\t\tif (schema.title && (match = /^(.+) (.+)$/.exec(schema.title))) {\n\t\t\t\t\t\t[, name, baseDataPath] = match;\n\t\t\t\t\t}\n\t\t\t\t\tgetValidate()(schema, options, {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tbaseDataPath\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t},\n\t\t\temitWarning: warning => {\n\t\t\t\tif (!(warning instanceof Error)) {\n\t\t\t\t\twarning = new NonErrorEmittedError(warning);\n\t\t\t\t}\n\t\t\t\tthis.addWarning(\n\t\t\t\t\tnew ModuleWarning(warning, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\temitError: error => {\n\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\terror = new NonErrorEmittedError(error);\n\t\t\t\t}\n\t\t\t\tthis.addError(\n\t\t\t\t\tnew ModuleError(error, {\n\t\t\t\t\t\tfrom: getCurrentLoaderName()\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t},\n\t\t\tgetLogger: name => {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\treturn compilation.getLogger(() =>\n\t\t\t\t\t[currentLoader && currentLoader.loader, name, this.identifier()]\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t.join(\"|\")\n\t\t\t\t);\n\t\t\t},\n\t\t\tresolve(context, request, callback) {\n\t\t\t\tresolver.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t},\n\t\t\tgetResolve(options) {\n\t\t\t\tconst child = options ? resolver.withOptions(options) : resolver;\n\t\t\t\treturn (context, request, callback) => {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tchild.resolve({}, context, request, getResolveContext(), callback);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tchild.resolve(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\tgetResolveContext(),\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\temitFile: (name, content, sourceMap, assetInfo) => {\n\t\t\t\tif (!this.buildInfo.assets) {\n\t\t\t\t\tthis.buildInfo.assets = Object.create(null);\n\t\t\t\t\tthis.buildInfo.assetsInfo = new Map();\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.assets[name] = this.createSourceForAsset(\n\t\t\t\t\toptions.context,\n\t\t\t\t\tname,\n\t\t\t\t\tcontent,\n\t\t\t\t\tsourceMap,\n\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t);\n\t\t\t\tthis.buildInfo.assetsInfo.set(name, assetInfo);\n\t\t\t},\n\t\t\taddBuildDependency: dep => {\n\t\t\t\tif (this.buildInfo.buildDependencies === undefined) {\n\t\t\t\t\tthis.buildInfo.buildDependencies = new LazySet();\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.buildDependencies.add(dep);\n\t\t\t},\n\t\t\tutils,\n\t\t\trootContext: options.context,\n\t\t\twebpack: true,\n\t\t\tsourceMap: !!this.useSourceMap,\n\t\t\tmode: options.mode || \"production\",\n\t\t\t_module: this,\n\t\t\t_compilation: compilation,\n\t\t\t_compiler: compilation.compiler,\n\t\t\tfs: fs\n\t\t};\n\n\t\tObject.assign(loaderContext, options.loader);\n\n\t\thooks.loader.call(loaderContext, this);\n\n\t\treturn loaderContext;\n\t}\n\n\tgetCurrentLoader(loaderContext, index = loaderContext.loaderIndex) {\n\t\tif (\n\t\t\tthis.loaders &&\n\t\t\tthis.loaders.length &&\n\t\t\tindex < this.loaders.length &&\n\t\t\tindex >= 0 &&\n\t\t\tthis.loaders[index]\n\t\t) {\n\t\t\treturn this.loaders[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {string} context the compilation context\n\t * @param {string | Buffer} content the content\n\t * @param {string | TODO} sourceMap an optional source map\n\t * @param {Object=} associatedObjectForCache object for caching\n\t * @returns {Source} the created source\n\t */\n\tcreateSource(context, content, sourceMap, associatedObjectForCache) {\n\t\tif (Buffer.isBuffer(content)) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// if there is no identifier return raw source\n\t\tif (!this.identifier) {\n\t\t\treturn new RawSource(content);\n\t\t}\n\n\t\t// from here on we assume we have an identifier\n\t\tconst identifier = this.identifier();\n\n\t\tif (this.useSourceMap && sourceMap) {\n\t\t\treturn new SourceMapSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache),\n\t\t\t\tcontextifySourceMap(context, sourceMap, associatedObjectForCache)\n\t\t\t);\n\t\t}\n\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\treturn new OriginalSource(\n\t\t\t\tcontent,\n\t\t\t\tcontextifySourceUrl(context, identifier, associatedObjectForCache)\n\t\t\t);\n\t\t}\n\n\t\treturn new RawSource(content);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {NormalModuleCompilationHooks} hooks the hooks\n\t * @param {function((WebpackError | null)=): void} callback callback function\n\t * @returns {void}\n\t */\n\t_doBuild(options, compilation, resolver, fs, hooks, callback) {\n\t\tconst loaderContext = this._createLoaderContext(\n\t\t\tresolver,\n\t\t\toptions,\n\t\t\tcompilation,\n\t\t\tfs,\n\t\t\thooks\n\t\t);\n\n\t\tconst processResult = (err, result) => {\n\t\t\tif (err) {\n\t\t\t\tif (!(err instanceof Error)) {\n\t\t\t\t\terr = new NonErrorEmittedError(err);\n\t\t\t\t}\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext);\n\t\t\t\tconst error = new ModuleBuildError(err, {\n\t\t\t\t\tfrom:\n\t\t\t\t\t\tcurrentLoader &&\n\t\t\t\t\t\tcompilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t)\n\t\t\t\t});\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tconst source = result[0];\n\t\t\tconst sourceMap = result.length >= 1 ? result[1] : null;\n\t\t\tconst extraInfo = result.length >= 2 ? result[2] : null;\n\n\t\t\tif (!Buffer.isBuffer(source) && typeof source !== \"string\") {\n\t\t\t\tconst currentLoader = this.getCurrentLoader(loaderContext, 0);\n\t\t\t\tconst err = new Error(\n\t\t\t\t\t`Final loader (${\n\t\t\t\t\t\tcurrentLoader\n\t\t\t\t\t\t\t? compilation.runtimeTemplate.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\tcurrentLoader.loader\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: \"unknown\"\n\t\t\t\t\t}) didn't return a Buffer or String`\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleBuildError(err);\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tthis._source = this.createSource(\n\t\t\t\toptions.context,\n\t\t\t\tthis.binary ? asBuffer(source) : asString(source),\n\t\t\t\tsourceMap,\n\t\t\t\tcompilation.compiler.root\n\t\t\t);\n\t\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\t\tthis._ast =\n\t\t\t\ttypeof extraInfo === \"object\" &&\n\t\t\t\textraInfo !== null &&\n\t\t\t\textraInfo.webpackAST !== undefined\n\t\t\t\t\t? extraInfo.webpackAST\n\t\t\t\t\t: null;\n\t\t\treturn callback();\n\t\t};\n\n\t\tthis.buildInfo.fileDependencies = new LazySet();\n\t\tthis.buildInfo.contextDependencies = new LazySet();\n\t\tthis.buildInfo.missingDependencies = new LazySet();\n\t\tthis.buildInfo.cacheable = true;\n\n\t\ttry {\n\t\t\thooks.beforeLoaders.call(this.loaders, this, loaderContext);\n\t\t} catch (err) {\n\t\t\tprocessResult(err);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.loaders.length > 0) {\n\t\t\tthis.buildInfo.buildDependencies = new LazySet();\n\t\t}\n\n\t\trunLoaders(\n\t\t\t{\n\t\t\t\tresource: this.resource,\n\t\t\t\tloaders: this.loaders,\n\t\t\t\tcontext: loaderContext,\n\t\t\t\tprocessResource: (loaderContext, resourcePath, callback) => {\n\t\t\t\t\tconst resource = loaderContext.resource;\n\t\t\t\t\tconst scheme = getScheme(resource);\n\t\t\t\t\thooks.readResource\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.callAsync(loaderContext, (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (typeof result !== \"string\" && !result) {\n\t\t\t\t\t\t\t\treturn callback(new UnhandledSchemeError(scheme, resource));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\t// Cleanup loaderContext to avoid leaking memory in ICs\n\t\t\t\tloaderContext._compilation =\n\t\t\t\t\tloaderContext._compiler =\n\t\t\t\t\tloaderContext._module =\n\t\t\t\t\tloaderContext.fs =\n\t\t\t\t\t\tundefined;\n\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis.buildInfo.cacheable = false;\n\t\t\t\t\treturn processResult(\n\t\t\t\t\t\terr || new Error(\"No result from loader-runner processing\"),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.fileDependencies.addAll(result.fileDependencies);\n\t\t\t\tthis.buildInfo.contextDependencies.addAll(result.contextDependencies);\n\t\t\t\tthis.buildInfo.missingDependencies.addAll(result.missingDependencies);\n\t\t\t\tfor (const loader of this.loaders) {\n\t\t\t\t\tthis.buildInfo.buildDependencies.add(loader.loader);\n\t\t\t\t}\n\t\t\t\tthis.buildInfo.cacheable = this.buildInfo.cacheable && result.cacheable;\n\t\t\t\tprocessResult(err, result.result);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {WebpackError} error the error\n\t * @returns {void}\n\t */\n\tmarkModuleAsErrored(error) {\n\t\t// Restore build meta from successful build to keep importing state\n\t\tthis.buildMeta = { ...this._lastSuccessfulBuildMeta };\n\t\tthis.error = error;\n\t\tthis.addError(error);\n\t}\n\n\tapplyNoParseRule(rule, content) {\n\t\t// must start with \"rule\" if rule is a string\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn content.startsWith(rule);\n\t\t}\n\n\t\tif (typeof rule === \"function\") {\n\t\t\treturn rule(content);\n\t\t}\n\t\t// we assume rule is a regexp\n\t\treturn rule.test(content);\n\t}\n\n\t// check if module should not be parsed\n\t// returns \"true\" if the module should !not! be parsed\n\t// returns \"false\" if the module !must! be parsed\n\tshouldPreventParsing(noParseRule, request) {\n\t\t// if no noParseRule exists, return false\n\t\t// the module !must! be parsed.\n\t\tif (!noParseRule) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// we only have one rule to check\n\t\tif (!Array.isArray(noParseRule)) {\n\t\t\t// returns \"true\" if the module is !not! to be parsed\n\t\t\treturn this.applyNoParseRule(noParseRule, request);\n\t\t}\n\n\t\tfor (let i = 0; i < noParseRule.length; i++) {\n\t\t\tconst rule = noParseRule[i];\n\t\t\t// early exit on first truthy match\n\t\t\t// this module is !not! to be parsed\n\t\t\tif (this.applyNoParseRule(rule, request)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// no match found, so this module !should! be parsed\n\t\treturn false;\n\t}\n\n\t_initBuildHash(compilation) {\n\t\tconst hash = createHash(compilation.outputOptions.hashFunction);\n\t\tif (this._source) {\n\t\t\thash.update(\"source\");\n\t\t\tthis._source.updateHash(hash);\n\t\t}\n\t\thash.update(\"meta\");\n\t\thash.update(JSON.stringify(this.buildMeta));\n\t\tthis.buildInfo.hash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis._forceBuild = false;\n\t\tthis._source = null;\n\t\tif (this._sourceSizes !== undefined) this._sourceSizes.clear();\n\t\tthis._sourceTypes = undefined;\n\t\tthis._ast = null;\n\t\tthis.error = null;\n\t\tthis.clearWarningsAndErrors();\n\t\tthis.clearDependenciesAndBlocks();\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: false,\n\t\t\tparsed: true,\n\t\t\tfileDependencies: undefined,\n\t\t\tcontextDependencies: undefined,\n\t\t\tmissingDependencies: undefined,\n\t\t\tbuildDependencies: undefined,\n\t\t\tvalueDependencies: undefined,\n\t\t\thash: undefined,\n\t\t\tassets: undefined,\n\t\t\tassetsInfo: undefined\n\t\t};\n\n\t\tconst startTime = compilation.compiler.fsStartTime || Date.now();\n\n\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\n\t\treturn this._doBuild(options, compilation, resolver, fs, hooks, err => {\n\t\t\t// if we have an error mark module as failed and exit\n\t\t\tif (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tconst handleParseError = e => {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tconst loaders = this.loaders.map(item =>\n\t\t\t\t\tcontextify(options.context, item.loader, compilation.compiler.root)\n\t\t\t\t);\n\t\t\t\tconst error = new ModuleParseError(source, e, loaders, this.type);\n\t\t\t\tthis.markModuleAsErrored(error);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t};\n\n\t\t\tconst handleParseResult = result => {\n\t\t\t\tthis.dependencies.sort(\n\t\t\t\t\tconcatComparators(\n\t\t\t\t\t\tcompareSelect(a => a.loc, compareLocations),\n\t\t\t\t\t\tkeepOriginalOrder(this.dependencies)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\tthis._lastSuccessfulBuildMeta = this.buildMeta;\n\t\t\t\treturn handleBuildDone();\n\t\t\t};\n\n\t\t\tconst handleBuildDone = () => {\n\t\t\t\ttry {\n\t\t\t\t\thooks.beforeSnapshot.call(this);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst snapshotOptions = compilation.options.snapshot.module;\n\t\t\t\tif (!this.buildInfo.cacheable || !snapshotOptions) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\t// add warning for all non-absolute paths in fileDependencies, etc\n\t\t\t\t// This makes it easier to find problems with watching and/or caching\n\t\t\t\tlet nonAbsoluteDependencies = undefined;\n\t\t\t\tconst checkDependencies = deps => {\n\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\tif (!ABSOLUTE_PATH_REGEX.test(dep)) {\n\t\t\t\t\t\t\tif (nonAbsoluteDependencies === undefined)\n\t\t\t\t\t\t\t\tnonAbsoluteDependencies = new Set();\n\t\t\t\t\t\t\tnonAbsoluteDependencies.add(dep);\n\t\t\t\t\t\t\tdeps.delete(dep);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst depWithoutGlob = dep.replace(/[\\\\/]?\\*.*$/, \"\");\n\t\t\t\t\t\t\t\tconst absolute = join(\n\t\t\t\t\t\t\t\t\tcompilation.fileSystemInfo.fs,\n\t\t\t\t\t\t\t\t\tthis.context,\n\t\t\t\t\t\t\t\t\tdepWithoutGlob\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (absolute !== dep && ABSOLUTE_PATH_REGEX.test(absolute)) {\n\t\t\t\t\t\t\t\t\t(depWithoutGlob !== dep\n\t\t\t\t\t\t\t\t\t\t? this.buildInfo.contextDependencies\n\t\t\t\t\t\t\t\t\t\t: deps\n\t\t\t\t\t\t\t\t\t).add(absolute);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcheckDependencies(this.buildInfo.fileDependencies);\n\t\t\t\tcheckDependencies(this.buildInfo.missingDependencies);\n\t\t\t\tcheckDependencies(this.buildInfo.contextDependencies);\n\t\t\t\tif (nonAbsoluteDependencies !== undefined) {\n\t\t\t\t\tconst InvalidDependenciesModuleWarning =\n\t\t\t\t\t\tgetInvalidDependenciesModuleWarning();\n\t\t\t\t\tthis.addWarning(\n\t\t\t\t\t\tnew InvalidDependenciesModuleWarning(this, nonAbsoluteDependencies)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// convert file/context/missingDependencies into filesystem snapshot\n\t\t\t\tcompilation.fileSystemInfo.createSnapshot(\n\t\t\t\t\tstartTime,\n\t\t\t\t\tthis.buildInfo.fileDependencies,\n\t\t\t\t\tthis.buildInfo.contextDependencies,\n\t\t\t\t\tthis.buildInfo.missingDependencies,\n\t\t\t\t\tsnapshotOptions,\n\t\t\t\t\t(err, snapshot) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buildInfo.fileDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.contextDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.missingDependencies = undefined;\n\t\t\t\t\t\tthis.buildInfo.snapshot = snapshot;\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\thooks.beforeParse.call(this);\n\t\t\t} catch (err) {\n\t\t\t\tthis.markModuleAsErrored(err);\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// check if this module should !not! be parsed.\n\t\t\t// if so, exit here;\n\t\t\tconst noParseRule = options.module && options.module.noParse;\n\t\t\tif (this.shouldPreventParsing(noParseRule, this.request)) {\n\t\t\t\t// We assume that we need module and exports\n\t\t\t\tthis.buildInfo.parsed = false;\n\t\t\t\tthis._initBuildHash(compilation);\n\t\t\t\treturn handleBuildDone();\n\t\t\t}\n\n\t\t\tlet result;\n\t\t\ttry {\n\t\t\t\tconst source = this._source.source();\n\t\t\t\tresult = this.parser.parse(this._ast || source, {\n\t\t\t\t\tsource,\n\t\t\t\t\tcurrent: this,\n\t\t\t\t\tmodule: this,\n\t\t\t\t\tcompilation: compilation,\n\t\t\t\t\toptions: options\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\thandleParseError(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleParseResult(result);\n\t\t});\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(context) {\n\t\treturn this.generator.getConcatenationBailoutReason(this, context);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this module should be connected to referencing modules when consumed for side-effects only\n\t */\n\tgetSideEffectsConnectionState(moduleGraph) {\n\t\tif (this.factoryMeta !== undefined) {\n\t\t\tif (this.factoryMeta.sideEffectFree) return false;\n\t\t\tif (this.factoryMeta.sideEffectFree === false) return true;\n\t\t}\n\t\tif (this.buildMeta !== undefined && this.buildMeta.sideEffectFree) {\n\t\t\tif (this._isEvaluatingSideEffects)\n\t\t\t\treturn ModuleGraphConnection.CIRCULAR_CONNECTION;\n\t\t\tthis._isEvaluatingSideEffects = true;\n\t\t\t/** @type {ConnectionState} */\n\t\t\tlet current = false;\n\t\t\tfor (const dep of this.dependencies) {\n\t\t\t\tconst state = dep.getModuleEvaluationSideEffectsState(moduleGraph);\n\t\t\t\tif (state === true) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._addedSideEffectsBailout === undefined\n\t\t\t\t\t\t\t? ((this._addedSideEffectsBailout = new WeakSet()), true)\n\t\t\t\t\t\t\t: !this._addedSideEffectsBailout.has(moduleGraph)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._addedSideEffectsBailout.add(moduleGraph);\n\t\t\t\t\t\tmoduleGraph\n\t\t\t\t\t\t\t.getOptimizationBailout(this)\n\t\t\t\t\t\t\t.push(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t`Dependency (${\n\t\t\t\t\t\t\t\t\t\tdep.type\n\t\t\t\t\t\t\t\t\t}) with side effects at ${formatLocation(dep.loc)}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (state !== ModuleGraphConnection.CIRCULAR_CONNECTION) {\n\t\t\t\t\tcurrent = ModuleGraphConnection.addConnectionStates(current, state);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._isEvaluatingSideEffects = false;\n\t\t\t// When caching is implemented here, make sure to not cache when\n\t\t\t// at least one circular connection was in the loop above\n\t\t\treturn current;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\tif (this._sourceTypes === undefined) {\n\t\t\tthis._sourceTypes = this.generator.getTypes(this);\n\t\t}\n\t\treturn this._sourceTypes;\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\tdependencyTemplates,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope,\n\t\tcodeGenerationResults\n\t}) {\n\t\t/** @type {Set<string>} */\n\t\tconst runtimeRequirements = new Set();\n\n\t\tif (!this.buildInfo.parsed) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t}\n\n\t\t/** @type {Map<string, any>} */\n\t\tlet data;\n\t\tconst getData = () => {\n\t\t\tif (data === undefined) data = new Map();\n\t\t\treturn data;\n\t\t};\n\n\t\tconst sources = new Map();\n\t\tfor (const type of this.generator.getTypes(this)) {\n\t\t\tconst source = this.error\n\t\t\t\t? new RawSource(\n\t\t\t\t\t\t\"throw new Error(\" + JSON.stringify(this.error.message) + \");\"\n\t\t\t\t  )\n\t\t\t\t: this.generator.generate(this, {\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntimeRequirements,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\tconcatenationScope,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tgetData,\n\t\t\t\t\t\ttype\n\t\t\t\t  });\n\n\t\t\tif (source) {\n\t\t\t\tsources.set(type, new CachedSource(source));\n\t\t\t}\n\t\t}\n\n\t\t/** @type {CodeGenerationResult} */\n\t\tconst resultEntry = {\n\t\t\tsources,\n\t\t\truntimeRequirements,\n\t\t\tdata\n\t\t};\n\t\treturn resultEntry;\n\t}\n\n\t/**\n\t * @returns {Source | null} the original source for the module before webpack transformation\n\t */\n\toriginalSource() {\n\t\treturn this._source;\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tinvalidateBuild() {\n\t\tthis._forceBuild = true;\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\tconst { fileSystemInfo, compilation, valueCacheVersions } = context;\n\t\t// build if enforced\n\t\tif (this._forceBuild) return callback(null, true);\n\n\t\t// always try to build in case of an error\n\t\tif (this.error) return callback(null, true);\n\n\t\t// always build when module is not cacheable\n\t\tif (!this.buildInfo.cacheable) return callback(null, true);\n\n\t\t// build when there is no snapshot to check\n\t\tif (!this.buildInfo.snapshot) return callback(null, true);\n\n\t\t// build when valueDependencies have changed\n\t\t/** @type {Map<string, string | Set<string>>} */\n\t\tconst valueDependencies = this.buildInfo.valueDependencies;\n\t\tif (valueDependencies) {\n\t\t\tif (!valueCacheVersions) return callback(null, true);\n\t\t\tfor (const [key, value] of valueDependencies) {\n\t\t\t\tif (value === undefined) return callback(null, true);\n\t\t\t\tconst current = valueCacheVersions.get(key);\n\t\t\t\tif (\n\t\t\t\t\tvalue !== current &&\n\t\t\t\t\t(typeof value === \"string\" ||\n\t\t\t\t\t\ttypeof current === \"string\" ||\n\t\t\t\t\t\tcurrent === undefined ||\n\t\t\t\t\t\t!isSubset(value, current))\n\t\t\t\t) {\n\t\t\t\t\treturn callback(null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check snapshot for validity\n\t\tfileSystemInfo.checkSnapshotValid(this.buildInfo.snapshot, (err, valid) => {\n\t\t\tif (err) return callback(err);\n\t\t\tif (!valid) return callback(null, true);\n\t\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\t\t\thooks.needBuild.callAsync(this, context, (err, needBuild) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tHookWebpackError.makeWebpackError(\n\t\t\t\t\t\t\terr,\n\t\t\t\t\t\t\t\"NormalModule.getCompilationHooks().needBuild\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcallback(null, !!needBuild);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\tconst cachedSize =\n\t\t\tthis._sourceSizes === undefined ? undefined : this._sourceSizes.get(type);\n\t\tif (cachedSize !== undefined) {\n\t\t\treturn cachedSize;\n\t\t}\n\t\tconst size = Math.max(1, this.generator.getSize(this, type));\n\t\tif (this._sourceSizes === undefined) {\n\t\t\tthis._sourceSizes = new Map();\n\t\t}\n\t\tthis._sourceSizes.set(type, size);\n\t\treturn size;\n\t}\n\n\t/**\n\t * @param {LazySet<string>} fileDependencies set where file dependencies are added to\n\t * @param {LazySet<string>} contextDependencies set where context dependencies are added to\n\t * @param {LazySet<string>} missingDependencies set where missing dependencies are added to\n\t * @param {LazySet<string>} buildDependencies set where build dependencies are added to\n\t */\n\taddCacheDependencies(\n\t\tfileDependencies,\n\t\tcontextDependencies,\n\t\tmissingDependencies,\n\t\tbuildDependencies\n\t) {\n\t\tconst { snapshot, buildDependencies: buildDeps } = this.buildInfo;\n\t\tif (snapshot) {\n\t\t\tfileDependencies.addAll(snapshot.getFileIterable());\n\t\t\tcontextDependencies.addAll(snapshot.getContextIterable());\n\t\t\tmissingDependencies.addAll(snapshot.getMissingIterable());\n\t\t} else {\n\t\t\tconst {\n\t\t\t\tfileDependencies: fileDeps,\n\t\t\t\tcontextDependencies: contextDeps,\n\t\t\t\tmissingDependencies: missingDeps\n\t\t\t} = this.buildInfo;\n\t\t\tif (fileDeps !== undefined) fileDependencies.addAll(fileDeps);\n\t\t\tif (contextDeps !== undefined) contextDependencies.addAll(contextDeps);\n\t\t\tif (missingDeps !== undefined) missingDependencies.addAll(missingDeps);\n\t\t}\n\t\tif (buildDeps !== undefined) {\n\t\t\tbuildDependencies.addAll(buildDeps);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.buildInfo.hash);\n\t\tthis.generator.updateHash(hash, {\n\t\t\tmodule: this,\n\t\t\t...context\n\t\t});\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\t// deserialize\n\t\twrite(this._source);\n\t\twrite(this.error);\n\t\twrite(this._lastSuccessfulBuildMeta);\n\t\twrite(this._forceBuild);\n\t\tsuper.serialize(context);\n\t}\n\n\tstatic deserialize(context) {\n\t\tconst obj = new NormalModule({\n\t\t\t// will be deserialized by Module\n\t\t\tlayer: null,\n\t\t\ttype: \"\",\n\t\t\t// will be filled by updateCacheModule\n\t\t\tresource: \"\",\n\t\t\tcontext: \"\",\n\t\t\trequest: null,\n\t\t\tuserRequest: null,\n\t\t\trawRequest: null,\n\t\t\tloaders: null,\n\t\t\tmatchResource: null,\n\t\t\tparser: null,\n\t\t\tparserOptions: null,\n\t\t\tgenerator: null,\n\t\t\tgeneratorOptions: null,\n\t\t\tresolveOptions: null\n\t\t});\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis._source = read();\n\t\tthis.error = read();\n\t\tthis._lastSuccessfulBuildMeta = read();\n\t\tthis._forceBuild = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(NormalModule, \"webpack/lib/NormalModule\");\n\nmodule.exports = NormalModule;\n"]},"metadata":{},"sourceType":"script"}