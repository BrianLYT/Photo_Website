{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst {\n  getEntryRuntime\n} = require(\"../util/runtime\");\n\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} ExportPropertyLibraryPluginParsed\n * @property {string | string[]} export\n */\n\n/**\n * @typedef {Object} ExportPropertyLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean} nsObjectUsed the namespace object is used\n */\n\n/**\n * @typedef {ExportPropertyLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ExportPropertyLibraryPluginParsed>}\n */\n\n\nclass ExportPropertyLibraryPlugin extends AbstractLibraryPlugin {\n  /**\n   * @param {ExportPropertyLibraryPluginOptions} options options\n   */\n  constructor(_ref) {\n    let {\n      type,\n      nsObjectUsed\n    } = _ref;\n    super({\n      pluginName: \"ExportPropertyLibraryPlugin\",\n      type\n    });\n    this.nsObjectUsed = nsObjectUsed;\n  }\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n\n\n  parseOptions(library) {\n    return {\n      export: library.export\n    };\n  }\n  /**\n   * @param {Module} module the exporting entry module\n   * @param {string} entryName the name of the entrypoint\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {void}\n   */\n\n\n  finishEntryModule(module, entryName, _ref2) {\n    let {\n      options,\n      compilation,\n      compilation: {\n        moduleGraph\n      }\n    } = _ref2;\n    const runtime = getEntryRuntime(compilation, entryName);\n\n    if (options.export) {\n      const exportsInfo = moduleGraph.getExportInfo(module, Array.isArray(options.export) ? options.export[0] : options.export);\n      exportsInfo.setUsed(UsageState.Used, runtime);\n      exportsInfo.canMangleUse = false;\n    } else {\n      const exportsInfo = moduleGraph.getExportsInfo(module);\n\n      if (this.nsObjectUsed) {\n        exportsInfo.setUsedInUnknownWay(runtime);\n      } else {\n        exportsInfo.setAllKnownExportsUsed(runtime);\n      }\n    }\n\n    moduleGraph.addExtraReason(module, \"used as library export\");\n  }\n  /**\n   * @param {Chunk} chunk the chunk\n   * @param {Set<string>} set runtime requirements\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {void}\n   */\n\n\n  runtimeRequirements(chunk, set, libraryContext) {}\n  /**\n   * @param {Source} source source\n   * @param {Module} module module\n   * @param {StartupRenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n\n\n  renderStartup(source, module, renderContext, _ref3) {\n    let {\n      options\n    } = _ref3;\n    if (!options.export) return source;\n    const postfix = `__webpack_exports__ = __webpack_exports__${propertyAccess(Array.isArray(options.export) ? options.export : [options.export])};\\n`;\n    return new ConcatSource(source, postfix);\n  }\n\n}\n\nmodule.exports = ExportPropertyLibraryPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/library/ExportPropertyLibraryPlugin.js"],"names":["ConcatSource","require","UsageState","propertyAccess","getEntryRuntime","AbstractLibraryPlugin","ExportPropertyLibraryPlugin","constructor","type","nsObjectUsed","pluginName","parseOptions","library","export","finishEntryModule","module","entryName","options","compilation","moduleGraph","runtime","exportsInfo","getExportInfo","Array","isArray","setUsed","Used","canMangleUse","getExportsInfo","setUsedInUnknownWay","setAllKnownExportsUsed","addExtraReason","runtimeRequirements","chunk","set","libraryContext","renderStartup","source","renderContext","postfix","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst { getEntryRuntime } = require(\"../util/runtime\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} ExportPropertyLibraryPluginParsed\n * @property {string | string[]} export\n */\n\n/**\n * @typedef {Object} ExportPropertyLibraryPluginOptions\n * @property {LibraryType} type\n * @property {boolean} nsObjectUsed the namespace object is used\n */\n/**\n * @typedef {ExportPropertyLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ExportPropertyLibraryPluginParsed>}\n */\nclass ExportPropertyLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * @param {ExportPropertyLibraryPluginOptions} options options\n\t */\n\tconstructor({ type, nsObjectUsed }) {\n\t\tsuper({\n\t\t\tpluginName: \"ExportPropertyLibraryPlugin\",\n\t\t\ttype\n\t\t});\n\t\tthis.nsObjectUsed = nsObjectUsed;\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\treturn {\n\t\t\texport: library.export\n\t\t};\n\t}\n\n\t/**\n\t * @param {Module} module the exporting entry module\n\t * @param {string} entryName the name of the entrypoint\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tfinishEntryModule(\n\t\tmodule,\n\t\tentryName,\n\t\t{ options, compilation, compilation: { moduleGraph } }\n\t) {\n\t\tconst runtime = getEntryRuntime(compilation, entryName);\n\t\tif (options.export) {\n\t\t\tconst exportsInfo = moduleGraph.getExportInfo(\n\t\t\t\tmodule,\n\t\t\t\tArray.isArray(options.export) ? options.export[0] : options.export\n\t\t\t);\n\t\t\texportsInfo.setUsed(UsageState.Used, runtime);\n\t\t\texportsInfo.canMangleUse = false;\n\t\t} else {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\tif (this.nsObjectUsed) {\n\t\t\t\texportsInfo.setUsedInUnknownWay(runtime);\n\t\t\t} else {\n\t\t\t\texportsInfo.setAllKnownExportsUsed(runtime);\n\t\t\t}\n\t\t}\n\t\tmoduleGraph.addExtraReason(module, \"used as library export\");\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Set<string>} set runtime requirements\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\truntimeRequirements(chunk, set, libraryContext) {}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {Module} module module\n\t * @param {StartupRenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trenderStartup(source, module, renderContext, { options }) {\n\t\tif (!options.export) return source;\n\t\tconst postfix = `__webpack_exports__ = __webpack_exports__${propertyAccess(\n\t\t\tArray.isArray(options.export) ? options.export : [options.export]\n\t\t)};\\n`;\n\t\treturn new ConcatSource(source, postfix);\n\t}\n}\n\nmodule.exports = ExportPropertyLibraryPlugin;\n"]},"metadata":{},"sourceType":"script"}