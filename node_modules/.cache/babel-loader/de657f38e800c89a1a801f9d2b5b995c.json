{"ast":null,"code":"\"use strict\";\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\n\n/** @typedef {import(\"./index.js\").CustomOptions} CustomOptions */\n\n/**\n * @template T\n * @param {import(\"./index.js\").InternalOptions<T>} options\n * @returns {Promise<MinimizedResult>}\n */\n\nasync function minify(options) {\n  const {\n    name,\n    input,\n    inputSourceMap,\n    extractComments\n  } = options;\n  const {\n    implementation,\n    options: minimizerOptions\n  } = options.minimizer;\n  return implementation({\n    [name]: input\n  }, inputSourceMap, minimizerOptions, extractComments);\n}\n/**\n * @param {string} options\n * @returns {Promise<MinimizedResult>}\n */\n\n\nasync function transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-param-reassign\n  const evaluatedOptions =\n  /**\n   * @template T\n   * @type {import(\"./index.js\").InternalOptions<T>}\n   * */\n  // eslint-disable-next-line no-new-func\n  new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\n\nmodule.exports = {\n  minify,\n  transform\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/terser-webpack-plugin/dist/minify.js"],"names":["minify","options","name","input","inputSourceMap","extractComments","implementation","minimizerOptions","minimizer","transform","evaluatedOptions","Function","exports","require","module","__filename","__dirname"],"mappings":"AAAA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAeA,MAAf,CAAsBC,OAAtB,EAA+B;AAC7B,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA;AAJI,MAKFJ,OALJ;AAMA,QAAM;AACJK,IAAAA,cADI;AAEJL,IAAAA,OAAO,EAAEM;AAFL,MAGFN,OAAO,CAACO,SAHZ;AAIA,SAAOF,cAAc,CAAC;AACpB,KAACJ,IAAD,GAAQC;AADY,GAAD,EAElBC,cAFkB,EAEFG,gBAFE,EAEgBF,eAFhB,CAArB;AAGD;AACD;AACA;AACA;AACA;;;AAGA,eAAeI,SAAf,CAAyBR,OAAzB,EAAkC;AAChC;AACA;AACA;AACA,QAAMS,gBAAgB;AACtB;AACF;AACA;AACA;AACE;AACA,MAAIC,QAAJ,CAAa,SAAb,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,YAA7C,EAA2D,WAA3D,EAAyE,wBAAuBV,OAAQ,EAAxG,EAA2GW,OAA3G,EAAoHC,OAApH,EAA6HC,MAA7H,EAAqIC,UAArI,EAAiJC,SAAjJ,CANA;AAOA,SAAOhB,MAAM,CAACU,gBAAD,CAAb;AACD;;AAEDI,MAAM,CAACF,OAAP,GAAiB;AACfZ,EAAAA,MADe;AAEfS,EAAAA;AAFe,CAAjB","sourcesContent":["\"use strict\";\n\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\n\n/** @typedef {import(\"./index.js\").CustomOptions} CustomOptions */\n\n/**\n * @template T\n * @param {import(\"./index.js\").InternalOptions<T>} options\n * @returns {Promise<MinimizedResult>}\n */\nasync function minify(options) {\n  const {\n    name,\n    input,\n    inputSourceMap,\n    extractComments\n  } = options;\n  const {\n    implementation,\n    options: minimizerOptions\n  } = options.minimizer;\n  return implementation({\n    [name]: input\n  }, inputSourceMap, minimizerOptions, extractComments);\n}\n/**\n * @param {string} options\n * @returns {Promise<MinimizedResult>}\n */\n\n\nasync function transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-param-reassign\n  const evaluatedOptions =\n  /**\n   * @template T\n   * @type {import(\"./index.js\").InternalOptions<T>}\n   * */\n  // eslint-disable-next-line no-new-func\n  new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\n\nmodule.exports = {\n  minify,\n  transform\n};"]},"metadata":{},"sourceType":"script"}