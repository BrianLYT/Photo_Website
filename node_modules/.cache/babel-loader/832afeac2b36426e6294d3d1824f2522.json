{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\n\nconst Template = require(\"../Template\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} ModuleLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {Object} ModuleLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {ModuleLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ModuleLibraryPluginParsed>}\n */\n\n\nclass ModuleLibraryPlugin extends AbstractLibraryPlugin {\n  /**\n   * @param {ModuleLibraryPluginOptions} options the plugin options\n   */\n  constructor(options) {\n    super({\n      pluginName: \"ModuleLibraryPlugin\",\n      type: options.type\n    });\n  }\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n\n\n  parseOptions(library) {\n    const {\n      name\n    } = library;\n\n    if (name) {\n      throw new Error(`Library name must be unset. ${AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE}`);\n    }\n\n    return {\n      name:\n      /** @type {string} */\n      name\n    };\n  }\n  /**\n   * @param {Source} source source\n   * @param {Module} module module\n   * @param {StartupRenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n\n\n  renderStartup(source, module, _ref, _ref2) {\n    let {\n      moduleGraph,\n      chunk\n    } = _ref;\n    let {\n      options,\n      compilation\n    } = _ref2;\n    const result = new ConcatSource(source);\n    const exportsInfo = moduleGraph.getExportsInfo(module);\n    const exports = [];\n    const isAsync = moduleGraph.isAsync(module);\n\n    if (isAsync) {\n      result.add(`__webpack_exports__ = await __webpack_exports__;\\n`);\n    }\n\n    for (const exportInfo of exportsInfo.orderedExports) {\n      if (!exportInfo.provided) continue;\n      const varName = `__webpack_exports__${Template.toIdentifier(exportInfo.name)}`;\n      result.add(`var ${varName} = __webpack_exports__${propertyAccess([exportInfo.getUsedName(exportInfo.name, chunk.runtime)])};\\n`);\n      exports.push(`${varName} as ${exportInfo.name}`);\n    }\n\n    if (exports.length > 0) {\n      result.add(`export { ${exports.join(\", \")} };\\n`);\n    }\n\n    return result;\n  }\n\n}\n\nmodule.exports = ModuleLibraryPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/library/ModuleLibraryPlugin.js"],"names":["ConcatSource","require","Template","propertyAccess","AbstractLibraryPlugin","ModuleLibraryPlugin","constructor","options","pluginName","type","parseOptions","library","name","Error","COMMON_LIBRARY_NAME_MESSAGE","renderStartup","source","module","moduleGraph","chunk","compilation","result","exportsInfo","getExportsInfo","exports","isAsync","add","exportInfo","orderedExports","provided","varName","toIdentifier","getUsedName","runtime","push","length","join"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,iBAAD,CAAhC;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,wBAAD,CAA9B;;AACA,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,yBAAD,CAArC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,MAAMI,mBAAN,SAAkCD,qBAAlC,CAAwD;AACvD;AACD;AACA;AACCE,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,UAAM;AACLC,MAAAA,UAAU,EAAE,qBADP;AAELC,MAAAA,IAAI,EAAEF,OAAO,CAACE;AAFT,KAAN;AAIA;AAED;AACD;AACA;AACA;;;AACCC,EAAAA,YAAY,CAACC,OAAD,EAAU;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,OAAjB;;AACA,QAAIC,IAAJ,EAAU;AACT,YAAM,IAAIC,KAAJ,CACJ,+BAA8BT,qBAAqB,CAACU,2BAA4B,EAD5E,CAAN;AAGA;;AACD,WAAO;AACNF,MAAAA,IAAI;AAAE;AAAuBA,MAAAA;AADvB,KAAP;AAGA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACCG,EAAAA,aAAa,CACZC,MADY,EAEZC,MAFY,eAKX;AAAA,QAFD;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAEC;AAAA,QADD;AAAEZ,MAAAA,OAAF;AAAWa,MAAAA;AAAX,KACC;AACD,UAAMC,MAAM,GAAG,IAAIrB,YAAJ,CAAiBgB,MAAjB,CAAf;AACA,UAAMM,WAAW,GAAGJ,WAAW,CAACK,cAAZ,CAA2BN,MAA3B,CAApB;AACA,UAAMO,OAAO,GAAG,EAAhB;AACA,UAAMC,OAAO,GAAGP,WAAW,CAACO,OAAZ,CAAoBR,MAApB,CAAhB;;AACA,QAAIQ,OAAJ,EAAa;AACZJ,MAAAA,MAAM,CAACK,GAAP,CAAY,oDAAZ;AACA;;AACD,SAAK,MAAMC,UAAX,IAAyBL,WAAW,CAACM,cAArC,EAAqD;AACpD,UAAI,CAACD,UAAU,CAACE,QAAhB,EAA0B;AAC1B,YAAMC,OAAO,GAAI,sBAAqB5B,QAAQ,CAAC6B,YAAT,CACrCJ,UAAU,CAACf,IAD0B,CAEpC,EAFF;AAGAS,MAAAA,MAAM,CAACK,GAAP,CACE,OAAMI,OAAQ,yBAAwB3B,cAAc,CAAC,CACrDwB,UAAU,CAACK,WAAX,CAAuBL,UAAU,CAACf,IAAlC,EAAwCO,KAAK,CAACc,OAA9C,CADqD,CAAD,CAElD,KAHJ;AAKAT,MAAAA,OAAO,CAACU,IAAR,CAAc,GAAEJ,OAAQ,OAAMH,UAAU,CAACf,IAAK,EAA9C;AACA;;AACD,QAAIY,OAAO,CAACW,MAAR,GAAiB,CAArB,EAAwB;AACvBd,MAAAA,MAAM,CAACK,GAAP,CAAY,YAAWF,OAAO,CAACY,IAAR,CAAa,IAAb,CAAmB,OAA1C;AACA;;AACD,WAAOf,MAAP;AACA;;AA/DsD;;AAkExDJ,MAAM,CAACO,OAAP,GAAiBnB,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst Template = require(\"../Template\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} ModuleLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {Object} ModuleLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {ModuleLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ModuleLibraryPluginParsed>}\n */\nclass ModuleLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * @param {ModuleLibraryPluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tpluginName: \"ModuleLibraryPlugin\",\n\t\t\ttype: options.type\n\t\t});\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\tconst { name } = library;\n\t\tif (name) {\n\t\t\tthrow new Error(\n\t\t\t\t`Library name must be unset. ${AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE}`\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tname: /** @type {string} */ (name)\n\t\t};\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {Module} module module\n\t * @param {StartupRenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trenderStartup(\n\t\tsource,\n\t\tmodule,\n\t\t{ moduleGraph, chunk },\n\t\t{ options, compilation }\n\t) {\n\t\tconst result = new ConcatSource(source);\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\tconst exports = [];\n\t\tconst isAsync = moduleGraph.isAsync(module);\n\t\tif (isAsync) {\n\t\t\tresult.add(`__webpack_exports__ = await __webpack_exports__;\\n`);\n\t\t}\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tif (!exportInfo.provided) continue;\n\t\t\tconst varName = `__webpack_exports__${Template.toIdentifier(\n\t\t\t\texportInfo.name\n\t\t\t)}`;\n\t\t\tresult.add(\n\t\t\t\t`var ${varName} = __webpack_exports__${propertyAccess([\n\t\t\t\t\texportInfo.getUsedName(exportInfo.name, chunk.runtime)\n\t\t\t\t])};\\n`\n\t\t\t);\n\t\t\texports.push(`${varName} as ${exportInfo.name}`);\n\t\t}\n\t\tif (exports.length > 0) {\n\t\t\tresult.add(`export { ${exports.join(\", \")} };\\n`);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nmodule.exports = ModuleLibraryPlugin;\n"]},"metadata":{},"sourceType":"script"}