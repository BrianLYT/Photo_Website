{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SAFE_LIMIT = 0x80000000;\nconst SAFE_PART = SAFE_LIMIT - 1;\nconst COUNT = 4;\nconst arr = [0, 0, 0, 0, 0];\nconst primes = [3, 7, 17, 19];\n\nmodule.exports = (str, range) => {\n  arr.fill(0);\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    for (let j = 0; j < COUNT; j++) {\n      const p = (j + COUNT - 1) % COUNT;\n      arr[j] = arr[j] + c * primes[j] + arr[p] & SAFE_PART;\n    }\n\n    for (let j = 0; j < COUNT; j++) {\n      const q = arr[j] % COUNT;\n      arr[j] = arr[j] ^ arr[q] >> 1;\n    }\n  }\n\n  if (range <= SAFE_PART) {\n    let sum = 0;\n\n    for (let j = 0; j < COUNT; j++) {\n      sum = (sum + arr[j]) % range;\n    }\n\n    return sum;\n  } else {\n    let sum1 = 0;\n    let sum2 = 0;\n    const rangeExt = Math.floor(range / SAFE_LIMIT);\n\n    for (let j = 0; j < COUNT; j += 2) {\n      sum1 = sum1 + arr[j] & SAFE_PART;\n    }\n\n    for (let j = 1; j < COUNT; j += 2) {\n      sum2 = (sum2 + arr[j]) % rangeExt;\n    }\n\n    return (sum2 * SAFE_LIMIT + sum1) % range;\n  }\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/util/numberHash.js"],"names":["SAFE_LIMIT","SAFE_PART","COUNT","arr","primes","module","exports","str","range","fill","i","length","c","charCodeAt","j","p","q","sum","sum1","sum2","rangeExt","Math","floor"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAG,UAAnB;AACA,MAAMC,SAAS,GAAGD,UAAU,GAAG,CAA/B;AACA,MAAME,KAAK,GAAG,CAAd;AACA,MAAMC,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAZ;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,CAAf;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChCL,EAAAA,GAAG,CAACM,IAAJ,CAAS,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACpC,UAAME,CAAC,GAAGL,GAAG,CAACM,UAAJ,CAAeH,CAAf,CAAV;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2BY,CAAC,EAA5B,EAAgC;AAC/B,YAAMC,CAAC,GAAG,CAACD,CAAC,GAAGZ,KAAJ,GAAY,CAAb,IAAkBA,KAA5B;AACAC,MAAAA,GAAG,CAACW,CAAD,CAAH,GAAUX,GAAG,CAACW,CAAD,CAAH,GAASF,CAAC,GAAGR,MAAM,CAACU,CAAD,CAAnB,GAAyBX,GAAG,CAACY,CAAD,CAA7B,GAAoCd,SAA7C;AACA;;AACD,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2BY,CAAC,EAA5B,EAAgC;AAC/B,YAAME,CAAC,GAAGb,GAAG,CAACW,CAAD,CAAH,GAASZ,KAAnB;AACAC,MAAAA,GAAG,CAACW,CAAD,CAAH,GAASX,GAAG,CAACW,CAAD,CAAH,GAAUX,GAAG,CAACa,CAAD,CAAH,IAAU,CAA7B;AACA;AACD;;AACD,MAAIR,KAAK,IAAIP,SAAb,EAAwB;AACvB,QAAIgB,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2BY,CAAC,EAA5B,EAAgC;AAC/BG,MAAAA,GAAG,GAAG,CAACA,GAAG,GAAGd,GAAG,CAACW,CAAD,CAAV,IAAiBN,KAAvB;AACA;;AACD,WAAOS,GAAP;AACA,GAND,MAMO;AACN,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWd,KAAK,GAAGR,UAAnB,CAAjB;;AACA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2BY,CAAC,IAAI,CAAhC,EAAmC;AAClCI,MAAAA,IAAI,GAAIA,IAAI,GAAGf,GAAG,CAACW,CAAD,CAAX,GAAkBb,SAAzB;AACA;;AACD,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAApB,EAA2BY,CAAC,IAAI,CAAhC,EAAmC;AAClCK,MAAAA,IAAI,GAAG,CAACA,IAAI,GAAGhB,GAAG,CAACW,CAAD,CAAX,IAAkBM,QAAzB;AACA;;AACD,WAAO,CAACD,IAAI,GAAGnB,UAAP,GAAoBkB,IAArB,IAA6BV,KAApC;AACA;AACD,CA/BD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst SAFE_LIMIT = 0x80000000;\nconst SAFE_PART = SAFE_LIMIT - 1;\nconst COUNT = 4;\nconst arr = [0, 0, 0, 0, 0];\nconst primes = [3, 7, 17, 19];\n\nmodule.exports = (str, range) => {\n\tarr.fill(0);\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst c = str.charCodeAt(i);\n\t\tfor (let j = 0; j < COUNT; j++) {\n\t\t\tconst p = (j + COUNT - 1) % COUNT;\n\t\t\tarr[j] = (arr[j] + c * primes[j] + arr[p]) & SAFE_PART;\n\t\t}\n\t\tfor (let j = 0; j < COUNT; j++) {\n\t\t\tconst q = arr[j] % COUNT;\n\t\t\tarr[j] = arr[j] ^ (arr[q] >> 1);\n\t\t}\n\t}\n\tif (range <= SAFE_PART) {\n\t\tlet sum = 0;\n\t\tfor (let j = 0; j < COUNT; j++) {\n\t\t\tsum = (sum + arr[j]) % range;\n\t\t}\n\t\treturn sum;\n\t} else {\n\t\tlet sum1 = 0;\n\t\tlet sum2 = 0;\n\t\tconst rangeExt = Math.floor(range / SAFE_LIMIT);\n\t\tfor (let j = 0; j < COUNT; j += 2) {\n\t\t\tsum1 = (sum1 + arr[j]) & SAFE_PART;\n\t\t}\n\t\tfor (let j = 1; j < COUNT; j += 2) {\n\t\t\tsum2 = (sum2 + arr[j]) % rangeExt;\n\t\t}\n\t\treturn (sum2 * SAFE_LIMIT + sum1) % range;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}