{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst {\n  evaluateToString,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n  constructor(warn) {\n    this.warn = warn;\n  }\n\n  apply(parser) {\n    const {\n      warn\n    } = this;\n    parser.hooks.call.for(\"require.include\").tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n      if (expr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n      if (!param.isString()) return;\n\n      if (warn) {\n        parser.state.module.addWarning(new RequireIncludeDeprecationWarning(expr.loc));\n      }\n\n      const dep = new RequireIncludeDependency(param.string, expr.range);\n      dep.loc = expr.loc;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.evaluateTypeof.for(\"require.include\").tap(\"RequireIncludePlugin\", expr => {\n      if (warn) {\n        parser.state.module.addWarning(new RequireIncludeDeprecationWarning(expr.loc));\n      }\n\n      return evaluateToString(\"function\")(expr);\n    });\n    parser.hooks.typeof.for(\"require.include\").tap(\"RequireIncludePlugin\", expr => {\n      if (warn) {\n        parser.state.module.addWarning(new RequireIncludeDeprecationWarning(expr.loc));\n      }\n\n      return toConstantDependency(parser, JSON.stringify(\"function\"))(expr);\n    });\n  }\n\n};\n\nclass RequireIncludeDeprecationWarning extends WebpackError {\n  constructor(loc) {\n    super(\"require.include() is deprecated and will be removed soon.\");\n    this.name = \"RequireIncludeDeprecationWarning\";\n    this.loc = loc;\n  }\n\n}\n\nmakeSerializable(RequireIncludeDeprecationWarning, \"webpack/lib/dependencies/RequireIncludeDependencyParserPlugin\", \"RequireIncludeDeprecationWarning\");","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/RequireIncludeDependencyParserPlugin.js"],"names":["WebpackError","require","evaluateToString","toConstantDependency","makeSerializable","RequireIncludeDependency","module","exports","RequireIncludeDependencyParserPlugin","constructor","warn","apply","parser","hooks","call","for","tap","expr","arguments","length","param","evaluateExpression","isString","state","addWarning","RequireIncludeDeprecationWarning","loc","dep","string","range","current","addDependency","evaluateTypeof","typeof","JSON","stringify","name"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;AACLC,EAAAA,gBADK;AAELC,EAAAA;AAFK,IAGFF,OAAO,CAAC,uCAAD,CAHX;;AAIA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMI,wBAAwB,GAAGJ,OAAO,CAAC,4BAAD,CAAxC;;AAEAK,MAAM,CAACC,OAAP,GAAiB,MAAMC,oCAAN,CAA2C;AAC3DC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AACDC,EAAAA,KAAK,CAACC,MAAD,EAAS;AACb,UAAM;AAAEF,MAAAA;AAAF,QAAW,IAAjB;AACAE,IAAAA,MAAM,CAACC,KAAP,CAAaC,IAAb,CACEC,GADF,CACM,iBADN,EAEEC,GAFF,CAEM,sCAFN,EAE8CC,IAAI,IAAI;AACpD,UAAIA,IAAI,CAACC,SAAL,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AACjC,YAAMC,KAAK,GAAGR,MAAM,CAACS,kBAAP,CAA0BJ,IAAI,CAACC,SAAL,CAAe,CAAf,CAA1B,CAAd;AACA,UAAI,CAACE,KAAK,CAACE,QAAN,EAAL,EAAuB;;AAEvB,UAAIZ,IAAJ,EAAU;AACTE,QAAAA,MAAM,CAACW,KAAP,CAAajB,MAAb,CAAoBkB,UAApB,CACC,IAAIC,gCAAJ,CAAqCR,IAAI,CAACS,GAA1C,CADD;AAGA;;AAED,YAAMC,GAAG,GAAG,IAAItB,wBAAJ,CAA6Be,KAAK,CAACQ,MAAnC,EAA2CX,IAAI,CAACY,KAAhD,CAAZ;AACAF,MAAAA,GAAG,CAACD,GAAJ,GAAUT,IAAI,CAACS,GAAf;AACAd,MAAAA,MAAM,CAACW,KAAP,CAAaO,OAAb,CAAqBC,aAArB,CAAmCJ,GAAnC;AACA,aAAO,IAAP;AACA,KAjBF;AAkBAf,IAAAA,MAAM,CAACC,KAAP,CAAamB,cAAb,CACEjB,GADF,CACM,iBADN,EAEEC,GAFF,CAEM,sBAFN,EAE8BC,IAAI,IAAI;AACpC,UAAIP,IAAJ,EAAU;AACTE,QAAAA,MAAM,CAACW,KAAP,CAAajB,MAAb,CAAoBkB,UAApB,CACC,IAAIC,gCAAJ,CAAqCR,IAAI,CAACS,GAA1C,CADD;AAGA;;AACD,aAAOxB,gBAAgB,CAAC,UAAD,CAAhB,CAA6Be,IAA7B,CAAP;AACA,KATF;AAUAL,IAAAA,MAAM,CAACC,KAAP,CAAaoB,MAAb,CACElB,GADF,CACM,iBADN,EAEEC,GAFF,CAEM,sBAFN,EAE8BC,IAAI,IAAI;AACpC,UAAIP,IAAJ,EAAU;AACTE,QAAAA,MAAM,CAACW,KAAP,CAAajB,MAAb,CAAoBkB,UAApB,CACC,IAAIC,gCAAJ,CAAqCR,IAAI,CAACS,GAA1C,CADD;AAGA;;AACD,aAAOvB,oBAAoB,CAACS,MAAD,EAASsB,IAAI,CAACC,SAAL,CAAe,UAAf,CAAT,CAApB,CAAyDlB,IAAzD,CAAP;AACA,KATF;AAUA;;AA5C0D,CAA5D;;AA+CA,MAAMQ,gCAAN,SAA+CzB,YAA/C,CAA4D;AAC3DS,EAAAA,WAAW,CAACiB,GAAD,EAAM;AAChB,UAAM,2DAAN;AAEA,SAAKU,IAAL,GAAY,kCAAZ;AAEA,SAAKV,GAAL,GAAWA,GAAX;AACA;;AAP0D;;AAU5DtB,gBAAgB,CACfqB,gCADe,EAEf,+DAFe,EAGf,kCAHe,CAAhB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst {\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports = class RequireIncludeDependencyParserPlugin {\n\tconstructor(warn) {\n\t\tthis.warn = warn;\n\t}\n\tapply(parser) {\n\t\tconst { warn } = this;\n\t\tparser.hooks.call\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludeDependencyParserPlugin\", expr => {\n\t\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (!param.isString()) return;\n\n\t\t\t\tif (warn) {\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew RequireIncludeDeprecationWarning(expr.loc)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst dep = new RequireIncludeDependency(param.string, expr.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.evaluateTypeof\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludePlugin\", expr => {\n\t\t\t\tif (warn) {\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew RequireIncludeDeprecationWarning(expr.loc)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn evaluateToString(\"function\")(expr);\n\t\t\t});\n\t\tparser.hooks.typeof\n\t\t\t.for(\"require.include\")\n\t\t\t.tap(\"RequireIncludePlugin\", expr => {\n\t\t\t\tif (warn) {\n\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\tnew RequireIncludeDeprecationWarning(expr.loc)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn toConstantDependency(parser, JSON.stringify(\"function\"))(expr);\n\t\t\t});\n\t}\n};\n\nclass RequireIncludeDeprecationWarning extends WebpackError {\n\tconstructor(loc) {\n\t\tsuper(\"require.include() is deprecated and will be removed soon.\");\n\n\t\tthis.name = \"RequireIncludeDeprecationWarning\";\n\n\t\tthis.loc = loc;\n\t}\n}\n\nmakeSerializable(\n\tRequireIncludeDeprecationWarning,\n\t\"webpack/lib/dependencies/RequireIncludeDependencyParserPlugin\",\n\t\"RequireIncludeDeprecationWarning\"\n);\n"]},"metadata":{},"sourceType":"script"}