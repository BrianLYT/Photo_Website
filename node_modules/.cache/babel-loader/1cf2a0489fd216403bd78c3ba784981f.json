{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  ConcatSource,\n  RawSource,\n  CachedSource\n} = require(\"webpack-sources\");\n\nconst {\n  UsageState\n} = require(\"./ExportsInfo\");\n\nconst Template = require(\"./Template\");\n\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n\n/** @typedef {import(\"./ExportsInfo\").ExportInfo} ExportInfo */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n\nconst joinIterableWithComma = iterable => {\n  // This is more performant than Array.from().join(\", \")\n  // as it doesn't create an array\n  let str = \"\";\n  let first = true;\n\n  for (const item of iterable) {\n    if (first) {\n      first = false;\n    } else {\n      str += \", \";\n    }\n\n    str += item;\n  }\n\n  return str;\n};\n/**\n * @param {ConcatSource} source output\n * @param {string} indent spacing\n * @param {ExportsInfo} exportsInfo data\n * @param {ModuleGraph} moduleGraph moduleGraph\n * @param {RequestShortener} requestShortener requestShortener\n * @param {Set<ExportInfo>} alreadyPrinted deduplication set\n * @returns {void}\n */\n\n\nconst printExportsInfoToSource = function (source, indent, exportsInfo, moduleGraph, requestShortener) {\n  let alreadyPrinted = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Set();\n  const otherExportsInfo = exportsInfo.otherExportsInfo;\n  let alreadyPrintedExports = 0; // determine exports to print\n\n  const printedExports = [];\n\n  for (const exportInfo of exportsInfo.orderedExports) {\n    if (!alreadyPrinted.has(exportInfo)) {\n      alreadyPrinted.add(exportInfo);\n      printedExports.push(exportInfo);\n    } else {\n      alreadyPrintedExports++;\n    }\n  }\n\n  let showOtherExports = false;\n\n  if (!alreadyPrinted.has(otherExportsInfo)) {\n    alreadyPrinted.add(otherExportsInfo);\n    showOtherExports = true;\n  } else {\n    alreadyPrintedExports++;\n  } // print the exports\n\n\n  for (const exportInfo of printedExports) {\n    const target = exportInfo.getTarget(moduleGraph);\n    source.add(Template.toComment(`${indent}export ${JSON.stringify(exportInfo.name).slice(1, -1)} [${exportInfo.getProvidedInfo()}] [${exportInfo.getUsedInfo()}] [${exportInfo.getRenameInfo()}]${target ? ` -> ${target.module.readableIdentifier(requestShortener)}${target.export ? ` .${target.export.map(e => JSON.stringify(e).slice(1, -1)).join(\".\")}` : \"\"}` : \"\"}`) + \"\\n\");\n\n    if (exportInfo.exportsInfo) {\n      printExportsInfoToSource(source, indent + \"  \", exportInfo.exportsInfo, moduleGraph, requestShortener, alreadyPrinted);\n    }\n  }\n\n  if (alreadyPrintedExports) {\n    source.add(Template.toComment(`${indent}... (${alreadyPrintedExports} already listed exports)`) + \"\\n\");\n  }\n\n  if (showOtherExports) {\n    const target = otherExportsInfo.getTarget(moduleGraph);\n\n    if (target || otherExportsInfo.provided !== false || otherExportsInfo.getUsed(undefined) !== UsageState.Unused) {\n      const title = printedExports.length > 0 || alreadyPrintedExports > 0 ? \"other exports\" : \"exports\";\n      source.add(Template.toComment(`${indent}${title} [${otherExportsInfo.getProvidedInfo()}] [${otherExportsInfo.getUsedInfo()}]${target ? ` -> ${target.module.readableIdentifier(requestShortener)}` : \"\"}`) + \"\\n\");\n    }\n  }\n};\n/** @type {WeakMap<RequestShortener, WeakMap<Module, { header: RawSource, full: WeakMap<Source, CachedSource> }>>} */\n\n\nconst caches = new WeakMap();\n\nclass ModuleInfoHeaderPlugin {\n  /**\n   * @param {boolean=} verbose add more information like exports, runtime requirements and bailouts\n   */\n  constructor() {\n    let verbose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this._verbose = verbose;\n  }\n  /**\n   * @param {Compiler} compiler the compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const {\n      _verbose: verbose\n    } = this;\n    compiler.hooks.compilation.tap(\"ModuleInfoHeaderPlugin\", compilation => {\n      const hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n      hooks.renderModulePackage.tap(\"ModuleInfoHeaderPlugin\", (moduleSource, module, _ref) => {\n        let {\n          chunk,\n          chunkGraph,\n          moduleGraph,\n          runtimeTemplate\n        } = _ref;\n        const {\n          requestShortener\n        } = runtimeTemplate;\n        let cacheEntry;\n        let cache = caches.get(requestShortener);\n\n        if (cache === undefined) {\n          caches.set(requestShortener, cache = new WeakMap());\n          cache.set(module, cacheEntry = {\n            header: undefined,\n            full: new WeakMap()\n          });\n        } else {\n          cacheEntry = cache.get(module);\n\n          if (cacheEntry === undefined) {\n            cache.set(module, cacheEntry = {\n              header: undefined,\n              full: new WeakMap()\n            });\n          } else if (!verbose) {\n            const cachedSource = cacheEntry.full.get(moduleSource);\n            if (cachedSource !== undefined) return cachedSource;\n          }\n        }\n\n        const source = new ConcatSource();\n        let header = cacheEntry.header;\n\n        if (header === undefined) {\n          const req = module.readableIdentifier(requestShortener);\n          const reqStr = req.replace(/\\*\\//g, \"*_/\");\n          const reqStrStar = \"*\".repeat(reqStr.length);\n          const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n          header = new RawSource(headerStr);\n          cacheEntry.header = header;\n        }\n\n        source.add(header);\n\n        if (verbose) {\n          const exportsType = module.buildMeta.exportsType;\n          source.add(Template.toComment(exportsType ? `${exportsType} exports` : \"unknown exports (runtime-defined)\") + \"\\n\");\n\n          if (exportsType) {\n            const exportsInfo = moduleGraph.getExportsInfo(module);\n            printExportsInfoToSource(source, \"\", exportsInfo, moduleGraph, requestShortener);\n          }\n\n          source.add(Template.toComment(`runtime requirements: ${joinIterableWithComma(chunkGraph.getModuleRuntimeRequirements(module, chunk.runtime))}`) + \"\\n\");\n          const optimizationBailout = moduleGraph.getOptimizationBailout(module);\n\n          if (optimizationBailout) {\n            for (const text of optimizationBailout) {\n              let code;\n\n              if (typeof text === \"function\") {\n                code = text(requestShortener);\n              } else {\n                code = text;\n              }\n\n              source.add(Template.toComment(`${code}`) + \"\\n\");\n            }\n          }\n\n          source.add(moduleSource);\n          return source;\n        } else {\n          source.add(moduleSource);\n          const cachedSource = new CachedSource(source);\n          cacheEntry.full.set(moduleSource, cachedSource);\n          return cachedSource;\n        }\n      });\n      hooks.chunkHash.tap(\"ModuleInfoHeaderPlugin\", (chunk, hash) => {\n        hash.update(\"ModuleInfoHeaderPlugin\");\n        hash.update(\"1\");\n      });\n    });\n  }\n\n}\n\nmodule.exports = ModuleInfoHeaderPlugin;","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/ModuleInfoHeaderPlugin.js"],"names":["ConcatSource","RawSource","CachedSource","require","UsageState","Template","JavascriptModulesPlugin","joinIterableWithComma","iterable","str","first","item","printExportsInfoToSource","source","indent","exportsInfo","moduleGraph","requestShortener","alreadyPrinted","Set","otherExportsInfo","alreadyPrintedExports","printedExports","exportInfo","orderedExports","has","add","push","showOtherExports","target","getTarget","toComment","JSON","stringify","name","slice","getProvidedInfo","getUsedInfo","getRenameInfo","module","readableIdentifier","export","map","e","join","provided","getUsed","undefined","Unused","title","length","caches","WeakMap","ModuleInfoHeaderPlugin","constructor","verbose","_verbose","apply","compiler","hooks","compilation","tap","getCompilationHooks","renderModulePackage","moduleSource","chunk","chunkGraph","runtimeTemplate","cacheEntry","cache","get","set","header","full","cachedSource","req","reqStr","replace","reqStrStar","repeat","headerStr","exportsType","buildMeta","getExportsInfo","getModuleRuntimeRequirements","runtime","optimizationBailout","getOptimizationBailout","text","code","chunkHash","hash","update","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,IAA4CC,OAAO,CAAC,iBAAD,CAAzD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAiBD,OAAO,CAAC,eAAD,CAA9B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,sCAAD,CAAvC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMI,qBAAqB,GAAGC,QAAQ,IAAI;AACzC;AACA;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAK,GAAG,IAAZ;;AACA,OAAK,MAAMC,IAAX,IAAmBH,QAAnB,EAA6B;AAC5B,QAAIE,KAAJ,EAAW;AACVA,MAAAA,KAAK,GAAG,KAAR;AACA,KAFD,MAEO;AACND,MAAAA,GAAG,IAAI,IAAP;AACA;;AACDA,IAAAA,GAAG,IAAIE,IAAP;AACA;;AACD,SAAOF,GAAP;AACA,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,wBAAwB,GAAG,UAChCC,MADgC,EAEhCC,MAFgC,EAGhCC,WAHgC,EAIhCC,WAJgC,EAKhCC,gBALgC,EAO5B;AAAA,MADJC,cACI,uEADa,IAAIC,GAAJ,EACb;AACJ,QAAMC,gBAAgB,GAAGL,WAAW,CAACK,gBAArC;AAEA,MAAIC,qBAAqB,GAAG,CAA5B,CAHI,CAKJ;;AACA,QAAMC,cAAc,GAAG,EAAvB;;AACA,OAAK,MAAMC,UAAX,IAAyBR,WAAW,CAACS,cAArC,EAAqD;AACpD,QAAI,CAACN,cAAc,CAACO,GAAf,CAAmBF,UAAnB,CAAL,EAAqC;AACpCL,MAAAA,cAAc,CAACQ,GAAf,CAAmBH,UAAnB;AACAD,MAAAA,cAAc,CAACK,IAAf,CAAoBJ,UAApB;AACA,KAHD,MAGO;AACNF,MAAAA,qBAAqB;AACrB;AACD;;AACD,MAAIO,gBAAgB,GAAG,KAAvB;;AACA,MAAI,CAACV,cAAc,CAACO,GAAf,CAAmBL,gBAAnB,CAAL,EAA2C;AAC1CF,IAAAA,cAAc,CAACQ,GAAf,CAAmBN,gBAAnB;AACAQ,IAAAA,gBAAgB,GAAG,IAAnB;AACA,GAHD,MAGO;AACNP,IAAAA,qBAAqB;AACrB,GArBG,CAuBJ;;;AACA,OAAK,MAAME,UAAX,IAAyBD,cAAzB,EAAyC;AACxC,UAAMO,MAAM,GAAGN,UAAU,CAACO,SAAX,CAAqBd,WAArB,CAAf;AACAH,IAAAA,MAAM,CAACa,GAAP,CACCrB,QAAQ,CAAC0B,SAAT,CACE,GAAEjB,MAAO,UAASkB,IAAI,CAACC,SAAL,CAAeV,UAAU,CAACW,IAA1B,EAAgCC,KAAhC,CAClB,CADkB,EAElB,CAAC,CAFiB,CAGjB,KAAIZ,UAAU,CAACa,eAAX,EAA6B,MAAKb,UAAU,CAACc,WAAX,EAAyB,MAAKd,UAAU,CAACe,aAAX,EAA2B,IAChGT,MAAM,GACF,OAAMA,MAAM,CAACU,MAAP,CAAcC,kBAAd,CAAiCvB,gBAAjC,CAAmD,GAC1DY,MAAM,CAACY,MAAP,GACI,KAAIZ,MAAM,CAACY,MAAP,CACJC,GADI,CACAC,CAAC,IAAIX,IAAI,CAACC,SAAL,CAAeU,CAAf,EAAkBR,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CADL,EAEJS,IAFI,CAEC,GAFD,CAEM,EAHd,GAIG,EACF,EAPE,GAQH,EACH,EAdF,IAeI,IAhBL;;AAkBA,QAAIrB,UAAU,CAACR,WAAf,EAA4B;AAC3BH,MAAAA,wBAAwB,CACvBC,MADuB,EAEvBC,MAAM,GAAG,IAFc,EAGvBS,UAAU,CAACR,WAHY,EAIvBC,WAJuB,EAKvBC,gBALuB,EAMvBC,cANuB,CAAxB;AAQA;AACD;;AAED,MAAIG,qBAAJ,EAA2B;AAC1BR,IAAAA,MAAM,CAACa,GAAP,CACCrB,QAAQ,CAAC0B,SAAT,CACE,GAAEjB,MAAO,QAAOO,qBAAsB,0BADxC,IAEI,IAHL;AAKA;;AAED,MAAIO,gBAAJ,EAAsB;AACrB,UAAMC,MAAM,GAAGT,gBAAgB,CAACU,SAAjB,CAA2Bd,WAA3B,CAAf;;AACA,QACCa,MAAM,IACNT,gBAAgB,CAACyB,QAAjB,KAA8B,KAD9B,IAEAzB,gBAAgB,CAAC0B,OAAjB,CAAyBC,SAAzB,MAAwC3C,UAAU,CAAC4C,MAHpD,EAIE;AACD,YAAMC,KAAK,GACV3B,cAAc,CAAC4B,MAAf,GAAwB,CAAxB,IAA6B7B,qBAAqB,GAAG,CAArD,GACG,eADH,GAEG,SAHJ;AAIAR,MAAAA,MAAM,CAACa,GAAP,CACCrB,QAAQ,CAAC0B,SAAT,CACE,GAAEjB,MAAO,GAAEmC,KAAM,KAAI7B,gBAAgB,CAACgB,eAAjB,EAAmC,MAAKhB,gBAAgB,CAACiB,WAAjB,EAA+B,IAC5FR,MAAM,GACF,OAAMA,MAAM,CAACU,MAAP,CAAcC,kBAAd,CAAiCvB,gBAAjC,CAAmD,EADvD,GAEH,EACH,EALF,IAMI,IAPL;AASA;AACD;AACD,CA7FD;AA+FA;;;AACA,MAAMkC,MAAM,GAAG,IAAIC,OAAJ,EAAf;;AAEA,MAAMC,sBAAN,CAA6B;AAC5B;AACD;AACA;AACCC,EAAAA,WAAW,GAAiB;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;AAC3B,SAAKC,QAAL,GAAgBD,OAAhB;AACA;AACD;AACD;AACA;AACA;;;AACCE,EAAAA,KAAK,CAACC,QAAD,EAAW;AACf,UAAM;AAAEF,MAAAA,QAAQ,EAAED;AAAZ,QAAwB,IAA9B;AACAG,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,wBAA/B,EAAyDD,WAAW,IAAI;AACvE,YAAMD,KAAK,GAAGrD,uBAAuB,CAACwD,mBAAxB,CAA4CF,WAA5C,CAAd;AACAD,MAAAA,KAAK,CAACI,mBAAN,CAA0BF,GAA1B,CACC,wBADD,EAEC,CACCG,YADD,EAECzB,MAFD,WAIK;AAAA,YADJ;AAAE0B,UAAAA,KAAF;AAASC,UAAAA,UAAT;AAAqBlD,UAAAA,WAArB;AAAkCmD,UAAAA;AAAlC,SACI;AACJ,cAAM;AAAElD,UAAAA;AAAF,YAAuBkD,eAA7B;AACA,YAAIC,UAAJ;AACA,YAAIC,KAAK,GAAGlB,MAAM,CAACmB,GAAP,CAAWrD,gBAAX,CAAZ;;AACA,YAAIoD,KAAK,KAAKtB,SAAd,EAAyB;AACxBI,UAAAA,MAAM,CAACoB,GAAP,CAAWtD,gBAAX,EAA8BoD,KAAK,GAAG,IAAIjB,OAAJ,EAAtC;AACAiB,UAAAA,KAAK,CAACE,GAAN,CACChC,MADD,EAEE6B,UAAU,GAAG;AAAEI,YAAAA,MAAM,EAAEzB,SAAV;AAAqB0B,YAAAA,IAAI,EAAE,IAAIrB,OAAJ;AAA3B,WAFf;AAIA,SAND,MAMO;AACNgB,UAAAA,UAAU,GAAGC,KAAK,CAACC,GAAN,CAAU/B,MAAV,CAAb;;AACA,cAAI6B,UAAU,KAAKrB,SAAnB,EAA8B;AAC7BsB,YAAAA,KAAK,CAACE,GAAN,CACChC,MADD,EAEE6B,UAAU,GAAG;AAAEI,cAAAA,MAAM,EAAEzB,SAAV;AAAqB0B,cAAAA,IAAI,EAAE,IAAIrB,OAAJ;AAA3B,aAFf;AAIA,WALD,MAKO,IAAI,CAACG,OAAL,EAAc;AACpB,kBAAMmB,YAAY,GAAGN,UAAU,CAACK,IAAX,CAAgBH,GAAhB,CAAoBN,YAApB,CAArB;AACA,gBAAIU,YAAY,KAAK3B,SAArB,EAAgC,OAAO2B,YAAP;AAChC;AACD;;AACD,cAAM7D,MAAM,GAAG,IAAIb,YAAJ,EAAf;AACA,YAAIwE,MAAM,GAAGJ,UAAU,CAACI,MAAxB;;AACA,YAAIA,MAAM,KAAKzB,SAAf,EAA0B;AACzB,gBAAM4B,GAAG,GAAGpC,MAAM,CAACC,kBAAP,CAA0BvB,gBAA1B,CAAZ;AACA,gBAAM2D,MAAM,GAAGD,GAAG,CAACE,OAAJ,CAAY,OAAZ,EAAqB,KAArB,CAAf;AACA,gBAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWH,MAAM,CAAC1B,MAAlB,CAAnB;AACA,gBAAM8B,SAAS,GAAI,UAASF,UAAW,oBAAmBF,MAAO,kBAAiBE,UAAW,SAA7F;AACAN,UAAAA,MAAM,GAAG,IAAIvE,SAAJ,CAAc+E,SAAd,CAAT;AACAZ,UAAAA,UAAU,CAACI,MAAX,GAAoBA,MAApB;AACA;;AACD3D,QAAAA,MAAM,CAACa,GAAP,CAAW8C,MAAX;;AACA,YAAIjB,OAAJ,EAAa;AACZ,gBAAM0B,WAAW,GAAG1C,MAAM,CAAC2C,SAAP,CAAiBD,WAArC;AACApE,UAAAA,MAAM,CAACa,GAAP,CACCrB,QAAQ,CAAC0B,SAAT,CACCkD,WAAW,GACP,GAAEA,WAAY,UADP,GAER,mCAHJ,IAII,IALL;;AAOA,cAAIA,WAAJ,EAAiB;AAChB,kBAAMlE,WAAW,GAAGC,WAAW,CAACmE,cAAZ,CAA2B5C,MAA3B,CAApB;AACA3B,YAAAA,wBAAwB,CACvBC,MADuB,EAEvB,EAFuB,EAGvBE,WAHuB,EAIvBC,WAJuB,EAKvBC,gBALuB,CAAxB;AAOA;;AACDJ,UAAAA,MAAM,CAACa,GAAP,CACCrB,QAAQ,CAAC0B,SAAT,CACE,yBAAwBxB,qBAAqB,CAC7C2D,UAAU,CAACkB,4BAAX,CAAwC7C,MAAxC,EAAgD0B,KAAK,CAACoB,OAAtD,CAD6C,CAE5C,EAHH,IAII,IALL;AAOA,gBAAMC,mBAAmB,GACxBtE,WAAW,CAACuE,sBAAZ,CAAmChD,MAAnC,CADD;;AAEA,cAAI+C,mBAAJ,EAAyB;AACxB,iBAAK,MAAME,IAAX,IAAmBF,mBAAnB,EAAwC;AACvC,kBAAIG,IAAJ;;AACA,kBAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC/BC,gBAAAA,IAAI,GAAGD,IAAI,CAACvE,gBAAD,CAAX;AACA,eAFD,MAEO;AACNwE,gBAAAA,IAAI,GAAGD,IAAP;AACA;;AACD3E,cAAAA,MAAM,CAACa,GAAP,CAAWrB,QAAQ,CAAC0B,SAAT,CAAoB,GAAE0D,IAAK,EAA3B,IAAgC,IAA3C;AACA;AACD;;AACD5E,UAAAA,MAAM,CAACa,GAAP,CAAWsC,YAAX;AACA,iBAAOnD,MAAP;AACA,SAzCD,MAyCO;AACNA,UAAAA,MAAM,CAACa,GAAP,CAAWsC,YAAX;AACA,gBAAMU,YAAY,GAAG,IAAIxE,YAAJ,CAAiBW,MAAjB,CAArB;AACAuD,UAAAA,UAAU,CAACK,IAAX,CAAgBF,GAAhB,CAAoBP,YAApB,EAAkCU,YAAlC;AACA,iBAAOA,YAAP;AACA;AACD,OAtFF;AAwFAf,MAAAA,KAAK,CAAC+B,SAAN,CAAgB7B,GAAhB,CAAoB,wBAApB,EAA8C,CAACI,KAAD,EAAQ0B,IAAR,KAAiB;AAC9DA,QAAAA,IAAI,CAACC,MAAL,CAAY,wBAAZ;AACAD,QAAAA,IAAI,CAACC,MAAL,CAAY,GAAZ;AACA,OAHD;AAIA,KA9FD;AA+FA;;AA5G2B;;AA8G7BrD,MAAM,CAACsD,OAAP,GAAiBxC,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource, CachedSource } = require(\"webpack-sources\");\nconst { UsageState } = require(\"./ExportsInfo\");\nconst Template = require(\"./Template\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\nconst joinIterableWithComma = iterable => {\n\t// This is more performant than Array.from().join(\", \")\n\t// as it doesn't create an array\n\tlet str = \"\";\n\tlet first = true;\n\tfor (const item of iterable) {\n\t\tif (first) {\n\t\t\tfirst = false;\n\t\t} else {\n\t\t\tstr += \", \";\n\t\t}\n\t\tstr += item;\n\t}\n\treturn str;\n};\n\n/**\n * @param {ConcatSource} source output\n * @param {string} indent spacing\n * @param {ExportsInfo} exportsInfo data\n * @param {ModuleGraph} moduleGraph moduleGraph\n * @param {RequestShortener} requestShortener requestShortener\n * @param {Set<ExportInfo>} alreadyPrinted deduplication set\n * @returns {void}\n */\nconst printExportsInfoToSource = (\n\tsource,\n\tindent,\n\texportsInfo,\n\tmoduleGraph,\n\trequestShortener,\n\talreadyPrinted = new Set()\n) => {\n\tconst otherExportsInfo = exportsInfo.otherExportsInfo;\n\n\tlet alreadyPrintedExports = 0;\n\n\t// determine exports to print\n\tconst printedExports = [];\n\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\tif (!alreadyPrinted.has(exportInfo)) {\n\t\t\talreadyPrinted.add(exportInfo);\n\t\t\tprintedExports.push(exportInfo);\n\t\t} else {\n\t\t\talreadyPrintedExports++;\n\t\t}\n\t}\n\tlet showOtherExports = false;\n\tif (!alreadyPrinted.has(otherExportsInfo)) {\n\t\talreadyPrinted.add(otherExportsInfo);\n\t\tshowOtherExports = true;\n\t} else {\n\t\talreadyPrintedExports++;\n\t}\n\n\t// print the exports\n\tfor (const exportInfo of printedExports) {\n\t\tconst target = exportInfo.getTarget(moduleGraph);\n\t\tsource.add(\n\t\t\tTemplate.toComment(\n\t\t\t\t`${indent}export ${JSON.stringify(exportInfo.name).slice(\n\t\t\t\t\t1,\n\t\t\t\t\t-1\n\t\t\t\t)} [${exportInfo.getProvidedInfo()}] [${exportInfo.getUsedInfo()}] [${exportInfo.getRenameInfo()}]${\n\t\t\t\t\ttarget\n\t\t\t\t\t\t? ` -> ${target.module.readableIdentifier(requestShortener)}${\n\t\t\t\t\t\t\t\ttarget.export\n\t\t\t\t\t\t\t\t\t? ` .${target.export\n\t\t\t\t\t\t\t\t\t\t\t.map(e => JSON.stringify(e).slice(1, -1))\n\t\t\t\t\t\t\t\t\t\t\t.join(\".\")}`\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t  }`\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}`\n\t\t\t) + \"\\n\"\n\t\t);\n\t\tif (exportInfo.exportsInfo) {\n\t\t\tprintExportsInfoToSource(\n\t\t\t\tsource,\n\t\t\t\tindent + \"  \",\n\t\t\t\texportInfo.exportsInfo,\n\t\t\t\tmoduleGraph,\n\t\t\t\trequestShortener,\n\t\t\t\talreadyPrinted\n\t\t\t);\n\t\t}\n\t}\n\n\tif (alreadyPrintedExports) {\n\t\tsource.add(\n\t\t\tTemplate.toComment(\n\t\t\t\t`${indent}... (${alreadyPrintedExports} already listed exports)`\n\t\t\t) + \"\\n\"\n\t\t);\n\t}\n\n\tif (showOtherExports) {\n\t\tconst target = otherExportsInfo.getTarget(moduleGraph);\n\t\tif (\n\t\t\ttarget ||\n\t\t\totherExportsInfo.provided !== false ||\n\t\t\totherExportsInfo.getUsed(undefined) !== UsageState.Unused\n\t\t) {\n\t\t\tconst title =\n\t\t\t\tprintedExports.length > 0 || alreadyPrintedExports > 0\n\t\t\t\t\t? \"other exports\"\n\t\t\t\t\t: \"exports\";\n\t\t\tsource.add(\n\t\t\t\tTemplate.toComment(\n\t\t\t\t\t`${indent}${title} [${otherExportsInfo.getProvidedInfo()}] [${otherExportsInfo.getUsedInfo()}]${\n\t\t\t\t\t\ttarget\n\t\t\t\t\t\t\t? ` -> ${target.module.readableIdentifier(requestShortener)}`\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t}`\n\t\t\t\t) + \"\\n\"\n\t\t\t);\n\t\t}\n\t}\n};\n\n/** @type {WeakMap<RequestShortener, WeakMap<Module, { header: RawSource, full: WeakMap<Source, CachedSource> }>>} */\nconst caches = new WeakMap();\n\nclass ModuleInfoHeaderPlugin {\n\t/**\n\t * @param {boolean=} verbose add more information like exports, runtime requirements and bailouts\n\t */\n\tconstructor(verbose = true) {\n\t\tthis._verbose = verbose;\n\t}\n\t/**\n\t * @param {Compiler} compiler the compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _verbose: verbose } = this;\n\t\tcompiler.hooks.compilation.tap(\"ModuleInfoHeaderPlugin\", compilation => {\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\t\t\thooks.renderModulePackage.tap(\n\t\t\t\t\"ModuleInfoHeaderPlugin\",\n\t\t\t\t(\n\t\t\t\t\tmoduleSource,\n\t\t\t\t\tmodule,\n\t\t\t\t\t{ chunk, chunkGraph, moduleGraph, runtimeTemplate }\n\t\t\t\t) => {\n\t\t\t\t\tconst { requestShortener } = runtimeTemplate;\n\t\t\t\t\tlet cacheEntry;\n\t\t\t\t\tlet cache = caches.get(requestShortener);\n\t\t\t\t\tif (cache === undefined) {\n\t\t\t\t\t\tcaches.set(requestShortener, (cache = new WeakMap()));\n\t\t\t\t\t\tcache.set(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t(cacheEntry = { header: undefined, full: new WeakMap() })\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcacheEntry = cache.get(module);\n\t\t\t\t\t\tif (cacheEntry === undefined) {\n\t\t\t\t\t\t\tcache.set(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t(cacheEntry = { header: undefined, full: new WeakMap() })\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (!verbose) {\n\t\t\t\t\t\t\tconst cachedSource = cacheEntry.full.get(moduleSource);\n\t\t\t\t\t\t\tif (cachedSource !== undefined) return cachedSource;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\tlet header = cacheEntry.header;\n\t\t\t\t\tif (header === undefined) {\n\t\t\t\t\t\tconst req = module.readableIdentifier(requestShortener);\n\t\t\t\t\t\tconst reqStr = req.replace(/\\*\\//g, \"*_/\");\n\t\t\t\t\t\tconst reqStrStar = \"*\".repeat(reqStr.length);\n\t\t\t\t\t\tconst headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n\t\t\t\t\t\theader = new RawSource(headerStr);\n\t\t\t\t\t\tcacheEntry.header = header;\n\t\t\t\t\t}\n\t\t\t\t\tsource.add(header);\n\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\tconst exportsType = module.buildMeta.exportsType;\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\texportsType\n\t\t\t\t\t\t\t\t\t? `${exportsType} exports`\n\t\t\t\t\t\t\t\t\t: \"unknown exports (runtime-defined)\"\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (exportsType) {\n\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\tprintExportsInfoToSource(\n\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\texportsInfo,\n\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\tTemplate.toComment(\n\t\t\t\t\t\t\t\t`runtime requirements: ${joinIterableWithComma(\n\t\t\t\t\t\t\t\t\tchunkGraph.getModuleRuntimeRequirements(module, chunk.runtime)\n\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t) + \"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst optimizationBailout =\n\t\t\t\t\t\t\tmoduleGraph.getOptimizationBailout(module);\n\t\t\t\t\t\tif (optimizationBailout) {\n\t\t\t\t\t\t\tfor (const text of optimizationBailout) {\n\t\t\t\t\t\t\t\tlet code;\n\t\t\t\t\t\t\t\tif (typeof text === \"function\") {\n\t\t\t\t\t\t\t\t\tcode = text(requestShortener);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcode = text;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsource.add(Template.toComment(`${code}`) + \"\\n\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsource.add(moduleSource);\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsource.add(moduleSource);\n\t\t\t\t\t\tconst cachedSource = new CachedSource(source);\n\t\t\t\t\t\tcacheEntry.full.set(moduleSource, cachedSource);\n\t\t\t\t\t\treturn cachedSource;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\thooks.chunkHash.tap(\"ModuleInfoHeaderPlugin\", (chunk, hash) => {\n\t\t\t\thash.update(\"ModuleInfoHeaderPlugin\");\n\t\t\t\thash.update(\"1\");\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = ModuleInfoHeaderPlugin;\n"]},"metadata":{},"sourceType":"script"}