{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DynamicExports = require(\"./DynamicExports\");\n\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\n\nconst HarmonyExports = require(\"./HarmonyExports\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n  constructor(options) {\n    const {\n      topLevelAwait = false\n    } = options || {};\n    this.topLevelAwait = topLevelAwait;\n  }\n\n  apply(parser) {\n    parser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n      const isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n      const isHarmony = isStrictHarmony || ast.body.some(statement => statement.type === \"ImportDeclaration\" || statement.type === \"ExportDefaultDeclaration\" || statement.type === \"ExportNamedDeclaration\" || statement.type === \"ExportAllDeclaration\");\n\n      if (isHarmony) {\n        const module = parser.state.module;\n        const compatDep = new HarmonyCompatibilityDependency();\n        compatDep.loc = {\n          start: {\n            line: -1,\n            column: 0\n          },\n          end: {\n            line: -1,\n            column: 0\n          },\n          index: -3\n        };\n        module.addPresentationalDependency(compatDep);\n        DynamicExports.bailout(parser.state);\n        HarmonyExports.enable(parser.state, isStrictHarmony);\n        parser.scope.isStrict = true;\n      }\n    });\n    parser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", () => {\n      const module = parser.state.module;\n\n      if (!this.topLevelAwait) {\n        throw new Error(\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\");\n      }\n\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        throw new Error(\"Top-level-await is only supported in EcmaScript Modules\");\n      }\n\n      module.buildMeta.async = true;\n    });\n\n    const skipInHarmony = () => {\n      if (HarmonyExports.isEnabled(parser.state)) {\n        return true;\n      }\n    };\n\n    const nullInHarmony = () => {\n      if (HarmonyExports.isEnabled(parser.state)) {\n        return null;\n      }\n    };\n\n    const nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\n    for (const identifier of nonHarmonyIdentifiers) {\n      parser.hooks.evaluateTypeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.typeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.evaluate.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.expression.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.call.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n    }\n  }\n\n};","map":{"version":3,"sources":["G:/0_coding/Side Project/photo-website/node_modules/webpack/lib/dependencies/HarmonyDetectionParserPlugin.js"],"names":["DynamicExports","require","HarmonyCompatibilityDependency","HarmonyExports","module","exports","HarmonyDetectionParserPlugin","constructor","options","topLevelAwait","apply","parser","hooks","program","tap","ast","isStrictHarmony","state","type","isHarmony","body","some","statement","compatDep","loc","start","line","column","end","index","addPresentationalDependency","bailout","enable","scope","isStrict","Error","isEnabled","buildMeta","async","skipInHarmony","nullInHarmony","nonHarmonyIdentifiers","identifier","evaluateTypeof","for","typeof","evaluate","expression","call"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DynamicExports = require(\"./DynamicExports\");\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n\tconstructor(options) {\n\t\tconst { topLevelAwait = false } = options || {};\n\t\tthis.topLevelAwait = topLevelAwait;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n\t\t\tconst isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n\t\t\tconst isHarmony =\n\t\t\t\tisStrictHarmony ||\n\t\t\t\tast.body.some(\n\t\t\t\t\tstatement =>\n\t\t\t\t\t\tstatement.type === \"ImportDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportDefaultDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportNamedDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportAllDeclaration\"\n\t\t\t\t);\n\t\t\tif (isHarmony) {\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst compatDep = new HarmonyCompatibilityDependency();\n\t\t\t\tcompatDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -3\n\t\t\t\t};\n\t\t\t\tmodule.addPresentationalDependency(compatDep);\n\t\t\t\tDynamicExports.bailout(parser.state);\n\t\t\t\tHarmonyExports.enable(parser.state, isStrictHarmony);\n\t\t\t\tparser.scope.isStrict = true;\n\t\t\t}\n\t\t});\n\n\t\tparser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (!this.topLevelAwait) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Top-level-await is only supported in EcmaScript Modules\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodule.buildMeta.async = true;\n\t\t});\n\n\t\tconst skipInHarmony = () => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst nullInHarmony = () => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tconst nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\t\tfor (const identifier of nonHarmonyIdentifiers) {\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.evaluate\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.call\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}